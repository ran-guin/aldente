<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" 
   "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!-- Generated by perltidy on Thu Jan 10 13:41:01 2013 -->
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>lib/perl/Core/alDente/Protocol.pm</title>
<style type="text/css">
<!--
/* default style sheet generated by perltidy */
body {background: #FFFFFF; color: #000000}
pre { color: #000000; 
      background: #FFFFFF;
      font-family: courier;
    } 

.c  { color: #228B22;} /* comment */
.cm { color: #000000;} /* comma */
.co { color: #000000;} /* colon */
.h  { color: #CD5555; font-weight:bold;} /* here-doc-target */
.hh { color: #CD5555; font-style:italic;} /* here-doc-text */
.i  { color: #00688B;} /* identifier */
.j  { color: #CD5555; font-weight:bold;} /* label */
.k  { color: #8B008B; font-weight:bold;} /* keyword */
.m  { color: #FF0000; font-weight:bold;} /* subroutine */
.n  { color: #B452CD;} /* numeric */
.p  { color: #000000;} /* paren */
.pd { color: #228B22; font-style:italic;} /* pod-text */
.pu { color: #000000;} /* punctuation */
.q  { color: #CD5555;} /* quote */
.s  { color: #000000;} /* structure */
.sc { color: #000000;} /* semicolon */
.v  { color: #B452CD;} /* v-string */
.w  { color: #000000;} /* bareword */
-->
</style>
</head>
<body>
<a name="-top-"></a>
<h1>lib/perl/Core/alDente/Protocol.pm</h1>
<!-- BEGIN CODE INDEX --><a name="code-index"></a>
<ul>
<li><a href="#package-alDente::Protocol-">package alDente::Protocol</a>
<ul>
<li><a href="#new-">new</a></li>
<li><a href="#load_configuration-">load_configuration</a></li>
<li><a href="#request_broker-">request_broker</a></li>
<li><a href="#get_parent_pipeline_steps-">get_parent_pipeline_steps</a></li>
<li><a href="#get_child_pipeline_steps-">get_child_pipeline_steps</a></li>
<li><a href="#set_child_pipeline_steps-">set_child_pipeline_steps</a></li>
<li><a href="#set_parent_pipeline_steps-">set_parent_pipeline_steps</a></li>
<li><a href="#get_ready_plates-">get_ready_plates</a></li>
<li><a href="#get_progress-">get_progress</a></li>
<li><a href="#get_completed_plates-">get_completed_plates</a></li>
<li><a href="#build_pipeline_step_condition-">build_pipeline_step_condition</a></li>
<li><a href="#parse_pipeline_step_condition-">parse_pipeline_step_condition</a></li>
<li><a href="#display_pipeline_step-">display_pipeline_step</a></li>
<li><a href="#num_count-">num_count</a></li>
<li><a href="#_plate_action_buttons-">_plate_action_buttons</a></li>
<li><a href="#organize_plate_list-">organize_plate_list</a></li>
<li><a href="#_get_plate_information-">_get_plate_information</a></li>
<li><a href="#_get_library_plate_name-">_get_library_plate_name</a></li>
<li><a href="#display_pipeline_step_actions-">display_pipeline_step_actions</a></li>
<li><a href="#load_API-">load_API</a></li>
<li><a href="#start-">start</a></li>
<li><a href="#new_plate-">new_plate</a></li>
<li><a href="#get_protocol_progress-">get_protocol_progress</a></li>
<li><a href="#get_protocol_options-">get_protocol_options</a></li>
<li><a href="#visible_protocols-">visible_protocols</a></li>
<li><a href="#next_pipeline_options-">next_pipeline_options</a></li>
<li><a href="#new_protocol-">new_protocol</a></li>
<li><a href="#copy_protocol-">copy_protocol</a></li>
<li><a href="#get_Formatted_Values-">get_Formatted_Values</a></li>
<li><a href="#get_New_Step_Name-">get_New_Step_Name</a></li>
<li><a href="#delete_Protocol-">delete_Protocol</a></li>
<li><a href="#delete_Steps-">delete_Steps</a></li>
<li><a href="#reindex_Protocol-">reindex_Protocol</a></li>
<li><a href="#get_protocol_status_options-">get_protocol_status_options</a></li>
<li><a href="#get_grp_access-">get_grp_access</a></li>
<li><a href="#get_protocol_status-">get_protocol_status</a></li>
<li><a href="#set_protocol_status-">set_protocol_status</a></li>
<li><a href="#get_protocols-">get_protocols</a></li>
<li><a href="#convert_to_labeled_list-">convert_to_labeled_list</a></li>
</ul>
</li>
<li><a href="#EOF-">EOF</a></li>
</ul>
<!-- END CODE INDEX -->
<hr />
<!-- contents of filename: lib/perl/Core/alDente/Protocol.pm -->
<pre>
<a name="package-alDente::Protocol-"></a><span class="k">package </span><span class="i">alDente::Protocol</span><span class="sc">;</span>

<span class="k">use</span> <span class="w">strict</span><span class="sc">;</span>
<span class="k">use</span> <span class="w">Data::Dumper</span><span class="sc">;</span>
<span class="k">use</span> <span class="w">CGI</span> <span class="q">qw(:standard)</span><span class="sc">;</span>
<span class="k">use</span> <span class="w">DBI</span><span class="sc">;</span>

<span class="k">use</span> <span class="w">RGTools::RGIO</span><span class="sc">;</span>
<span class="k">use</span> <span class="w">SDB::HTML</span><span class="sc">;</span>
<span class="k">use</span> <span class="w">SDB::CustomSettings</span><span class="sc">;</span>
<span class="k">use</span> <span class="w">alDente::Pipeline</span><span class="sc">;</span>

<span class="k">use</span> <span class="w">vars</span> <span class="q">qw($scanner_mode %Prefix $user_id)</span><span class="sc">;</span>

<a name="new-"></a><span class="k">sub </span><span class="m">new</span> <span class="s">{</span>
    <span class="k">my</span> <span class="i">$this</span>             = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">%args</span>             = <span class="i">@_</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$pipeline</span>         = <span class="i">$args</span>{-<span class="w">pipeline</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$protocol_id</span>      = <span class="i">$args</span>{-<span class="w">id</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$pipeline_step_id</span> = <span class="i">$args</span>{-<span class="w">pipeline_step_id</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$dbc</span>              = <span class="i">$args</span>{-<span class="w">dbc</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$library_filter</span>   = <span class="i">$args</span>{-<span class="w">library_filter</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$library_condition</span><span class="sc">;</span>
    <span class="i">$library_condition</span> = <span class="i">Cast_List</span><span class="s">(</span> -<span class="w">list</span> <span class="cm">=&gt;</span> <span class="i">$args</span>{-<span class="w">library_condition</span>}<span class="cm">,</span> -<span class="w">to</span> <span class="cm">=&gt;</span> <span class="q">'arrayref'</span> <span class="s">)</span> <span class="k">if</span> <span class="s">(</span> <span class="i">$args</span>{-<span class="w">library_condition</span>} <span class="s">)</span><span class="sc">;</span>

    <span class="k">my</span> <span class="s">(</span><span class="i">$class</span><span class="s">)</span> = <span class="k">ref</span><span class="s">(</span><span class="i">$this</span><span class="s">)</span> || <span class="i">$this</span><span class="sc">;</span>
    <span class="k">my</span> <span class="s">(</span><span class="i">$self</span><span class="s">)</span> = <span class="s">{</span><span class="s">}</span><span class="sc">;</span>

    <span class="c">## Initialize Attributes</span>
    <span class="i">$self</span>-&gt;{<span class="w">protocol_id</span>}           = <span class="i">$protocol_id</span><span class="sc">;</span>
    <span class="i">$self</span>-&gt;{<span class="w">pipeline</span>}              = <span class="i">$pipeline</span><span class="sc">;</span>
    <span class="i">$self</span>-&gt;{<span class="w">pipeline_step_id</span>}      = <span class="i">$pipeline_step_id</span><span class="sc">;</span>
    <span class="i">$self</span>-&gt;{<span class="w">parent_pipeline_steps</span>} = <span class="s">[</span><span class="s">]</span><span class="sc">;</span>
    <span class="i">$self</span>-&gt;{<span class="w">child_pipeline_steps</span>}  = <span class="s">[</span><span class="s">]</span><span class="sc">;</span>
    <span class="i">$self</span>-&gt;{<span class="w">API_loaded</span>}            = <span class="n">0</span><span class="sc">;</span>
    <span class="i">$self</span>-&gt;{<span class="w">library_filter</span>}        = <span class="i">$library_filter</span><span class="sc">;</span>
    <span class="i">$self</span>-&gt;{<span class="w">library_condition</span>}     = <span class="i">$library_condition</span><span class="sc">;</span>

    <span class="k">my</span> <span class="i">$libraries</span> = <span class="i">Cast_List</span><span class="s">(</span> -<span class="w">list</span> <span class="cm">=&gt;</span> <span class="i">$library_filter</span><span class="cm">,</span> -<span class="w">to</span> <span class="cm">=&gt;</span> <span class="q">&quot;String&quot;</span><span class="cm">,</span> -<span class="w">autoquote</span> <span class="cm">=&gt;</span> <span class="n">1</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">push</span> <span class="i">@</span>{ <span class="i">$self</span>-&gt;{<span class="w">library_condition</span>} }<span class="cm">,</span> <span class="q">&quot;Plate.FK_Library__Name IN ($libraries) &quot;</span> <span class="k">if</span> <span class="i">$libraries</span><span class="sc">;</span>

    <span class="i">$self</span>-&gt;{<span class="w">pipeline_step_conditions</span>} = <span class="s">{</span>
        <span class="q">'Ready'</span> <span class="cm">=&gt;</span> <span class="s">{</span>
            <span class="w">plate_format_id</span> <span class="cm">=&gt;</span> <span class="q">''</span><span class="cm">,</span>
            <span class="w">pipeline_id</span>     <span class="cm">=&gt;</span> <span class="q">''</span><span class="cm">,</span>
            <span class="w">plate_status</span>    <span class="cm">=&gt;</span> <span class="q">''</span>
        <span class="s">}</span><span class="cm">,</span>
        <span class="q">'In Process'</span> <span class="cm">=&gt;</span> <span class="s">{</span>

        <span class="s">}</span><span class="cm">,</span>
        <span class="q">'Completed'</span> <span class="cm">=&gt;</span> <span class="s">{</span> <span class="w">include_transfers</span> <span class="cm">=&gt;</span> <span class="q">''</span> <span class="s">}</span><span class="cm">,</span>
        <span class="q">'Pipeline'</span>  <span class="cm">=&gt;</span> <span class="s">{</span>

        <span class="s">}</span>
    <span class="s">}</span><span class="sc">;</span>
    <span class="i">$self</span>-&gt;{<span class="w">completed_plates</span>}   = <span class="s">[</span><span class="s">]</span><span class="sc">;</span>
    <span class="i">$self</span>-&gt;{<span class="w">transferred_plates</span>} = <span class="s">[</span><span class="s">]</span><span class="sc">;</span>
    <span class="i">$self</span>-&gt;{<span class="w">in_progress_plates</span>} = <span class="s">[</span><span class="s">]</span><span class="sc">;</span>
    <span class="i">$self</span>-&gt;{<span class="w">ready_plates</span>}       = <span class="s">[</span><span class="s">]</span><span class="sc">;</span>
    <span class="i">$self</span>-&gt;{<span class="w">redo_plates</span>}        = <span class="s">[</span><span class="s">]</span><span class="sc">;</span>
    <span class="i">$self</span>-&gt;{<span class="w">repeat_plates</span>}      = <span class="s">[</span><span class="s">]</span><span class="sc">;</span>
    <span class="i">$self</span>-&gt;{<span class="w">dbc</span>}                = <span class="i">$dbc</span><span class="sc">;</span>

    <span class="k">bless</span> <span class="i">$self</span><span class="cm">,</span> <span class="i">$class</span><span class="sc">;</span>

    <span class="k">return</span> <span class="i">$self</span><span class="sc">;</span>
<span class="s">}</span>

<a name="load_configuration-"></a><span class="k">sub </span><span class="m">load_configuration</span> <span class="s">{</span>
    <span class="k">my</span> <span class="i">$self</span> = <span class="k">shift</span><span class="sc">;</span>

    <span class="i">$self</span><span class="i">-&gt;set_parent_pipeline_steps</span><span class="s">(</span> -<span class="w">pipeline_step</span> <span class="cm">=&gt;</span> <span class="i">$self</span>-&gt;{<span class="w">pipeline_step_id</span>} <span class="s">)</span><span class="sc">;</span>

<span class="s">}</span>

<a name="request_broker-"></a><span class="k">sub </span><span class="m">request_broker</span> <span class="s">{</span>

<span class="s">}</span>

<span class="c"># ============================================================================</span>
<span class="c"># Method     : get_parent_pipeline_steps()</span>
<span class="c"># Usage      : $self-&gt;get_parent_pipeline_steps();</span>
<span class="c"># Purpose    : Get the parent protocols</span>
<span class="c"># Returns    : List of Protocols as Array Reference</span>
<span class="c"># Parameters : see option spec</span>
<span class="c"># Throws     : no exceptions</span>
<span class="c"># Comments   : none</span>
<span class="c"># See Also   : n/a</span>
<span class="c"># ============================================================================</span>
<a name="get_parent_pipeline_steps-"></a><span class="k">sub </span><span class="m">get_parent_pipeline_steps</span> <span class="s">{</span>
    <span class="k">my</span> <span class="i">$self</span> = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">%args</span> = <span class="i">@_</span><span class="sc">;</span>
    <span class="k">return</span> <span class="i">$self</span>-&gt;{<span class="w">parent_pipeline_steps</span>}<span class="sc">;</span>
<span class="s">}</span>

<span class="c"># ============================================================================</span>
<span class="c"># Method     : get_child_pipeline_steps()</span>
<span class="c"># Usage      : $self-&gt;get_child_pipeline_steps();</span>
<span class="c"># Purpose    :</span>
<span class="c"># Returns    : List of Protocols as Array Reference</span>
<span class="c"># Parameters : see option spec</span>
<span class="c"># Throws     : no exceptions</span>
<span class="c"># Comments   : none</span>
<span class="c"># See Also   : n/a</span>
<span class="c"># ============================================================================</span>
<a name="get_child_pipeline_steps-"></a><span class="k">sub </span><span class="m">get_child_pipeline_steps</span> <span class="s">{</span>
    <span class="k">my</span> <span class="i">$self</span> = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">return</span> <span class="i">$self</span>-&gt;{<span class="w">child_pipeline_steps</span>}<span class="sc">;</span>
<span class="s">}</span>

<span class="c"># ============================================================================</span>
<span class="c"># Method     : set_child_pipeline_steps()</span>
<span class="c"># Usage      : $self-&gt;set_child_pipeline_steps(-protocols=&gt;\@protocols);</span>
<span class="c"># Purpose    :</span>
<span class="c"># Returns    : none</span>
<span class="c"># Parameters : see option spec</span>
<span class="c"># Throws     : no exceptions</span>
<span class="c"># Comments   : none</span>
<span class="c"># See Also   : n/a</span>
<span class="c"># ============================================================================</span>
<a name="set_child_pipeline_steps-"></a><span class="k">sub </span><span class="m">set_child_pipeline_steps</span> <span class="s">{</span>
    <span class="k">my</span> <span class="i">$self</span>      = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">%args</span>      = <span class="i">@_</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$protocols</span> = <span class="i">$args</span>{-<span class="w">protocols</span>}<span class="sc">;</span>
    <span class="i">$self</span>-&gt;{<span class="w">child_pipeline_steps</span>} = <span class="i">$protocols</span><span class="sc">;</span>
    <span class="k">return</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c"># ============================================================================</span>
<span class="c"># Method     : set_child_pipeline_steps()</span>
<span class="c"># Usage      : $self-&gt;set_child_pipeline_steps(-protocols=&gt;\@protocols);</span>
<span class="c"># Purpose    :</span>
<span class="c"># Returns    : none</span>
<span class="c"># Parameters : see option spec</span>
<span class="c"># Throws     : no exceptions</span>
<span class="c"># Comments   : none</span>
<span class="c"># See Also   : n/a</span>
<span class="c"># ============================================================================</span>
<a name="set_parent_pipeline_steps-"></a><span class="k">sub </span><span class="m">set_parent_pipeline_steps</span> <span class="s">{</span>
    <span class="k">my</span> <span class="i">$self</span>                  = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">%args</span>                  = <span class="i">@_</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$pipeline_step</span>         = <span class="i">$args</span>{-<span class="w">pipeline_step</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$parent_pipeline_steps</span> = <span class="i">$args</span>{-<span class="w">parent_pipeline_steps</span>}<span class="sc">;</span>

    <span class="k">my</span> <span class="i">@pipeline_steps</span><span class="sc">;</span>
    <span class="k">if</span> <span class="s">(</span><span class="i">$parent_pipeline_steps</span><span class="s">)</span> <span class="s">{</span>
        <span class="i">@pipeline_steps</span> = <span class="i">@</span>{<span class="i">$parent_pipeline_steps</span>}<span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">else</span> <span class="s">{</span>
        <span class="i">@pipeline_steps</span> = <span class="i">$self</span>-&gt;{<span class="w">dbc</span>}<span class="i">-&gt;Table_find</span><span class="s">(</span> <span class="q">'Pipeline_StepRelationship'</span><span class="cm">,</span> <span class="q">'FKParent_Pipeline_Step__ID'</span><span class="cm">,</span> <span class="q">&quot;WHERE FKChild_Pipeline_Step__ID = $pipeline_step&quot;</span> <span class="s">)</span><span class="sc">;</span>
    <span class="s">}</span>

    <span class="i">$self</span>-&gt;{<span class="w">parent_pipeline_steps</span>} = \<span class="i">@pipeline_steps</span><span class="sc">;</span>
    <span class="k">return</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c"># ============================================================================</span>
<span class="c"># Method     : get_ready_plates()</span>
<span class="c"># Usage      : $self-&gt;get_ready_plates();</span>
<span class="c"># Purpose    : Get the plates that are ready for the given protocol</span>
<span class="c"># Returns    : List of Plate ID's as Array Reference</span>
<span class="c"># Parameters : see option spec</span>
<span class="c"># Throws     : no exceptions</span>
<span class="c"># Comments   : Must be run AFTER get_completed, get_in_progress - Use via wrapper get_progress instead.</span>
<span class="c"># See Also   : n/a</span>
<span class="c"># ============================================================================</span>
<a name="get_ready_plates-"></a><span class="k">sub </span><span class="m">get_ready_plates</span> <span class="s">{</span>
<span class="c">###########################</span>
    <span class="k">my</span> <span class="i">$self</span>         = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">%args</span>         = <span class="i">filter_input</span><span class="s">(</span> \<span class="i">@_</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$condition</span>    = <span class="i">Cast_List</span><span class="s">(</span> -<span class="w">list</span> <span class="cm">=&gt;</span> <span class="i">$args</span>{-<span class="w">condition</span>}<span class="cm">,</span> -<span class="w">to</span> <span class="cm">=&gt;</span> <span class="q">'arrayref'</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$transferred</span>  = <span class="i">$args</span>{-<span class="w">transferred</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$in_progress</span>  = <span class="i">$args</span>{-<span class="w">in_progress</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$completed</span>    = <span class="i">$args</span>{-<span class="w">completed</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$failed</span>       = <span class="i">$args</span>{-<span class="w">failed</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$debug</span>        = <span class="i">$args</span>{-<span class="w">debug</span>} || <span class="n">0</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">@ready_plates</span> = <span class="s">(</span><span class="s">)</span><span class="sc">;</span>
    <span class="c">## if the parent pipeline steps exist, check if the parent pipeline step is a protocol,</span>
    <span class="c">## if it is a protocol, find the plates that have completed the protocol</span>

    <span class="k">if</span> <span class="s">(</span> <span class="k">int</span><span class="s">(</span> <span class="i">@</span>{ <span class="i">$self</span>-&gt;{<span class="w">parent_pipeline_steps</span>} } <span class="s">)</span> &gt; <span class="n">0</span> <span class="s">)</span> <span class="s">{</span>
        <span class="k">foreach</span> <span class="k">my</span> <span class="i">$parent_pipeline_step</span> <span class="s">(</span> <span class="i">@</span>{ <span class="i">$self</span>-&gt;{<span class="w">parent_pipeline_steps</span>} } <span class="s">)</span> <span class="s">{</span>

            <span class="c"># create the parent pipeline_step object and get the completed plates for that pipeline</span>
            <span class="k">my</span> <span class="i">$parent</span> = <span class="i">alDente::Pipeline::get_pipeline_step</span><span class="s">(</span> -<span class="w">dbc</span> <span class="cm">=&gt;</span> <span class="i">$self</span>-&gt;{<span class="w">dbc</span>}<span class="cm">,</span> -<span class="w">pipeline_step_id</span> <span class="cm">=&gt;</span> <span class="i">$parent_pipeline_step</span><span class="cm">,</span> -<span class="w">library_filter</span> <span class="cm">=&gt;</span> <span class="i">$self</span>-&gt;{<span class="w">library_filter</span>} <span class="s">)</span><span class="sc">;</span>
            <span class="i">$parent</span><span class="i">-&gt;get_completed_plates</span><span class="s">(</span> -<span class="w">condition</span> <span class="cm">=&gt;</span> <span class="i">$condition</span> <span class="s">)</span><span class="sc">;</span>
            <span class="k">push</span> <span class="i">@ready_plates</span><span class="cm">,</span> <span class="i">@</span>{ <span class="i">$parent</span>-&gt;{<span class="w">completed_plates</span>} }<span class="sc">;</span>
        <span class="s">}</span>
        <span class="i">@ready_plates</span> = <span class="i">@</span>{ <span class="i">unique_items</span><span class="s">(</span> \<span class="i">@ready_plates</span> <span class="s">)</span> }<span class="sc">;</span>

        <span class="i">@ready_plates</span> = <span class="k">sort</span> <span class="i">@</span>{ <span class="i">set_difference</span><span class="s">(</span> \<span class="i">@ready_plates</span><span class="cm">,</span> <span class="s">[</span> <span class="i">@</span>{<span class="i">$transferred</span>}<span class="cm">,</span> <span class="i">@</span>{<span class="i">$in_progress</span>}<span class="cm">,</span> <span class="i">@</span>{<span class="i">$completed</span>}<span class="cm">,</span> <span class="i">@</span>{<span class="i">$failed</span>} <span class="s">]</span> <span class="s">)</span> }<span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">else</span> <span class="s">{</span>
        <span class="k">my</span> <span class="i">$condition_string</span><span class="sc">;</span>
        <span class="k">my</span> <span class="i">@conditions</span><span class="sc">;</span>
        <span class="k">if</span> <span class="s">(</span><span class="i">$condition</span><span class="s">)</span> <span class="s">{</span> <span class="i">@conditions</span> = <span class="i">@</span>{<span class="i">$condition</span>} <span class="s">}</span>
        <span class="k">if</span> <span class="s">(</span> <span class="i">$self</span>-&gt;{<span class="w">library_condition</span>} <span class="s">)</span> <span class="s">{</span> <span class="k">push</span> <span class="i">@conditions</span><span class="cm">,</span> <span class="i">@</span>{ <span class="i">$self</span>-&gt;{<span class="w">library_condition</span>} } <span class="s">}</span>
        <span class="i">$condition_string</span> = <span class="k">join</span> <span class="q">' AND '</span><span class="cm">,</span> <span class="i">@conditions</span><span class="sc">;</span>

        <span class="c">#previous sql query for the first step of pipeline</span>
        <span class="c">#finding plates in the library and pipeline where there is no child and no last prep id</span>
<span class="c">#####</span>
        <span class="c">#	    my @pipeline_plates = $self-&gt;{dbc}-&gt;Table_find('Library,Plate LEFT JOIN Plate as Child ON Plate.Plate_ID = Child.FKParent_Plate__ID','Plate.Plate_ID',</span>
        <span class="c">#                                                    &quot;WHERE Plate.FK_Library__Name=Library_Name AND</span>
        <span class="c">#	                                                 Plate.FK_Pipeline__ID = $self-&gt;{pipeline}</span>
        <span class="c">#	                                                and Plate.Plate_Status ='Active' AND $condition_string</span>
        <span class="c">#                                                        and IF(Plate.FKLast_Prep__ID,0,1)</span>
        <span class="c">#	                                                &quot;,-debug=&gt;$debug);</span>
        <span class="c">#            # removed (?) :  AND Child.Plate_ID IS NULL</span>
<span class="c">#####</span>

        <span class="c">#new sql: find plates in the library and pipeline where the plate's last prep record is not any one of the protocols in the pipeline</span>
        <span class="c">#	my @pipeline_plates = $self-&gt;{dbc}-&gt;Table_find(&quot;Library,Plate</span>
        <span class="c">#                                                       LEFT JOIN Plate_Prep ON Plate.Plate_ID=Plate_Prep.FK_Plate__ID</span>
        <span class="c">#                                                       AND Plate_Prep.FK_Prep__ID=Plate.FKLast_Prep__ID</span>
        <span class="c">#                                                       LEFT JOIN Prep ON Prep.Prep_ID=Plate_Prep.FK_Prep__ID</span>
        <span class="c">#                                                       AND FK_Lab_Protocol__ID IN (Select Object_ID from Pipeline_Step where FK_Pipeline__ID = $self-&gt;{pipeline})&quot;,</span>
        <span class="c">#						       'Plate_ID',</span>
        <span class="c">#						       &quot;WHERE Plate.FK_Library__Name=Library_Name</span>
        <span class="c">#                                                       AND Plate.FK_Pipeline__ID = $self-&gt;{pipeline}</span>
        <span class="c">#                                                       AND Plate.Plate_Status ='Active'</span>
        <span class="c">#                                                       AND $condition_string</span>
        <span class="c">#                                                       AND Prep_ID IS NULL</span>
        <span class="c">#                                                       GROUP BY Plate_ID&quot;,</span>
        <span class="c">#						       -debug=&gt;$debug);</span>

        <span class="c">#new sql: find plates in the library and pipeline where none of the protocols in the pipeline has prep on the plate</span>
        <span class="k">my</span> <span class="i">@pipeline_plates</span> = <span class="i">$self</span>-&gt;{<span class="w">dbc</span>}<span class="i">-&gt;Table_find</span><span class="s">(</span>
            <span class="q">&quot;Library,Plate</span>
                                                       <span class="q">                                                       LEFT JOIN Plate_Prep ON Plate.Plate_ID=Plate_Prep.FK_Plate__ID</span>
                                                       <span class="q">                                                       LEFT JOIN Prep ON Prep.Prep_ID=Plate_Prep.FK_Prep__ID</span>
                                                       <span class="q">                                                       AND FK_Lab_Protocol__ID IN (Select Object_ID from Pipeline_Step where FK_Pipeline__ID = $self-&gt;{pipeline})</span>
                                                       <span class="q">                                                       LEFT JOIN Plate_Schedule ON Plate.Plate_ID = Plate_Schedule.FK_Plate__ID&quot;</span><span class="cm">,</span>
            <span class="q">'Plate_ID, SUM(CASE WHEN Prep_ID &gt; 0 THEN 1 ELSE 0 END) AS Pipeline_Protocol_Preps'</span><span class="cm">,</span>
            <span class="q">&quot;WHERE Plate.FK_Library__Name=Library_Name</span>
                                                       <span class="q">                                                       AND (Plate.FK_Pipeline__ID = $self-&gt;{pipeline} OR (Plate_Schedule.FK_Pipeline__ID = $self-&gt;{pipeline} AND Plate.Plate_ID = Plate.FKOriginal_Plate__ID))</span>
                                                       <span class="q">                                                       AND Plate.Plate_Status ='Active'</span>
                                                       <span class="q">                                                       AND $condition_string</span>
                                                       <span class="q">                                                       GROUP BY Plate_ID</span>
                                                       <span class="q">                                                       HAVING Pipeline_Protocol_Preps = 0&quot;</span><span class="cm">,</span>
            -<span class="w">debug</span> <span class="cm">=&gt;</span> <span class="i">$debug</span>
        <span class="s">)</span><span class="sc">;</span>

        <span class="c">## find plates that have not been in this protocol and are marked for this pipeline</span>
        <span class="c">## or parent pipeline (if user chose to include parent pipelines)</span>

        <span class="i">@ready_plates</span> = <span class="k">sort</span> <span class="i">@</span>{ <span class="i">set_difference</span><span class="s">(</span> \<span class="i">@pipeline_plates</span><span class="cm">,</span> <span class="s">[</span> <span class="i">@</span>{<span class="i">$transferred</span>}<span class="cm">,</span> <span class="i">@</span>{<span class="i">$in_progress</span>}<span class="cm">,</span> <span class="i">@</span>{<span class="i">$completed</span>} <span class="s">]</span> <span class="s">)</span> }<span class="sc">;</span>
        <span class="c">## add additional pipeline filtering</span>
    <span class="s">}</span>

    <span class="c">## call the api to retrieve the list of plates</span>

    <span class="k">return</span> \<span class="i">@ready_plates</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c"># ============================================================================</span>
<span class="c"># Method     : get_progress()</span>
<span class="c"># Usage      :</span>
<span class="c"># Purpose    : Get the plates that are in the middle of a given protocol</span>
<span class="c"># Returns    : List of Plate ID's as Array Reference</span>
<span class="c"># Parameters : see option spec</span>
<span class="c"># Throws     : no exceptions</span>
<span class="c"># Comments   : Must be run AFTER get_completed - Use via wrapper get_progress instead.</span>
<span class="c"># See Also   : n/a</span>
<span class="c"># ============================================================================</span>
<a name="get_progress-"></a><span class="k">sub </span><span class="m">get_progress</span> <span class="s">{</span>
<span class="c">#################################</span>
    <span class="k">my</span> <span class="i">$self</span>              = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">%args</span>              = <span class="i">filter_input</span><span class="s">(</span> \<span class="i">@_</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$exclude_transfers</span> = <span class="i">$args</span>{-<span class="w">exclude_transfers</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$condition</span>         = <span class="i">Cast_List</span><span class="s">(</span> -<span class="w">list</span> <span class="cm">=&gt;</span> <span class="i">$args</span>{-<span class="w">condition</span>}<span class="cm">,</span> -<span class="w">to</span> <span class="cm">=&gt;</span> <span class="q">'arrayref'</span> <span class="s">)</span> || <span class="s">[</span><span class="s">]</span><span class="sc">;</span>

    <span class="k">push</span> <span class="i">@</span>{<span class="i">$condition</span>}<span class="cm">,</span> <span class="i">@</span>{ <span class="i">$self</span>-&gt;{<span class="w">library_condition</span>} } <span class="k">if</span> <span class="s">(</span> <span class="i">$self</span>-&gt;{<span class="w">library_condition</span>} <span class="s">)</span><span class="sc">;</span>

    <span class="k">my</span> <span class="i">$prep_status</span> = <span class="i">$self</span><span class="i">-&gt;get_protocol_progress</span><span class="s">(</span>
        -<span class="w">protocol</span>        <span class="cm">=&gt;</span> <span class="i">$self</span>-&gt;{<span class="w">protocol_id</span>}<span class="cm">,</span>
        -<span class="w">pipeline</span>        <span class="cm">=&gt;</span> <span class="i">$self</span>-&gt;{<span class="w">pipeline</span>}<span class="cm">,</span>
        -<span class="w">extra_condition</span> <span class="cm">=&gt;</span> <span class="i">$condition</span>
    <span class="s">)</span><span class="sc">;</span>

    <span class="i">$self</span>-&gt;{<span class="w">in_progress_plates</span>} = <span class="i">$prep_status</span>-&gt;{ <span class="i">$self</span>-&gt;{<span class="w">protocol_id</span>} }{<span class="q">'In Progress'</span>}<span class="sc">;</span>
    <span class="i">$self</span>-&gt;{<span class="w">failed_plates</span>}      = <span class="i">$prep_status</span>-&gt;{ <span class="i">$self</span>-&gt;{<span class="w">protocol_id</span>} }{<span class="q">'Failed Plates'</span>}<span class="sc">;</span>
    <span class="i">$self</span>-&gt;{<span class="w">transferred_plates</span>} = <span class="i">$prep_status</span>-&gt;{ <span class="i">$self</span>-&gt;{<span class="w">protocol_id</span>} }{<span class="q">'Transferred'</span>}<span class="sc">;</span>
    <span class="i">$self</span>-&gt;{<span class="w">completed_plates</span>}   = <span class="i">$prep_status</span>-&gt;{ <span class="i">$self</span>-&gt;{<span class="w">protocol_id</span>} }{<span class="q">'Completed'</span>}<span class="sc">;</span>
    <span class="i">$self</span>-&gt;{<span class="w">ready_plates</span>}       = <span class="i">$prep_status</span>-&gt;{ <span class="i">$self</span>-&gt;{<span class="w">protocol_id</span>} }{<span class="q">'Ready'</span>}<span class="sc">;</span>
    <span class="i">$self</span>-&gt;{<span class="w">redo_plates</span>}        = <span class="i">$prep_status</span>-&gt;{ <span class="i">$self</span>-&gt;{<span class="w">protocol_id</span>} }{<span class="q">'Redo'</span>} || <span class="s">[</span><span class="s">]</span><span class="sc">;</span>
    <span class="i">$self</span>-&gt;{<span class="w">repeat_plates</span>}      = <span class="i">$prep_status</span>-&gt;{ <span class="i">$self</span>-&gt;{<span class="w">protocol_id</span>} }{<span class="q">'Repeat'</span>} || <span class="s">[</span><span class="s">]</span><span class="sc">;</span>

    <span class="k">return</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c"># ============================================================================</span>
<span class="c"># Method     : get_completed_plates()</span>
<span class="c"># Usage      :</span>
<span class="c"># Purpose    : Get the plates that have completed a given protocol</span>
<span class="c"># Returns    : List of Plate ID's as Array Reference</span>
<span class="c"># Parameters : see option spec</span>
<span class="c"># Throws     : no exceptions</span>
<span class="c"># Comments   : none</span>
<span class="c"># See Also   : n/a</span>
<span class="c"># ============================================================================</span>
<a name="get_completed_plates-"></a><span class="k">sub </span><span class="m">get_completed_plates</span> <span class="s">{</span>
<span class="c">##############################</span>
    <span class="k">my</span> <span class="i">$self</span>      = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">%args</span>      = <span class="i">filter_input</span><span class="s">(</span> \<span class="i">@_</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">@condition</span> = <span class="i">Cast_List</span><span class="s">(</span> -<span class="w">list</span> <span class="cm">=&gt;</span> <span class="i">$args</span>{-<span class="w">condition</span>}<span class="cm">,</span> -<span class="w">to</span> <span class="cm">=&gt;</span> <span class="q">'array'</span> <span class="s">)</span><span class="sc">;</span>
    <span class="c">## find the plates that have a completed protocol step</span>
    <span class="c">#if ($self-&gt;{completed_plates}) { return $self-&gt;{completed_plates} } ## use as accessor ##</span>

    <span class="k">push</span> <span class="i">@condition</span><span class="cm">,</span> <span class="i">@</span>{ <span class="i">$self</span>-&gt;{<span class="w">library_condition</span>} } <span class="k">if</span> <span class="s">(</span> <span class="i">$self</span>-&gt;{<span class="w">library_condition</span>} <span class="s">)</span><span class="sc">;</span>

    <span class="c">#push @condition, &quot;FK_Pipeline__ID = $self-&gt;{pipeline}&quot;;</span>
    <span class="c">#push @condition, &quot;FKLast_Prep__ID = Prep_ID&quot;;</span>
    <span class="c">#push @condition, &quot;Prep_Name = 'Completed Protocol'&quot;;</span>
    <span class="c">#push @condition, &quot;Lab_Protocol_ID = FK_Lab_Protocol__ID&quot;;</span>
    <span class="c">#push @condition, &quot;FK_Lab_Protocol__ID = $self-&gt;{protocol_id}&quot;;</span>

    <span class="c">#my $completed_condition = join ' AND ', @condition;</span>

    <span class="c">#my @completed_plates = $self-&gt;{dbc}-&gt;Table_find('Plate,Prep,Lab_Protocol','Plate_ID',&quot;WHERE $completed_condition&quot;,-group_by=&gt;'Plate_ID',-distinct=&gt;1);</span>

    <span class="k">push</span> <span class="i">@condition</span><span class="cm">,</span> <span class="q">&quot;FK_Pipeline__ID = $self-&gt;{pipeline}&quot;</span><span class="sc">;</span>
    <span class="k">push</span> <span class="i">@condition</span><span class="cm">,</span> <span class="q">&quot;FK_Plate__ID = Plate_ID&quot;</span><span class="sc">;</span>
    <span class="k">push</span> <span class="i">@condition</span><span class="cm">,</span> <span class="q">&quot;FK_Prep__ID = Prep_ID&quot;</span><span class="sc">;</span>
    <span class="k">push</span> <span class="i">@condition</span><span class="cm">,</span> <span class="q">&quot;Prep_Name = 'Completed Protocol'&quot;</span><span class="sc">;</span>
    <span class="k">push</span> <span class="i">@condition</span><span class="cm">,</span> <span class="q">&quot;Lab_Protocol_ID = FK_Lab_Protocol__ID&quot;</span><span class="sc">;</span>
    <span class="k">push</span> <span class="i">@condition</span><span class="cm">,</span> <span class="q">&quot;FK_Lab_Protocol__ID = $self-&gt;{protocol_id}&quot;</span><span class="sc">;</span>

    <span class="k">my</span> <span class="i">$completed_condition</span> = <span class="k">join</span> <span class="q">' AND '</span><span class="cm">,</span> <span class="i">@condition</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">@completed_plates</span> = <span class="i">$self</span>-&gt;{<span class="w">dbc</span>}<span class="i">-&gt;Table_find</span><span class="s">(</span> <span class="q">'Plate,Plate_Prep,Prep,Lab_Protocol'</span><span class="cm">,</span> <span class="q">'Plate_ID'</span><span class="cm">,</span> <span class="q">&quot;WHERE $completed_condition&quot;</span><span class="cm">,</span> -<span class="w">group_by</span> <span class="cm">=&gt;</span> <span class="q">'Plate_ID'</span><span class="cm">,</span> -<span class="w">distinct</span> <span class="cm">=&gt;</span> <span class="n">1</span> <span class="s">)</span><span class="sc">;</span>

    <span class="c">#This is getting all the plates that has a prep records for the next protocol</span>
    <span class="c">#If a plate already has a prep in the next protocol, it will be track by the next protocol, therefore can skip for the current protocol</span>
    <span class="c">#This is here for that fact that more preps can already be done on the plate after it &quot;Completed Protocol&quot; for the current protcol</span>
    <span class="c">#If this is not here, there will be extra ready</span>
    <span class="k">my</span> <span class="i">@next_protocols</span> = <span class="i">$self</span>-&gt;{<span class="w">dbc</span>}<span class="i">-&gt;Table_find</span><span class="s">(</span> <span class="q">'Pipeline_Step'</span><span class="cm">,</span> <span class="q">'Object_ID'</span><span class="cm">,</span>
        <span class="q">&quot;WHERE FK_Pipeline__ID = $self-&gt;{pipeline} AND Pipeline_Step_Order IN (SELECT Pipeline_Step_Order + 1 FROM Pipeline_Step WHERE FK_Pipeline__ID = $self-&gt;{pipeline} AND Object_ID = $self-&gt;{protocol_id})&quot;</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">if</span> <span class="s">(</span><span class="i">@next_protocols</span><span class="s">)</span> <span class="s">{</span>
        <span class="k">my</span> <span class="i">$next_protocol</span> = <span class="k">join</span><span class="s">(</span> <span class="q">&quot;,&quot;</span><span class="cm">,</span> <span class="i">@next_protocols</span> <span class="s">)</span><span class="sc">;</span>
        <span class="k">my</span> <span class="i">@next_condition</span><span class="sc">;</span>
        <span class="k">push</span> <span class="i">@next_condition</span><span class="cm">,</span> <span class="q">&quot;FK_Pipeline__ID = $self-&gt;{pipeline}&quot;</span><span class="sc">;</span>
        <span class="k">push</span> <span class="i">@next_condition</span><span class="cm">,</span> <span class="q">&quot;FK_Plate__ID = Plate_ID&quot;</span><span class="sc">;</span>
        <span class="k">push</span> <span class="i">@next_condition</span><span class="cm">,</span> <span class="q">&quot;FK_Prep__ID = Prep_ID&quot;</span><span class="sc">;</span>
        <span class="k">push</span> <span class="i">@next_condition</span><span class="cm">,</span> <span class="q">&quot;Lab_Protocol_ID = FK_Lab_Protocol__ID&quot;</span><span class="sc">;</span>
        <span class="k">push</span> <span class="i">@next_condition</span><span class="cm">,</span> <span class="q">&quot;FK_Lab_Protocol__ID IN ($next_protocol)&quot;</span><span class="sc">;</span>

        <span class="k">my</span> <span class="i">$next_completed_condition</span> = <span class="k">join</span> <span class="q">' AND '</span><span class="cm">,</span> <span class="i">@next_condition</span><span class="sc">;</span>
        <span class="k">my</span> <span class="i">@next_completed_plates</span> = <span class="i">$self</span>-&gt;{<span class="w">dbc</span>}<span class="i">-&gt;Table_find</span><span class="s">(</span> <span class="q">'Plate,Plate_Prep,Prep,Lab_Protocol'</span><span class="cm">,</span> <span class="q">'Plate_ID'</span><span class="cm">,</span> <span class="q">&quot;WHERE $next_completed_condition&quot;</span><span class="cm">,</span> -<span class="w">group_by</span> <span class="cm">=&gt;</span> <span class="q">'Plate_ID'</span><span class="cm">,</span> -<span class="w">distinct</span> <span class="cm">=&gt;</span> <span class="n">1</span> <span class="s">)</span><span class="sc">;</span>

        <span class="c">#if there are preps from the next protocol for the plate, then the plate can be tracked by the next protocol</span>
        <span class="i">@completed_plates</span> = <span class="i">@</span>{ <span class="i">set_difference</span><span class="s">(</span> \<span class="i">@completed_plates</span><span class="cm">,</span> \<span class="i">@next_completed_plates</span> <span class="s">)</span> }<span class="sc">;</span>
    <span class="s">}</span>

    <span class="i">$self</span>-&gt;{<span class="w">completed_plates</span>} = \<span class="i">@completed_plates</span><span class="sc">;</span>
    <span class="k">return</span> \<span class="i">@completed_plates</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">#########################################</span>
<a name="build_pipeline_step_condition-"></a><span class="k">sub </span><span class="m">build_pipeline_step_condition</span> <span class="s">{</span>
<span class="c">#########################################</span>
    <span class="k">my</span> <span class="i">$self</span> = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">%args</span> = <span class="i">@_</span><span class="sc">;</span>

    <span class="k">my</span> <span class="i">$state</span> = <span class="i">$args</span>{-<span class="w">state</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">@pipeline_step_condition</span><span class="sc">;</span>

    <span class="k">foreach</span> <span class="k">my</span> <span class="i">$parameter</span> <span class="s">(</span> <span class="k">keys</span> <span class="i">%</span>{ <span class="i">$self</span>-&gt;{<span class="w">pipeline_step_conditions</span>}-&gt;{<span class="i">$state</span>} } <span class="s">)</span> <span class="s">{</span>
        <span class="k">my</span> <span class="i">$values</span> = <span class="i">Cast_List</span><span class="s">(</span> -<span class="w">list</span> <span class="cm">=&gt;</span> <span class="i">$self</span>-&gt;{<span class="w">pipelines_step_conditions</span>}-&gt;{<span class="i">$state</span>}{<span class="i">$parameter</span>}<span class="cm">,</span> -<span class="w">to</span> <span class="cm">=&gt;</span> <span class="q">'String'</span><span class="cm">,</span> -<span class="w">autoquote</span> <span class="cm">=&gt;</span> <span class="n">1</span> <span class="s">)</span><span class="sc">;</span>
        <span class="k">if</span> <span class="s">(</span><span class="i">$values</span><span class="s">)</span> <span class="s">{</span>
            <span class="k">push</span> <span class="i">@pipeline_step_condition</span><span class="cm">,</span> <span class="q">&quot;$parameter IN ($values)&quot;</span><span class="sc">;</span>
        <span class="s">}</span>
    <span class="s">}</span>
    <span class="k">return</span> \<span class="i">@pipeline_step_condition</span><span class="sc">;</span>
<span class="s">}</span>

<a name="parse_pipeline_step_condition-"></a><span class="k">sub </span><span class="m">parse_pipeline_step_condition</span> <span class="s">{</span>
    <span class="k">my</span> <span class="i">$self</span> = <span class="k">shift</span><span class="sc">;</span>

    <span class="k">foreach</span> <span class="k">my</span> <span class="i">$state</span> <span class="s">(</span> <span class="k">keys</span> <span class="i">%</span>{ <span class="i">$self</span>-&gt;{<span class="w">pipeline_step_conditions</span>} } <span class="s">)</span> <span class="s">{</span>
        <span class="k">foreach</span> <span class="k">my</span> <span class="i">$parameter</span> <span class="s">(</span> <span class="k">keys</span> <span class="i">%</span>{ <span class="i">$self</span>-&gt;{<span class="w">pipeline_step_conditions</span>}-&gt;{<span class="i">$state</span>} } <span class="s">)</span> <span class="s">{</span>
            <span class="k">my</span> <span class="i">$value</span> = <span class="i">param</span><span class="s">(</span><span class="i">$parameter</span><span class="s">)</span><span class="sc">;</span>
            <span class="i">$self</span>-&gt;{<span class="w">pipeline_step_condition</span>}{<span class="i">$state</span>}{<span class="i">$parameter</span>} = <span class="i">$value</span><span class="sc">;</span>
        <span class="s">}</span>
    <span class="s">}</span>

<span class="s">}</span>

<span class="c"># ============================================================================</span>
<span class="c"># Method     : display_pipeline_step()</span>
<span class="c"># Usage      :</span>
<span class="c"># Purpose    : Display the status of plates given the protocol</span>
<span class="c"># Returns    : none</span>
<span class="c"># Parameters : see option spec</span>
<span class="c"># Throws     : no exceptions</span>
<span class="c"># Comments   : none</span>
<span class="c"># See Also   : n/a</span>
<span class="c"># ============================================================================</span>
<a name="display_pipeline_step-"></a><span class="k">sub </span><span class="m">display_pipeline_step</span> <span class="s">{</span>
<span class="c">################################</span>
    <span class="k">my</span> <span class="i">$self</span>            = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">%args</span>            = <span class="i">filter_input</span><span class="s">(</span> \<span class="i">@_</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">@condition</span>       = <span class="i">Cast_List</span><span class="s">(</span> -<span class="w">list</span> <span class="cm">=&gt;</span> <span class="i">$args</span>{-<span class="w">condition</span>}<span class="cm">,</span> -<span class="w">to</span> <span class="cm">=&gt;</span> <span class="q">'array'</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$display_actions</span> = <span class="i">$args</span>{-<span class="w">display_actions</span>}<span class="sc">;</span>

    <span class="c"># get the protocol name to display in the table</span>
    <span class="k">my</span> <span class="i">$protocol_id</span> = <span class="i">$self</span>-&gt;{<span class="w">protocol_id</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="s">(</span><span class="i">$protocol_name</span><span class="s">)</span> = <span class="i">$self</span>-&gt;{<span class="w">dbc</span>}<span class="i">-&gt;Table_find</span><span class="s">(</span> <span class="q">&quot;Lab_Protocol&quot;</span><span class="cm">,</span> <span class="q">&quot;Lab_Protocol_Name&quot;</span><span class="cm">,</span> <span class="q">&quot;WHERE Lab_Protocol_ID = $protocol_id&quot;</span> <span class="s">)</span><span class="sc">;</span>
    <span class="i">$protocol_name</span> = <span class="q">&quot;Protocol Name&quot;</span> <span class="k">unless</span> <span class="i">$protocol_name</span><span class="sc">;</span>

    <span class="i">$self</span><span class="i">-&gt;get_progress</span><span class="s">(</span> -<span class="w">condition</span> <span class="cm">=&gt;</span> \<span class="i">@condition</span> <span class="s">)</span><span class="sc">;</span>    <span class="c">## populate completed_plates, ready_plates etc attributes.</span>

    <span class="c">#	my $completed_plates = $self-&gt;{completed_plates};</span>
    <span class="c">#	my $in_progress_plates = $self-&gt;{in_progress_plates};</span>
    <span class="k">my</span> <span class="i">@ready_plates</span>       = <span class="i">@</span>{ <span class="i">_get_plate_information</span><span class="s">(</span> -<span class="w">dbc</span> <span class="cm">=&gt;</span> <span class="i">$self</span>-&gt;{<span class="w">dbc</span>}<span class="cm">,</span> -<span class="w">plates_ref</span> <span class="cm">=&gt;</span> <span class="i">$self</span>-&gt;{<span class="w">ready_plates</span>} <span class="s">)</span> }<span class="sc">;</span>
    <span class="k">my</span> <span class="i">@repeat_plates</span>      = <span class="i">@</span>{ <span class="i">_get_plate_information</span><span class="s">(</span> -<span class="w">dbc</span> <span class="cm">=&gt;</span> <span class="i">$self</span>-&gt;{<span class="w">dbc</span>}<span class="cm">,</span> -<span class="w">plates_ref</span> <span class="cm">=&gt;</span> <span class="i">$self</span>-&gt;{<span class="w">repeat_plates</span>} <span class="s">)</span> }<span class="sc">;</span>
    <span class="k">my</span> <span class="i">@redo_plates</span>        = <span class="i">@</span>{ <span class="i">_get_plate_information</span><span class="s">(</span> -<span class="w">dbc</span> <span class="cm">=&gt;</span> <span class="i">$self</span>-&gt;{<span class="w">dbc</span>}<span class="cm">,</span> -<span class="w">plates_ref</span> <span class="cm">=&gt;</span> <span class="i">$self</span>-&gt;{<span class="w">redo_plates</span>} <span class="s">)</span> }<span class="sc">;</span>
    <span class="k">my</span> <span class="i">@in_progress_plates</span> = <span class="i">@</span>{ <span class="i">_get_plate_information</span><span class="s">(</span> -<span class="w">dbc</span> <span class="cm">=&gt;</span> <span class="i">$self</span>-&gt;{<span class="w">dbc</span>}<span class="cm">,</span> -<span class="w">plates_ref</span> <span class="cm">=&gt;</span> <span class="i">$self</span>-&gt;{<span class="w">in_progress_plates</span>} <span class="s">)</span> }<span class="sc">;</span>
    <span class="k">my</span> <span class="i">@completed_plates</span>   = <span class="i">@</span>{ <span class="i">_get_plate_information</span><span class="s">(</span> -<span class="w">dbc</span> <span class="cm">=&gt;</span> <span class="i">$self</span>-&gt;{<span class="w">dbc</span>}<span class="cm">,</span> -<span class="w">plates_ref</span> <span class="cm">=&gt;</span> <span class="i">$self</span>-&gt;{<span class="w">completed_plates</span>} <span class="s">)</span> }<span class="sc">;</span>
    <span class="k">my</span> <span class="i">@transferred_plates</span> = <span class="i">@</span>{ <span class="i">_get_plate_information</span><span class="s">(</span> -<span class="w">dbc</span> <span class="cm">=&gt;</span> <span class="i">$self</span>-&gt;{<span class="w">dbc</span>}<span class="cm">,</span> -<span class="w">plates_ref</span> <span class="cm">=&gt;</span> <span class="i">$self</span>-&gt;{<span class="w">transferred_plates</span>} <span class="s">)</span> }<span class="sc">;</span>

    <span class="k">my</span> <span class="i">$ready_plates</span>       = <span class="i">organize_plate_list</span><span class="s">(</span> -<span class="w">plate_list</span> <span class="cm">=&gt;</span> \<span class="i">@ready_plates</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$repeat_plates</span>      = <span class="i">organize_plate_list</span><span class="s">(</span> -<span class="w">plate_list</span> <span class="cm">=&gt;</span> \<span class="i">@repeat_plates</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$redo_plates</span>        = <span class="i">organize_plate_list</span><span class="s">(</span> -<span class="w">plate_list</span> <span class="cm">=&gt;</span> \<span class="i">@redo_plates</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$in_progress_plates</span> = <span class="i">organize_plate_list</span><span class="s">(</span> -<span class="w">plate_list</span> <span class="cm">=&gt;</span> \<span class="i">@in_progress_plates</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$completed_plates</span>   = <span class="i">organize_plate_list</span><span class="s">(</span> -<span class="w">plate_list</span> <span class="cm">=&gt;</span> \<span class="i">@completed_plates</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$transferred_plates</span> = <span class="i">organize_plate_list</span><span class="s">(</span> -<span class="w">plate_list</span> <span class="cm">=&gt;</span> \<span class="i">@transferred_plates</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$action_buttons</span>     = <span class="i">$self</span><span class="i">-&gt;_plate_action_buttons</span><span class="s">(</span><span class="s">)</span><span class="sc">;</span>

    <span class="k">my</span> <span class="i">$procedure_summary_table</span> = <span class="w">HTML_Table</span><span class="w">-&gt;new</span><span class="s">(</span> -<span class="w">class</span> <span class="cm">=&gt;</span> <span class="q">'small'</span><span class="cm">,</span> -<span class="w">title</span> <span class="cm">=&gt;</span> <span class="q">&quot;$protocol_name&quot;</span><span class="cm">,</span> -<span class="w">toggle</span> <span class="cm">=&gt;</span> <span class="n">0</span> <span class="s">)</span><span class="sc">;</span>

    <span class="k">my</span> <span class="i">@headers</span> = <span class="s">(</span>
        <span class="i">Show_Tool_Tip</span><span class="s">(</span> <span class="i">num_count</span><span class="s">(</span> \<span class="i">@ready_plates</span> <span class="s">)</span> . <span class="q">' Ready'</span><span class="cm">,</span>   <span class="q">&quot;These Plates have completed the previous protocol, but have not begun this protocol yet&quot;</span> <span class="s">)</span><span class="cm">,</span>
        <span class="i">Show_Tool_Tip</span><span class="s">(</span> <span class="i">num_count</span><span class="s">(</span> \<span class="i">@redo_plates</span> <span class="s">)</span> . <span class="q">' Redo'</span><span class="cm">,</span>     <span class="q">&quot;&quot;</span> <span class="s">)</span><span class="cm">,</span>
        <span class="i">Show_Tool_Tip</span><span class="s">(</span> <span class="i">num_count</span><span class="s">(</span> \<span class="i">@repeat_plates</span> <span class="s">)</span> . <span class="q">' Repeat'</span><span class="cm">,</span> <span class="q">&quot;&quot;</span> <span class="s">)</span><span class="cm">,</span>

        <span class="c">#	       Show_Tool_Tip(num_count(\@transferred_plates) . ' Transferred',&quot;These plates have been Aliquoted or Transferred to Daughter plates at least once within this protocol&quot;),</span>
        <span class="i">Show_Tool_Tip</span><span class="s">(</span> <span class="i">num_count</span><span class="s">(</span> \<span class="i">@in_progress_plates</span> <span class="s">)</span> . <span class="q">' In Progress'</span><span class="cm">,</span> <span class="q">&quot;These plates have begun this protocol, but have not yet completed it yet&quot;</span> <span class="s">)</span><span class="cm">,</span>
        <span class="i">Show_Tool_Tip</span><span class="s">(</span> <span class="i">num_count</span><span class="s">(</span> \<span class="i">@completed_plates</span> <span class="s">)</span> . <span class="q">' Completed'</span><span class="cm">,</span>     <span class="q">&quot;These plates have completed this protocol, but have not yet entered the next protocol&quot;</span> <span class="s">)</span>
    <span class="s">)</span><span class="sc">;</span>
    <span class="i">$procedure_summary_table</span><span class="i">-&gt;Set_Headers</span><span class="s">(</span> \<span class="i">@headers</span><span class="cm">,</span> <span class="q">'bgcolor=CCCCFF'</span> <span class="s">)</span><span class="sc">;</span>

    <span class="i">$procedure_summary_table</span><span class="i">-&gt;Set_Column</span><span class="s">(</span><span class="i">$ready_plates</span><span class="s">)</span><span class="sc">;</span>
    <span class="i">$procedure_summary_table</span><span class="i">-&gt;Set_Column</span><span class="s">(</span><span class="i">$redo_plates</span><span class="s">)</span><span class="sc">;</span>
    <span class="i">$procedure_summary_table</span><span class="i">-&gt;Set_Column</span><span class="s">(</span><span class="i">$repeat_plates</span><span class="s">)</span><span class="sc">;</span>

    <span class="c">#$procedure_summary_table-&gt;Set_Column($transferred_plates);</span>
    <span class="i">$procedure_summary_table</span><span class="i">-&gt;Set_Column</span><span class="s">(</span><span class="i">$in_progress_plates</span><span class="s">)</span><span class="sc">;</span>
    <span class="i">$procedure_summary_table</span><span class="i">-&gt;Set_Column</span><span class="s">(</span><span class="i">$completed_plates</span><span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$pipeline_step_form</span> = <span class="i">start_custom_form</span><span class="s">(</span> <span class="q">&quot;$protocol_name&quot;</span><span class="cm">,</span> <span class="i">$homelink</span> <span class="s">)</span><span class="sc">;</span>

    <span class="i">$pipeline_step_form</span> .= <span class="i">$action_buttons</span> <span class="k">if</span> <span class="i">$display_actions</span><span class="sc">;</span>
    <span class="i">$pipeline_step_form</span> .= <span class="i">$procedure_summary_table</span><span class="i">-&gt;Printout</span><span class="s">(</span><span class="n">0</span><span class="s">)</span><span class="sc">;</span>
    <span class="i">$pipeline_step_form</span> .= <span class="i">end_form</span><span class="s">(</span><span class="s">)</span><span class="sc">;</span>

    <span class="k">return</span> <span class="i">$pipeline_step_form</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">#</span>
<span class="c"># simple wrapper for method above to get array count, while excluding arrays with 'No result' as the only entry</span>
<span class="c">#</span>
<span class="c">##################</span>
<a name="num_count-"></a><span class="k">sub </span><span class="m">num_count</span> <span class="s">{</span>
<span class="c">##################</span>
    <span class="k">my</span> <span class="i">$array</span> = <span class="k">shift</span><span class="sc">;</span>

    <span class="k">if</span> <span class="s">(</span> <span class="i">$array</span>-&gt;[<span class="n">0</span>] =~ <span class="q">/[1-9]/</span> <span class="s">)</span> <span class="s">{</span>
        <span class="k">return</span> <span class="k">int</span><span class="s">(</span><span class="i">@$array</span><span class="s">)</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">else</span> <span class="s">{</span>
        <span class="k">return</span> <span class="n">0</span><span class="sc">;</span>
    <span class="s">}</span>
<span class="s">}</span>

<span class="c"># ============================================================================</span>
<span class="c"># Method     : _plate_action_buttons()</span>
<span class="c"># Usage      :</span>
<span class="c"># Purpose    : Display the available action buttons</span>
<span class="c"># Returns    : none</span>
<span class="c"># Parameters : see option spec</span>
<span class="c"># Throws     : no exceptions</span>
<span class="c"># Comments   : none</span>
<span class="c"># See Also   : n/a</span>
<span class="c"># ============================================================================</span>
<a name="_plate_action_buttons-"></a><span class="k">sub </span><span class="m">_plate_action_buttons</span> <span class="s">{</span>
    <span class="k">my</span> <span class="i">$self</span> = <span class="k">shift</span><span class="sc">;</span>

    <span class="k">my</span> <span class="i">$output</span> = <span class="i">hidden</span><span class="s">(</span> -<span class="w">name</span> <span class="cm">=&gt;</span> <span class="q">'cgi_application'</span><span class="cm">,</span> -<span class="w">value</span> <span class="cm">=&gt;</span> <span class="q">'alDente::Container_App'</span><span class="cm">,</span> -<span class="w">force</span> <span class="cm">=&gt;</span> <span class="n">1</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$plate_action_buttons</span> = <span class="w">HTML_Table</span><span class="w">-&gt;new</span><span class="s">(</span> -<span class="w">title</span> <span class="cm">=&gt;</span> <span class="q">&quot;Available Actions&quot;</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$reprint_button</span> = <span class="i">submit</span><span class="s">(</span> -<span class="w">name</span> <span class="cm">=&gt;</span> <span class="q">'rm'</span><span class="cm">,</span> -<span class="w">value</span> <span class="cm">=&gt;</span> <span class="q">'Re-Print Plate Labels'</span><span class="cm">,</span> -<span class="w">class</span> <span class="cm">=&gt;</span> <span class="q">'Std'</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$throw_away</span>     = <span class="i">submit</span><span class="s">(</span> -<span class="w">name</span> <span class="cm">=&gt;</span> <span class="q">'rm'</span><span class="cm">,</span> -<span class="w">value</span> <span class="cm">=&gt;</span> <span class="q">'Throw Out Plates'</span><span class="cm">,</span>      -<span class="w">class</span> <span class="cm">=&gt;</span> <span class="q">'Action'</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$save_plate_set</span> = <span class="i">submit</span><span class="s">(</span> -<span class="w">name</span> <span class="cm">=&gt;</span> <span class="q">'rm'</span><span class="cm">,</span> -<span class="w">value</span> <span class="cm">=&gt;</span> <span class="q">'Save Plate Set'</span><span class="cm">,</span>        -<span class="w">class</span> <span class="cm">=&gt;</span> <span class="q">&quot;Action&quot;</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$reset_pipeline</span> = <span class="i">submit</span><span class="s">(</span>
        -<span class="w">name</span>    <span class="cm">=&gt;</span> <span class="q">'rm'</span><span class="cm">,</span>
        -<span class="w">value</span>   <span class="cm">=&gt;</span> <span class="q">'Reset Pipeline'</span><span class="cm">,</span>
        -<span class="w">class</span>   <span class="cm">=&gt;</span> <span class="q">&quot;Action&quot;</span><span class="cm">,</span>
        -<span class="w">onClick</span> <span class="cm">=&gt;</span> <span class="q">&quot;unset_mandatory_validators(this.form);</span>
                            <span class="q">                            document.getElementById('Reset_Pipeline_Validator').setAttribute('mandatory',1);</span>
                            <span class="q">                            return validateForm(this.form);&quot;</span>
    <span class="s">)</span> . <span class="q">' to: '</span> . <span class="i">&amp;alDente::Tools::search_list</span><span class="s">(</span> -<span class="w">dbc</span> <span class="cm">=&gt;</span> <span class="i">$self</span>-&gt;{<span class="w">dbc</span>}<span class="cm">,</span> -<span class="w">name</span> <span class="cm">=&gt;</span> <span class="q">'FK_Pipeline__ID'</span><span class="cm">,</span> -<span class="w">mode</span> <span class="cm">=&gt;</span> <span class="q">'popup'</span> <span class="s">)</span> . <span class="i">set_validator</span><span class="s">(</span> -<span class="w">name</span> <span class="cm">=&gt;</span> <span class="q">'FK_Pipeline__ID Choice'</span><span class="cm">,</span> -<span class="w">mandatory</span> <span class="cm">=&gt;</span> <span class="n">1</span><span class="cm">,</span> -<span class="w">id</span> <span class="cm">=&gt;</span> <span class="q">'Reset_Pipeline_Validator'</span> <span class="s">)</span><span class="sc">;</span>

    <span class="i">$plate_action_buttons</span><span class="i">-&gt;Set_Row</span><span class="s">(</span> <span class="s">[</span> <span class="i">$reprint_button</span><span class="cm">,</span> <span class="i">$throw_away</span><span class="cm">,</span> <span class="i">$save_plate_set</span><span class="cm">,</span> <span class="i">$reset_pipeline</span> <span class="s">]</span> <span class="s">)</span><span class="sc">;</span>

    <span class="i">$output</span> .= <span class="i">$plate_action_buttons</span><span class="i">-&gt;Printout</span><span class="s">(</span><span class="n">0</span><span class="s">)</span><span class="sc">;</span>
    <span class="k">return</span> <span class="i">$output</span><span class="sc">;</span>
<span class="s">}</span>

<a name="organize_plate_list-"></a><span class="k">sub </span><span class="m">organize_plate_list</span> <span class="s">{</span>
    <span class="k">my</span> <span class="i">%args</span>       = <span class="i">@_</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$plate_list</span> = <span class="i">$args</span>{-<span class="w">plate_list</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">@plate_list</span><span class="sc">;</span>
    <span class="i">@plate_list</span> = <span class="i">@</span>{<span class="i">$plate_list</span>} <span class="k">if</span> <span class="i">$plate_list</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">%sorted_plates</span><span class="sc">;</span>
    <span class="k">foreach</span> <span class="k">my</span> <span class="i">$plate</span> <span class="s">(</span><span class="i">@plate_list</span><span class="s">)</span> <span class="s">{</span>
        <span class="k">my</span> <span class="i">$folder_name</span><span class="sc">;</span>
        <span class="k">if</span> <span class="s">(</span> <span class="i">$plate</span> =~ <span class="q">/\:\s+(\w+)\-(\d+)/i</span> <span class="s">)</span> <span class="s">{</span>
            <span class="i">$folder_name</span> = <span class="q">&quot;$1&quot;</span><span class="sc">;</span>
            <span class="k">push</span> <span class="i">@</span>{ <span class="i">$sorted_plates</span>{<span class="i">$folder_name</span>} }<span class="cm">,</span> <span class="i">$plate</span><span class="sc">;</span>
        <span class="s">}</span>

    <span class="s">}</span>
    <span class="k">my</span> <span class="i">@organized_plate_list</span><span class="sc">;</span>
    <span class="k">foreach</span> <span class="k">my</span> <span class="i">$sorted_list</span> <span class="s">(</span> <span class="k">sort</span> <span class="k">keys</span> <span class="i">%sorted_plates</span> <span class="s">)</span> <span class="s">{</span>
        <span class="k">push</span> <span class="i">@organized_plate_list</span><span class="cm">,</span> <span class="i">create_tree</span><span class="s">(</span> -<span class="w">tree</span> <span class="cm">=&gt;</span> <span class="s">{</span> <span class="q">&quot;$sorted_list&quot;</span> <span class="cm">=&gt;</span> <span class="i">$sorted_plates</span>{<span class="i">$sorted_list</span>} <span class="s">}</span><span class="cm">,</span> -<span class="w">print</span> <span class="cm">=&gt;</span> <span class="n">0</span> <span class="s">)</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">return</span> \<span class="i">@organized_plate_list</span><span class="sc">;</span>
<span class="s">}</span>

<a name="_get_plate_information-"></a><span class="k">sub </span><span class="m">_get_plate_information</span> <span class="s">{</span>
    <span class="k">my</span> <span class="i">%args</span>      = <span class="i">filter_input</span><span class="s">(</span> \<span class="i">@_</span><span class="cm">,</span> -<span class="w">args</span> <span class="cm">=&gt;</span> <span class="q">'dbc,plates_ref,check_box,brief'</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$dbc</span>       = <span class="i">$args</span>{-<span class="w">dbc</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$plates</span>    = <span class="i">$args</span>{-<span class="w">plates_ref</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$check_box</span> = <span class="n">1</span><span class="sc">;</span>
    <span class="i">$check_box</span> = <span class="i">$args</span>{-<span class="w">check_box</span>} <span class="k">if</span> <span class="k">defined</span><span class="s">(</span> <span class="i">$args</span>{-<span class="w">check_box</span>} <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$brief</span> = <span class="n">0</span><span class="sc">;</span>
    <span class="i">$brief</span> = <span class="i">$args</span>{-<span class="w">brief</span>} <span class="k">if</span> <span class="s">(</span> <span class="i">$args</span>{-<span class="w">brief</span>} <span class="s">)</span><span class="sc">;</span>

    <span class="k">my</span> <span class="i">@plates</span> = <span class="i">@</span>{<span class="i">$plates</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">@results</span><span class="sc">;</span>
    <span class="k">if</span> <span class="s">(</span><span class="i">@plates</span><span class="s">)</span> <span class="s">{</span>
        <span class="k">my</span> <span class="i">$plate_string</span> = <span class="k">join</span> <span class="q">','</span><span class="cm">,</span> <span class="i">@plates</span><span class="sc">;</span>
        <span class="k">my</span> <span class="i">@plate_info</span> = <span class="i">$dbc</span><span class="i">-&gt;Table_find</span><span class="s">(</span> <span class="q">'Plate'</span><span class="cm">,</span> <span class="q">&quot;Concat('Pla',Plate_ID,': ',FK_Library__Name,'-',Plate_Number,Parent_Quadrant)&quot;</span><span class="cm">,</span> <span class="q">&quot;WHERE Plate_ID IN ($plate_string) order by FK_Library__Name,Plate_Number,Parent_Quadrant,Plate_ID&quot;</span> <span class="s">)</span><span class="sc">;</span>
        <span class="i">@plate_info</span> = <span class="k">map</span> <span class="s">{</span> <span class="q">s/\,*$//</span><span class="sc">;</span> <span class="i">$_</span> <span class="s">}</span> <span class="i">@plate_info</span><span class="sc">;</span>

        <span class="k">foreach</span> <span class="k">my</span> <span class="i">$plate</span> <span class="s">(</span><span class="i">@plate_info</span><span class="s">)</span> <span class="s">{</span>
            <span class="k">my</span> <span class="i">$plate_id</span><span class="sc">;</span>
            <span class="k">if</span> <span class="s">(</span> <span class="i">$plate</span> =~ <span class="q">/^\D*(\d+):/</span> <span class="s">)</span> <span class="s">{</span> <span class="i">$plate_id</span> = <span class="i">$1</span><span class="sc">;</span> <span class="s">}</span>
            <span class="k">my</span> <span class="i">$link</span> = <span class="i">&amp;Link_To</span><span class="s">(</span> <span class="i">$homelink</span><span class="cm">,</span> <span class="q">&quot;$plate&quot;</span><span class="cm">,</span> <span class="q">&quot;&amp;cgi_application=alDente::Scanner_App&amp;rm=Scan&amp;Barcode=$Prefix{Plate}$plate_id&quot;</span> <span class="s">)</span><span class="sc">;</span>
            <span class="k">if</span> <span class="s">(</span><span class="i">$check_box</span><span class="s">)</span> <span class="s">{</span>
                <span class="i">$link</span> = <span class="i">checkbox</span><span class="s">(</span> -<span class="w">name</span> <span class="cm">=&gt;</span> <span class="q">'FK_Plate__ID'</span><span class="cm">,</span> -<span class="w">value</span> <span class="cm">=&gt;</span> <span class="i">$plate_id</span><span class="cm">,</span> -<span class="w">label</span> <span class="cm">=&gt;</span> <span class="q">''</span> <span class="s">)</span> . <span class="i">$link</span><span class="sc">;</span>
            <span class="s">}</span>
            <span class="k">push</span><span class="s">(</span> <span class="i">@results</span><span class="cm">,</span> <span class="i">$link</span> <span class="s">)</span><span class="sc">;</span>
        <span class="s">}</span>
    <span class="s">}</span>
    <span class="k">else</span> <span class="s">{</span>
        <span class="k">if</span> <span class="s">(</span><span class="i">$brief</span><span class="s">)</span> <span class="s">{</span>
            <span class="i">@results</span> = <span class="s">(</span><span class="s">)</span><span class="sc">;</span>
        <span class="s">}</span>
        <span class="k">else</span> <span class="s">{</span>
            <span class="i">@results</span> = <span class="s">(</span><span class="q">'No results'</span><span class="s">)</span><span class="sc">;</span>
        <span class="s">}</span>
    <span class="s">}</span>
    <span class="k">return</span> \<span class="i">@results</span><span class="sc">;</span>
<span class="s">}</span>

<a name="_get_library_plate_name-"></a><span class="k">sub </span><span class="m">_get_library_plate_name</span> <span class="s">{</span>
    <span class="k">my</span> <span class="i">%args</span>       = <span class="i">filter_input</span><span class="s">(</span> \<span class="i">@_</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$input_name</span> = <span class="i">$args</span>{-<span class="w">input_name</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$folder_name</span><span class="sc">;</span>
    <span class="k">if</span> <span class="s">(</span> <span class="i">$input_name</span> =~ <span class="q">/\:\s+(\w+)\-(\d+)/i</span> <span class="s">)</span> <span class="s">{</span>
        <span class="i">$folder_name</span> = <span class="q">&quot;$1-$2&quot;</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">return</span> <span class="i">$folder_name</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c"># ============================================================================</span>
<span class="c"># Method     : display_protocol_actions()</span>
<span class="c"># Usage      :</span>
<span class="c"># Purpose    : Display the actions that are available for plates in the protocol, i.e. Save Plate Set, Print Barcodes, Throw Away</span>
<span class="c"># Returns    : none</span>
<span class="c"># Parameters : see option spec</span>
<span class="c"># Throws     : no exceptions</span>
<span class="c"># Comments   : none</span>
<span class="c"># See Also   : n/a</span>
<span class="c"># ============================================================================</span>
<a name="display_pipeline_step_actions-"></a><span class="k">sub </span><span class="m">display_pipeline_step_actions</span> <span class="s">{</span>
    <span class="k">my</span> <span class="i">$self</span> = <span class="k">shift</span><span class="sc">;</span>

    <span class="k">return</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">#################</span>
<a name="load_API-"></a><span class="k">sub </span><span class="m">load_API</span> <span class="s">{</span>
<span class="c">#################</span>
    <span class="k">my</span> <span class="i">$self</span> = <span class="k">shift</span><span class="sc">;</span>

    <span class="k">my</span> <span class="i">%args</span> = <span class="i">filter_input</span><span class="s">(</span> \<span class="i">@_</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$dbc</span>  = <span class="i">$args</span>{-<span class="w">dbc</span>} || <span class="i">$self</span>-&gt;{<span class="w">dbc</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$api</span>  = <span class="i">$args</span>{-<span class="w">API_module</span>} || <span class="i">$self</span>-&gt;{<span class="w">config</span>}{<span class="w">API_module</span>} || <span class="q">&quot;alDente::alDente_API&quot;</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$path</span> = <span class="i">$args</span>{-<span class="w">API_path</span>} || <span class="i">$self</span>-&gt;{<span class="w">config</span>}{<span class="w">API_path</span>}<span class="sc">;</span>                                 <span class="c">## &lt;CONSTRUCTION&gt; - get config path ..</span>

    <span class="k">eval</span> <span class="s">{</span> <span class="k">require</span> <span class="i">$api</span> <span class="s">}</span><span class="sc">;</span>
    <span class="i">$self</span>-&gt;{<span class="w">API</span>} = <span class="i">$api</span><span class="i">-&gt;new</span><span class="s">(</span>
        -<span class="w">dbc</span>   <span class="cm">=&gt;</span> <span class="i">$dbc</span><span class="cm">,</span>
        -<span class="w">dbase</span> <span class="cm">=&gt;</span> <span class="i">$dbc</span>-&gt;{<span class="w">dbase</span>}<span class="cm">,</span>
        -<span class="w">host</span>  <span class="cm">=&gt;</span> <span class="i">$dbc</span>-&gt;{<span class="w">host</span>}<span class="cm">,</span>
        -<span class="w">user</span>  <span class="cm">=&gt;</span> <span class="i">$self</span>-&gt;{<span class="w">user</span>}<span class="cm">,</span>
    <span class="s">)</span><span class="sc">;</span>
    <span class="k">if</span> <span class="s">(</span> <span class="i">$self</span>-&gt;{<span class="w">API</span>} <span class="s">)</span> <span class="s">{</span>
        <span class="i">$self</span>-&gt;{<span class="w">API_loaded</span>} = <span class="n">1</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">else</span> <span class="s">{</span>
        <span class="i">$self</span>-&gt;{<span class="w">API_loaded</span>} = <span class="n">0</span><span class="sc">;</span>
    <span class="s">}</span>

    <span class="k">return</span> <span class="i">$self</span>-&gt;{<span class="w">API_loaded</span>}<span class="sc">;</span>
<span class="s">}</span>

<a name="start-"></a><span class="k">sub </span><span class="m">start</span> <span class="s">{</span>
    <span class="k">my</span> <span class="i">$this</span>      = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$protocol</span>  = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$plate_set</span> = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="s">(</span><span class="i">$class</span><span class="s">)</span> = <span class="k">ref</span><span class="s">(</span><span class="i">$this</span><span class="s">)</span> || <span class="i">$this</span><span class="sc">;</span>
    <span class="k">my</span> <span class="s">(</span><span class="i">$self</span><span class="s">)</span> = <span class="s">{</span><span class="s">}</span><span class="sc">;</span>

    <span class="i">$self</span>-&gt;{<span class="w">protocol</span>}    = <span class="i">$protocol</span><span class="sc">;</span>
    <span class="i">$self</span>-&gt;{<span class="w">set_number</span>}  = <span class="i">$plate_set</span><span class="sc">;</span>
    <span class="i">$self</span>-&gt;{<span class="w">status</span>}      = <span class="n">0</span><span class="sc">;</span>
    <span class="i">$self</span>-&gt;{<span class="w">Plates</span>}      = <span class="s">[</span><span class="s">]</span><span class="sc">;</span>
    <span class="i">$self</span>-&gt;{<span class="w">CurrentStep</span>} = <span class="n">0</span><span class="sc">;</span>
    <span class="i">$self</span>-&gt;{<span class="w">NextStep</span>}    = <span class="n">0</span><span class="sc">;</span>

    <span class="k">bless</span> <span class="i">$self</span><span class="cm">,</span> <span class="i">$class</span><span class="sc">;</span>

    <span class="k">return</span> <span class="i">$self</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">##############################</span>
<span class="c"># public_functions           #</span>
<span class="c">##############################</span>
<span class="c">########################</span>
<span class="c">#</span>
<span class="c"># Check if this step is a transfer step. (Aliquot, Transfer, Pool, or Split..)</span>
<span class="c">#  If it is, perform the appropriate transfer and generate the new plate ids.</span>
<span class="c">#</span>
<span class="c">#  required:  step name (eg. 'Transfer to 96-well Beckman')</span>
<span class="c">#             current_plates.</span>
<span class="c">#</span>
<span class="c">#</span>
<span class="c">##########################</span>
<a name="new_plate-"></a><span class="k">sub </span><span class="m">new_plate</span> <span class="s">{</span>
<span class="c">##########################</span>
    <span class="c">#</span>
    <span class="k">my</span> <span class="i">%args</span>      = <span class="i">&amp;filter_input</span><span class="s">(</span> \<span class="i">@_</span><span class="cm">,</span> -<span class="w">args</span> <span class="cm">=&gt;</span> <span class="q">'step'</span><span class="cm">,</span> -<span class="w">mandatory</span> <span class="cm">=&gt;</span> <span class="q">'step'</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$step</span>      = <span class="i">$args</span>{-<span class="w">step</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$include</span>   = <span class="i">$args</span>{-<span class="w">include</span>}<span class="sc">;</span>                                               <span class="c">## may be used to include extra options like 'Pre-Print' if required ##</span>
    <span class="k">my</span> <span class="i">$step_type</span> = <span class="i">$args</span>{-<span class="w">step_type</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$exclude</span>   = <span class="i">$args</span>{-<span class="w">exclude</span>}<span class="sc">;</span>                                               <span class="c">## may be used to exclude options like 'Setup' if required ##</span>
    <span class="k">my</span> <span class="i">$new_focus</span> = <span class="i">$args</span>{-<span class="w">new_focus</span>}<span class="sc">;</span>                                             <span class="c">## only return true if we are changing focus</span>

    <span class="k">my</span> <span class="i">@include_steps</span><span class="sc">;</span>
    <span class="i">@include_steps</span> = <span class="i">Cast_List</span><span class="s">(</span> -<span class="w">list</span> <span class="cm">=&gt;</span> <span class="i">$include</span><span class="cm">,</span> -<span class="w">to</span> <span class="cm">=&gt;</span> <span class="q">'array'</span> <span class="s">)</span> <span class="k">if</span> <span class="i">$include</span><span class="sc">;</span>

    <span class="c">#	my @transfers = qw(Transfer Aliquot Pool Split Pre-Print Setup Extract); ### Default transfers</span>

    <span class="k">my</span> <span class="i">@transfers</span> = <span class="q">qw(Transfer Aliquot Pool Split Setup Extract)</span><span class="sc">;</span>                 <span class="c">### Default transfers  ## Pre-print is NOT a Transfer step</span>
    <span class="k">if</span> <span class="s">(</span><span class="i">$step_type</span><span class="s">)</span> <span class="s">{</span>
        <span class="c">## Overwrite transfer types if specified</span>
        <span class="i">@transfers</span> = <span class="i">Cast_List</span><span class="s">(</span> -<span class="w">list</span> <span class="cm">=&gt;</span> <span class="i">$step_type</span><span class="cm">,</span> -<span class="w">to</span> <span class="cm">=&gt;</span> <span class="q">'array'</span> <span class="s">)</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">push</span> <span class="i">@transfers</span><span class="cm">,</span> <span class="i">@include_steps</span> <span class="k">if</span> <span class="i">$include</span><span class="sc">;</span>

    <span class="k">my</span> <span class="i">@exclude_steps</span><span class="sc">;</span>
    <span class="i">@exclude_steps</span> = <span class="i">Cast_List</span><span class="s">(</span> -<span class="w">list</span> <span class="cm">=&gt;</span> <span class="i">$exclude</span><span class="cm">,</span> -<span class="w">to</span> <span class="cm">=&gt;</span> <span class="q">'array'</span> <span class="s">)</span> <span class="k">if</span> <span class="i">$exclude</span><span class="sc">;</span>
    <span class="i">@transfers</span> = <span class="i">@</span>{ <span class="i">set_difference</span><span class="s">(</span> \<span class="i">@transfers</span><span class="cm">,</span> \<span class="i">@exclude_steps</span> <span class="s">)</span> }<span class="sc">;</span>

    <span class="k">my</span> <span class="i">$transfer_steps</span> = <span class="k">join</span><span class="s">(</span> <span class="q">'|'</span><span class="cm">,</span> <span class="i">@transfers</span> <span class="s">)</span><span class="sc">;</span>

    <span class="k">my</span> <span class="i">%step_info</span><span class="sc">;</span>

    <span class="k">if</span> <span class="s">(</span><span class="i">$step</span> =~ <span class="q">/^</span>
	<span class="q">	($transfer_steps)\s+     ## special cases</span>
	<span class="q">	(\#\d+\s)?                           ## optional for multiple steps with similar name (eg Transfer #2 to ..)</span>
	<span class="q">	([\s\w\-]*?)                          ## optional new extraction type</span>
	<span class="q">	\b(out\s)?to\s                        ## ... to .. (type)</span>
	<span class="q">	([\s\w\.\-]+)                        ## mandatory target type</span>
	<span class="q">	(.*)              ## special cases for suffixes (optional)</span>
	<span class="q">	$/xi</span>
        <span class="s">)</span>
    <span class="s">{</span>

        <span class="k">my</span> <span class="i">$xfer_method</span> = <span class="i">$1</span><span class="sc">;</span>
        <span class="k">my</span> <span class="i">$instance</span>    = <span class="i">$2</span><span class="sc">;</span>
        <span class="k">my</span> <span class="i">$sample_type</span> = <span class="i">$3</span><span class="sc">;</span>
        <span class="k">my</span> <span class="i">$focus</span>       = <span class="i">$4</span><span class="sc">;</span>
        <span class="k">my</span> <span class="i">$format</span>      = <span class="i">$5</span><span class="sc">;</span>
        <span class="k">my</span> <span class="i">$new_sample</span>  = <span class="i">$6</span><span class="sc">;</span>

        <span class="k">my</span> <span class="i">%step_info</span><span class="sc">;</span>
        <span class="i">$step_info</span>{<span class="q">'transfer_method'</span>} = <span class="i">$xfer_method</span><span class="sc">;</span>
        <span class="i">$step_info</span>{<span class="q">'instance_num'</span>}    = <span class="i">$instance</span><span class="sc">;</span>
        <span class="i">$step_info</span>{<span class="q">'new_sample_type'</span>} = <span class="i">chomp_edge_whitespace</span><span class="s">(</span><span class="i">$sample_type</span><span class="s">)</span><span class="sc">;</span>

        <span class="k">if</span> <span class="s">(</span> <span class="i">$focus</span> =~ <span class="q">/out/</span> <span class="s">)</span> <span class="s">{</span>
            <span class="i">$step_info</span>{<span class="q">'focus'</span>} = <span class="q">'source'</span><span class="sc">;</span>    <span class="c">## stay focused on original tubes/plates</span>
            <span class="k">if</span> <span class="s">(</span><span class="i">$new_focus</span><span class="s">)</span> <span class="s">{</span> <span class="k">return</span> <span class="k">undef</span> <span class="s">}</span>   <span class="c">## only if we ask to test for a new focus</span>
        <span class="s">}</span>
        <span class="k">else</span> <span class="s">{</span>
            <span class="i">$step_info</span>{<span class="q">'focus'</span>} = <span class="q">'target'</span><span class="sc">;</span>    <span class="c">## move focus to target tubes/plates</span>
        <span class="s">}</span>
        <span class="i">$step_info</span>{<span class="q">'new_format'</span>}       = <span class="i">&amp;chomp_edge_whitespace</span><span class="s">(</span><span class="i">$format</span><span class="s">)</span><span class="sc">;</span>
        <span class="i">$step_info</span>{<span class="q">'track_new_sample'</span>} = <span class="i">$new_sample</span><span class="sc">;</span>

        <span class="c">#	print HTML_Dump \%step_info;</span>
        <span class="k">return</span> <span class="i">$format</span><span class="cm">,</span> \<span class="i">%step_info</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">else</span> <span class="s">{</span>
        <span class="k">return</span> <span class="k">undef</span><span class="sc">;</span>
    <span class="s">}</span>
<span class="s">}</span>

<span class="c">#############################</span>
<a name="get_protocol_progress-"></a><span class="k">sub </span><span class="m">get_protocol_progress</span> <span class="s">{</span>
<span class="c">#############################</span>
    <span class="k">my</span> <span class="i">$self</span>               = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">%args</span>               = <span class="i">filter_input</span><span class="s">(</span> \<span class="i">@_</span><span class="cm">,</span> -<span class="w">args</span> <span class="cm">=&gt;</span> <span class="q">'protocol,pipeline,extra_condition'</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$protocol</span>           = <span class="i">$args</span>{-<span class="w">protocol</span>}<span class="sc">;</span>                                                    <span class="c">##</span>
    <span class="k">my</span> <span class="i">$pipeline</span>           = <span class="i">$args</span>{-<span class="w">pipeline</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$debug</span>              = <span class="i">$args</span>{-<span class="w">debug</span>} || <span class="n">0</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">@extra_condition</span>    = <span class="i">Cast_List</span><span class="s">(</span> -<span class="w">list</span> <span class="cm">=&gt;</span> <span class="i">$args</span>{-<span class="w">extra_condition</span>}<span class="cm">,</span> -<span class="w">to</span> <span class="cm">=&gt;</span> <span class="q">'array'</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">@pipeline_condition</span> = <span class="s">(</span><span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$pipeline_cond</span><span class="sc">;</span>

    <span class="k">if</span> <span class="s">(</span><span class="i">$pipeline</span><span class="s">)</span> <span class="s">{</span>
        <span class="k">my</span> <span class="i">$pipeline_list</span> = <span class="i">Cast_List</span><span class="s">(</span> -<span class="w">list</span> <span class="cm">=&gt;</span> <span class="i">$pipeline</span><span class="cm">,</span> -<span class="w">to</span> <span class="cm">=&gt;</span> <span class="q">'String'</span> <span class="s">)</span><span class="sc">;</span>

        <span class="c">#push @pipeline_condition, &quot;Plate.FK_Pipeline__ID IN ($pipeline_list) AND (Child.FK_Pipeline__ID IS NULL OR Child.FK_Pipeline__ID in ($pipeline_list))&quot;;</span>
        <span class="k">push</span> <span class="i">@pipeline_condition</span><span class="cm">,</span> <span class="q">&quot;Plate.FK_Pipeline__ID IN ($pipeline_list) &quot;</span><span class="sc">;</span>
        <span class="i">$pipeline_cond</span> = <span class="q">&quot;FK_Pipeline__ID IN ($pipeline_list)&quot;</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">my</span> <span class="i">@protocol_condition</span> = <span class="s">(</span><span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$protocol_cond</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$extra_left_join</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">@protocols</span> = <span class="i">Cast_List</span><span class="s">(</span> -<span class="w">list</span> <span class="cm">=&gt;</span> <span class="i">$protocol</span><span class="cm">,</span> -<span class="w">to</span> <span class="cm">=&gt;</span> <span class="q">'Array'</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">if</span> <span class="s">(</span><span class="i">$protocol</span><span class="s">)</span> <span class="s">{</span>
        <span class="k">my</span> <span class="i">$protocol_list</span> = <span class="i">Cast_List</span><span class="s">(</span> -<span class="w">list</span> <span class="cm">=&gt;</span> <span class="i">$protocol</span><span class="cm">,</span> -<span class="w">to</span> <span class="cm">=&gt;</span> <span class="q">'String'</span> <span class="s">)</span><span class="sc">;</span>
        <span class="k">push</span> <span class="i">@protocol_condition</span><span class="cm">,</span> <span class="q">&quot;FK_Lab_Protocol__ID IN ($protocol_list)&quot;</span><span class="sc">;</span>
        <span class="i">$protocol_cond</span> = <span class="q">&quot;Object_ID IN ($protocol_list)&quot;</span><span class="sc">;</span>

        <span class="c">#if protocol is the first step of the pipeline, add Plate_Schedule to extra left join and add new pipeline condition</span>
        <span class="c">#my $current_protocol_step_id = $self-&gt;{dbc}-&gt;Table_find( 'Pipeline_Step', 'Pipeline_Step_Order', &quot;WHERE Pipeline_Step_ID = $self-&gt;{pipeline_step_id}&quot;, -debug =&gt; $debug );</span>
        <span class="k">my</span> <span class="i">$current_protocol_step_id</span> = <span class="i">$self</span>-&gt;{<span class="w">dbc</span>}<span class="i">-&gt;Table_find</span><span class="s">(</span> <span class="q">'Pipeline_Step'</span><span class="cm">,</span> <span class="q">'Pipeline_Step_Order'</span><span class="cm">,</span> <span class="q">&quot;WHERE $pipeline_cond AND $protocol_cond&quot;</span><span class="cm">,</span> -<span class="w">debug</span> <span class="cm">=&gt;</span> <span class="i">$debug</span> <span class="s">)</span><span class="sc">;</span>
        <span class="k">if</span> <span class="s">(</span> <span class="i">$current_protocol_step_id</span> == <span class="n">1</span> <span class="s">)</span> <span class="s">{</span>
            <span class="i">$extra_left_join</span> = <span class="q">&quot;LEFT JOIN Plate_Schedule ON Plate.Plate_ID = Plate_Schedule.FK_Plate__ID&quot;</span><span class="sc">;</span>
            <span class="k">my</span> <span class="i">$extra_pipeline_condition</span> = <span class="k">pop</span> <span class="i">@pipeline_condition</span><span class="sc">;</span>
            <span class="i">$extra_pipeline_condition</span> = <span class="q">&quot;($extra_pipeline_condition OR (Plate_Schedule.FK_Pipeline__ID = $self-&gt;{pipeline} AND Plate.Plate_ID = Plate.FKOriginal_Plate__ID))&quot;</span><span class="sc">;</span>
            <span class="k">push</span> <span class="i">@pipeline_condition</span><span class="cm">,</span> <span class="i">$extra_pipeline_condition</span><span class="sc">;</span>
        <span class="s">}</span>
    <span class="s">}</span>
    <span class="k">my</span> <span class="i">$conditions</span> = <span class="k">join</span><span class="s">(</span> <span class="q">' AND '</span><span class="cm">,</span> <span class="i">@pipeline_condition</span><span class="cm">,</span> <span class="i">@extra_condition</span><span class="cm">,</span> <span class="i">@protocol_condition</span> <span class="s">)</span><span class="sc">;</span>

    <span class="c">#    my %prep_status = $self-&gt;{dbc}-&gt;Table_retrieve('Plate,Prep,Library,Lab_Protocol</span>
    <span class="c">#                                                    LEFT JOIN Plate as Child ON (Child.FKParent_Plate__ID = Plate.Plate_ID)',</span>
    <span class="c">#                                                   ['Plate.Plate_ID','Plate.Plate_Status','Child.Plate_Status as Child_Status','Prep_Name','Child.Plate_ID as Child','Lab_Protocol_ID','Child.FK_Branch__Code as Child_Branch'],</span>
    <span class="c">#						   &quot;WHERE Plate.FK_Library__Name = Library_Name and</span>
    <span class="c">#                                                    FK_Lab_Protocol__ID = Lab_Protocol_ID</span>
    <span class="c">#                                                    and Lab_Protocol_Name &lt;&gt; 'Standard'</span>
    <span class="c">#                                                    and Prep.Prep_ID = Plate.FKLast_Prep__ID AND</span>
    <span class="c">#                                                    $conditions GROUP BY Plate.Plate_ID,Child.Plate_ID&quot;</span>
    <span class="c">#						   ,-key=&gt;'Lab_Protocol_ID');</span>

    <span class="k">my</span> <span class="i">%prep_status</span> = <span class="i">$self</span>-&gt;{<span class="w">dbc</span>}<span class="i">-&gt;Table_retrieve</span><span class="s">(</span>
        <span class="q">&quot;Plate,Plate_Prep,Prep,Library,Lab_Protocol</span>
                                                    <span class="q">                                                    LEFT JOIN Plate as Child ON (Child.FKParent_Plate__ID = Plate.Plate_ID)</span>
                                                    <span class="q">                                                    $extra_left_join&quot;</span><span class="cm">,</span>
        <span class="s">[</span> <span class="q">'Plate.Plate_ID'</span><span class="cm">,</span> <span class="q">'Plate.Plate_Status'</span><span class="cm">,</span> <span class="q">'Child.Plate_Status as Child_Status'</span><span class="cm">,</span> <span class="q">'Prep_Name'</span><span class="cm">,</span> <span class="q">'Child.Plate_ID as Child'</span><span class="cm">,</span> <span class="q">'Lab_Protocol_ID'</span><span class="cm">,</span> <span class="q">'Child.FK_Branch__Code as Child_Branch'</span><span class="cm">,</span> <span class="q">'Child.FK_Pipeline__ID as Child_Pipeline'</span> <span class="s">]</span><span class="cm">,</span>
        <span class="q">&quot;WHERE Plate.FK_Library__Name = Library_Name and</span>
                                                    <span class="q">                                                    Plate_Prep.FK_Plate__ID = Plate.Plate_ID and </span>
                                                    <span class="q">                                                    Plate_Prep.FK_Prep__ID = Prep_ID and</span>
                                                    <span class="q">                                                    FK_Lab_Protocol__ID = Lab_Protocol_ID and</span>
                                                    <span class="q">                                                    Lab_Protocol_Name &lt;&gt; 'Standard' AND</span>
                                                    <span class="q">                                                    $conditions ORDER BY Prep_DateTime DESC, Prep_ID DESC&quot;</span>
        <span class="cm">,</span>
        -<span class="w">key</span>   <span class="cm">=&gt;</span> <span class="q">'Lab_Protocol_ID'</span><span class="cm">,</span>
        -<span class="w">debug</span> <span class="cm">=&gt;</span> <span class="i">$debug</span>
    <span class="s">)</span><span class="sc">;</span>

    <span class="c">#This is getting all the plates that has a prep records for the next protocol</span>
    <span class="c">#If a plate already has a prep in the next protocol, it will be track by the next protocol, therefore can skip for the current protocol</span>
    <span class="c">#This is here for that fact that more preps can already be done on the plate after it &quot;Completed Protocol&quot; for the current protcol</span>
    <span class="c">#If this is not here, there will be many more unnessary Completed/Repeat</span>
    <span class="k">my</span> <span class="i">%next_protocol_plate_hash</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">@next_protocols</span> = <span class="i">$self</span>-&gt;{<span class="w">dbc</span>}<span class="i">-&gt;Table_find</span><span class="s">(</span> <span class="q">'Pipeline_Step'</span><span class="cm">,</span> <span class="q">'Object_ID'</span><span class="cm">,</span> <span class="q">&quot;WHERE $pipeline_cond AND Pipeline_Step_Order IN (SELECT Pipeline_Step_Order + 1 FROM Pipeline_Step WHERE $pipeline_cond AND $protocol_cond)&quot;</span><span class="cm">,</span> -<span class="w">debug</span> <span class="cm">=&gt;</span> <span class="i">$debug</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">if</span> <span class="s">(</span><span class="i">@next_protocols</span><span class="s">)</span> <span class="s">{</span>
        <span class="k">my</span> <span class="i">$next_protocol</span> = <span class="k">join</span><span class="s">(</span> <span class="q">&quot;,&quot;</span><span class="cm">,</span> <span class="i">@next_protocols</span> <span class="s">)</span><span class="sc">;</span>

        <span class="c">#my $next_conditions = join(' AND ', @pipeline_condition, @extra_condition, (&quot;FK_Lab_Protocol__ID IN ($next_protocol)&quot;));</span>
        <span class="k">my</span> <span class="i">$next_conditions</span> = <span class="k">join</span><span class="s">(</span> <span class="q">' AND '</span><span class="cm">,</span> <span class="s">(</span><span class="q">&quot;$pipeline_cond&quot;</span><span class="s">)</span><span class="cm">,</span> <span class="i">@extra_condition</span><span class="cm">,</span> <span class="s">(</span><span class="q">&quot;FK_Lab_Protocol__ID IN ($next_protocol)&quot;</span><span class="s">)</span> <span class="s">)</span><span class="sc">;</span>
        <span class="k">my</span> <span class="i">%next_prep_status</span> = <span class="i">$self</span>-&gt;{<span class="w">dbc</span>}<span class="i">-&gt;Table_retrieve</span><span class="s">(</span>
            <span class="q">'Plate,Plate_Prep,Prep,Library,Lab_Protocol'</span><span class="cm">,</span>
            <span class="s">[</span><span class="q">'Plate_ID'</span><span class="s">]</span><span class="cm">,</span>
            <span class="q">&quot;WHERE Plate.FK_Library__Name = Library_Name and</span>
                                                              <span class="q">                                                              Plate_Prep.FK_Plate__ID = Plate.Plate_ID and</span>
                                                              <span class="q">                                                              Plate_Prep.FK_Prep__ID = Prep_ID and</span>
                                                              <span class="q">                                                              FK_Lab_Protocol__ID = Lab_Protocol_ID and</span>
                                                              <span class="q">                                                              Lab_Protocol_Name &lt;&gt; 'Standard' AND</span>
                                                              <span class="q">                                                              $next_conditions Group By Plate_ID&quot;</span>
            <span class="cm">,</span> -<span class="w">debug</span> <span class="cm">=&gt;</span> <span class="i">$debug</span>
        <span class="s">)</span><span class="sc">;</span>
        <span class="i">%next_protocol_plate_hash</span> = <span class="k">map</span> <span class="s">{</span> <span class="i">$_</span> <span class="cm">=&gt;</span> <span class="n">1</span><span class="sc">;</span> <span class="s">}</span> <span class="k">grep</span> <span class="s">{</span><span class="i">$_</span><span class="s">}</span> <span class="i">@</span>{ <span class="i">$next_prep_status</span>{<span class="w">Plate_ID</span>} }<span class="sc">;</span>
    <span class="s">}</span>

    <span class="k">foreach</span> <span class="k">my</span> <span class="i">$lab_protocol</span> <span class="s">(</span><span class="i">@protocols</span><span class="s">)</span> <span class="s">{</span>
        <span class="i">$prep_status</span>{<span class="i">$lab_protocol</span>}{<span class="q">'Completed'</span>}     = <span class="s">[</span><span class="s">]</span><span class="sc">;</span>
        <span class="i">$prep_status</span>{<span class="i">$lab_protocol</span>}{<span class="q">'In Progress'</span>}   = <span class="s">[</span><span class="s">]</span><span class="sc">;</span>
        <span class="i">$prep_status</span>{<span class="i">$lab_protocol</span>}{<span class="q">'Failed Plates'</span>} = <span class="s">[</span><span class="s">]</span><span class="sc">;</span>
        <span class="i">$prep_status</span>{<span class="i">$lab_protocol</span>}{<span class="q">'Transferred'</span>}   = <span class="s">[</span><span class="s">]</span><span class="sc">;</span>
        <span class="k">my</span> <span class="i">$data</span> = <span class="i">$prep_status</span>{<span class="i">$lab_protocol</span>}<span class="sc">;</span>

        <span class="k">my</span> <span class="i">$index</span> = <span class="n">0</span><span class="sc">;</span>
        <span class="k">my</span> <span class="i">%child_plate_status</span><span class="sc">;</span>
        <span class="k">my</span> <span class="i">%processed_plate_ID</span><span class="sc">;</span>
        <span class="k">while</span> <span class="s">(</span> <span class="k">defined</span> <span class="i">$data</span>-&gt;{<span class="w">Plate_ID</span>}[<span class="i">$index</span>] <span class="s">)</span> <span class="s">{</span>
            <span class="k">my</span> <span class="i">$plate_id</span> = <span class="i">$data</span>-&gt;{<span class="w">Plate_ID</span>}[<span class="i">$index</span>]<span class="sc">;</span>

            <span class="c">#If a plate already has a prep in the next protocol, it will be track by the next protocol, therefore can skip for the current protocol</span>
            <span class="k">if</span> <span class="s">(</span> <span class="i">$next_protocol_plate_hash</span>{<span class="i">$plate_id</span>} <span class="s">)</span> <span class="s">{</span>
                <span class="i">$index</span>++<span class="sc">;</span>
                <span class="k">next</span><span class="sc">;</span>
            <span class="s">}</span>

            <span class="k">my</span> <span class="i">$child_id</span>       = <span class="i">$data</span>-&gt;{<span class="w">Child</span>}[<span class="i">$index</span>]<span class="sc">;</span>
            <span class="k">my</span> <span class="i">$child_status</span>   = <span class="i">$data</span>-&gt;{<span class="w">Child_Status</span>}[<span class="i">$index</span>]<span class="sc">;</span>
            <span class="k">my</span> <span class="i">$child_branch</span>   = <span class="i">$data</span>-&gt;{<span class="w">Child_Branch</span>}[<span class="i">$index</span>]<span class="sc">;</span>
            <span class="k">my</span> <span class="i">$child_pipeline</span> = <span class="i">$data</span>-&gt;{<span class="w">Child_Pipeline</span>}[<span class="i">$index</span>]<span class="sc">;</span>
            <span class="k">my</span> <span class="i">$pipeline_list</span>  = <span class="i">Cast_List</span><span class="s">(</span> -<span class="w">list</span> <span class="cm">=&gt;</span> <span class="i">$pipeline</span><span class="cm">,</span> -<span class="w">to</span> <span class="cm">=&gt;</span> <span class="q">'String'</span> <span class="s">)</span><span class="sc">;</span>

            <span class="c">#Not checking for child's pieline because a child can be moved to another pipeline and the parent need to be in repeat</span>
            <span class="c">#if ($child_id &amp;&amp; $child_pipeline eq $pipeline_list) {</span>
            <span class="k">if</span> <span class="s">(</span><span class="i">$child_id</span><span class="s">)</span> <span class="s">{</span>

                <span class="k">if</span> <span class="s">(</span> <span class="i">$child_status</span> <span class="k">ne</span> <span class="q">'Failed'</span> <span class="s">)</span> <span class="s">{</span>
                    <span class="k">if</span> <span class="s">(</span> <span class="i">$child_status</span> <span class="k">ne</span> <span class="q">'Pre-Printed'</span> <span class="s">)</span> <span class="s">{</span>
                        <span class="k">push</span> <span class="i">@</span>{ <span class="i">$child_plate_status</span>{<span class="w">Repeat</span>}{<span class="i">$child_branch</span>} }<span class="cm">,</span> <span class="i">$plate_id</span><span class="sc">;</span>    <span class="c">#if !grep({$_ eq $plate_id} @{$child_plate_status{Repeat}});</span>
                    <span class="s">}</span>
                <span class="s">}</span>
                <span class="k">else</span> <span class="s">{</span>
                    <span class="k">push</span> <span class="i">@</span>{ <span class="i">$child_plate_status</span>{<span class="w">Redo</span>}{<span class="i">$child_branch</span>} }<span class="cm">,</span> <span class="i">$plate_id</span><span class="sc">;</span>          <span class="c">#if !grep({$_ eq $plate_id} @{$child_plate_status{Redo}});</span>
                <span class="s">}</span>
            <span class="s">}</span>

            <span class="c">#Not checking for child's pieline because a child can be moved to another pipeline and the parent shouldn't be in progress</span>
            <span class="c">#Howver this segment of code is useful if we need to assign one plate to two different pipelines</span>
            <span class="c">#i.e. this code is checking if child exist for this pipeline</span>

            <span class="c">#already process the plate for the lastest prep in the protocol, no need to do any more work</span>
            <span class="c">#(i.e. getting the last prep from Plate_Prep by ordering Prep_DateTime descendingly)</span>
            <span class="k">if</span> <span class="s">(</span> <span class="i">$processed_plate_ID</span>{<span class="i">$plate_id</span>} <span class="s">)</span> <span class="s">{</span>
                <span class="i">$index</span>++<span class="sc">;</span>
                <span class="k">next</span><span class="sc">;</span>
            <span class="s">}</span>

            <span class="k">my</span> <span class="i">$prep_name</span> = <span class="i">$data</span>-&gt;{<span class="w">Prep_Name</span>}[<span class="i">$index</span>]<span class="sc">;</span>
            <span class="k">my</span> <span class="i">$failed</span> = <span class="i">$data</span>-&gt;{<span class="w">Plate_Status</span>}[<span class="i">$index</span>] <span class="k">eq</span> <span class="q">'Failed'</span> ? <span class="n">1</span> <span class="co">:</span> <span class="n">0</span><span class="sc">;</span>

            <span class="k">if</span> <span class="s">(</span> <span class="i">$prep_name</span> <span class="k">eq</span> <span class="q">'Completed Protocol'</span> <span class="s">)</span> <span class="s">{</span>
                <span class="c">## Completed</span>
                <span class="k">push</span> <span class="i">@</span>{ <span class="i">$prep_status</span>{<span class="i">$lab_protocol</span>}{<span class="q">'Completed'</span>} }<span class="cm">,</span> <span class="i">$plate_id</span> <span class="k">if</span> !<span class="k">grep</span><span class="s">(</span> <span class="s">{</span> <span class="i">$_</span> <span class="k">eq</span> <span class="i">$plate_id</span> <span class="s">}</span> <span class="i">@</span>{ <span class="i">$prep_status</span>{<span class="i">$lab_protocol</span>}{<span class="q">'Completed'</span>} } <span class="s">)</span><span class="sc">;</span>
            <span class="s">}</span>
            <span class="k">elsif</span> <span class="s">(</span> <span class="s">(</span> !<span class="i">$child_id</span> || <span class="i">$child_status</span> <span class="k">eq</span> <span class="q">'Pre-Printed'</span> <span class="s">)</span> &amp;&amp; <span class="i">$prep_name</span> <span class="k">ne</span> <span class="q">'Completed Protocol'</span> <span class="s">)</span> <span class="s">{</span>
                <span class="c">## In progress</span>
                <span class="k">push</span> <span class="i">@</span>{ <span class="i">$prep_status</span>{<span class="i">$lab_protocol</span>}{<span class="q">'In Progress'</span>} }<span class="cm">,</span> <span class="i">$plate_id</span> <span class="k">if</span> !<span class="k">grep</span><span class="s">(</span> <span class="s">{</span> <span class="i">$_</span> <span class="k">eq</span> <span class="i">$plate_id</span> <span class="s">}</span> <span class="i">@</span>{ <span class="i">$prep_status</span>{<span class="i">$lab_protocol</span>}{<span class="q">'In Progress'</span>} } <span class="s">)</span><span class="sc">;</span>
            <span class="s">}</span>
            <span class="k">elsif</span> <span class="s">(</span><span class="i">$failed</span><span class="s">)</span> <span class="s">{</span>
                <span class="k">push</span> <span class="i">@</span>{ <span class="i">$prep_status</span>{<span class="i">$lab_protocol</span>}{<span class="q">'Failed Plates'</span>} }<span class="cm">,</span> <span class="i">$plate_id</span> <span class="k">if</span> !<span class="k">grep</span><span class="s">(</span> <span class="s">{</span> <span class="i">$_</span> <span class="k">eq</span> <span class="i">$plate_id</span> <span class="s">}</span> <span class="i">@</span>{ <span class="i">$prep_status</span>{<span class="i">$lab_protocol</span>}{<span class="q">'Failed Plates'</span>} } <span class="s">)</span><span class="sc">;</span>
            <span class="s">}</span>
            <span class="k">else</span> <span class="s">{</span>
                <span class="c">## Transferred</span>
                <span class="k">push</span> <span class="i">@</span>{ <span class="i">$prep_status</span>{<span class="i">$lab_protocol</span>}{<span class="q">'Transferred'</span>} }<span class="cm">,</span> <span class="i">$plate_id</span> <span class="k">if</span> !<span class="k">grep</span><span class="s">(</span> <span class="s">{</span> <span class="i">$_</span> <span class="k">eq</span> <span class="i">$plate_id</span> <span class="s">}</span> <span class="i">@</span>{ <span class="i">$prep_status</span>{<span class="i">$lab_protocol</span>}{<span class="q">'Transferred'</span>} } <span class="s">)</span><span class="sc">;</span>
            <span class="s">}</span>
            <span class="i">$processed_plate_ID</span>{<span class="i">$plate_id</span>} = <span class="n">1</span><span class="sc">;</span>
            <span class="i">$index</span>++<span class="sc">;</span>
        <span class="s">}</span>

        <span class="k">my</span> <span class="i">@overall_redo</span><span class="sc">;</span>
        <span class="k">foreach</span> <span class="k">my</span> <span class="i">$branch</span> <span class="s">(</span> <span class="k">keys</span> <span class="i">%</span>{ <span class="i">$child_plate_status</span>{<span class="w">Redo</span>} } <span class="s">)</span> <span class="s">{</span>

            <span class="c">#There is a fail child for the branch already, check to see if there is an unfail child for the branch and if there isn't then it is a redo</span>
            <span class="k">my</span> <span class="i">$redo_plates</span> = <span class="i">set_difference</span><span class="s">(</span> <span class="i">$child_plate_status</span>{<span class="w">Redo</span>}{<span class="i">$branch</span>}<span class="cm">,</span> <span class="i">$child_plate_status</span>{<span class="w">Repeat</span>}{<span class="i">$branch</span>} <span class="s">)</span><span class="sc">;</span>

            <span class="c">#Make sure no duplicate</span>
            <span class="k">foreach</span> <span class="k">my</span> <span class="i">$redo_plate</span> <span class="s">(</span> <span class="i">@</span>{<span class="i">$redo_plates</span>} <span class="s">)</span> <span class="s">{</span>
                <span class="k">push</span> <span class="i">@overall_redo</span><span class="cm">,</span> <span class="i">$redo_plate</span> <span class="k">if</span> !<span class="k">grep</span><span class="s">(</span> <span class="s">{</span> <span class="i">$_</span> <span class="k">eq</span> <span class="i">$redo_plate</span> <span class="s">}</span> <span class="i">@overall_redo</span> <span class="s">)</span><span class="sc">;</span>
            <span class="s">}</span>
        <span class="s">}</span>
        <span class="k">my</span> <span class="i">@overall_repeat</span><span class="sc">;</span>
        <span class="k">foreach</span> <span class="k">my</span> <span class="i">$branch</span> <span class="s">(</span> <span class="k">keys</span> <span class="i">%</span>{ <span class="i">$child_plate_status</span>{<span class="w">Repeat</span>} } <span class="s">)</span> <span class="s">{</span>

            <span class="c">#if a plate is already classify as a redo, then the plate can't be a repeat</span>
            <span class="k">my</span> <span class="i">$repeat_plates</span> = <span class="i">set_difference</span><span class="s">(</span> <span class="i">$child_plate_status</span>{<span class="w">Repeat</span>}{<span class="i">$branch</span>}<span class="cm">,</span> \<span class="i">@overall_redo</span> <span class="s">)</span><span class="sc">;</span>

            <span class="c">#Make sure no duplicate</span>
            <span class="k">foreach</span> <span class="k">my</span> <span class="i">$repeat_plate</span> <span class="s">(</span> <span class="i">@</span>{<span class="i">$repeat_plates</span>} <span class="s">)</span> <span class="s">{</span>
                <span class="k">push</span> <span class="i">@overall_repeat</span><span class="cm">,</span> <span class="i">$repeat_plate</span> <span class="k">if</span> !<span class="k">grep</span><span class="s">(</span> <span class="s">{</span> <span class="i">$_</span> <span class="k">eq</span> <span class="i">$repeat_plate</span> <span class="s">}</span> <span class="i">@overall_repeat</span> <span class="s">)</span><span class="sc">;</span>
            <span class="s">}</span>
        <span class="s">}</span>

        <span class="c">#$child_plate_status{Redo}= set_difference($child_plate_status{Redo},$child_plate_status{Repeat});</span>
        <span class="i">$prep_status</span>{<span class="i">$lab_protocol</span>}{<span class="q">'Ready'</span>} = <span class="i">$self</span><span class="i">-&gt;get_ready_plates</span><span class="s">(</span>
            -<span class="w">condition</span>          <span class="cm">=&gt;</span> \<span class="i">@extra_condition</span><span class="cm">,</span>
            -<span class="w">transferred</span>        <span class="cm">=&gt;</span> <span class="i">$prep_status</span>{<span class="i">$lab_protocol</span>}{<span class="q">'Transferred'</span>}<span class="cm">,</span>
            -<span class="w">in_progress</span>        <span class="cm">=&gt;</span> <span class="i">$prep_status</span>{<span class="i">$lab_protocol</span>}{<span class="q">'In Progress'</span>}<span class="cm">,</span>
            -<span class="w">failed</span>             <span class="cm">=&gt;</span> <span class="i">$prep_status</span>{<span class="i">$lab_protocol</span>}{<span class="q">'Failed Plates'</span>}<span class="cm">,</span>
            -<span class="w">completed</span>          <span class="cm">=&gt;</span> <span class="i">$prep_status</span>{<span class="i">$lab_protocol</span>}{<span class="q">'Completed'</span>}<span class="cm">,</span>
            -<span class="w">child_plate_status</span> <span class="cm">=&gt;</span> \<span class="i">%child_plate_status</span>
        <span class="s">)</span><span class="sc">;</span>

        <span class="i">$prep_status</span>{<span class="i">$lab_protocol</span>}{<span class="q">'Redo'</span>}   = \<span class="i">@overall_redo</span><span class="sc">;</span>      <span class="c">#$child_plate_status{Redo};</span>
        <span class="i">$prep_status</span>{<span class="i">$lab_protocol</span>}{<span class="q">'Repeat'</span>} = \<span class="i">@overall_repeat</span><span class="sc">;</span>    <span class="c">#$child_plate_status{Repeat};</span>
    <span class="s">}</span>
    <span class="k">return</span> \<span class="i">%prep_status</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">#</span>
<span class="c"># Retrieve valid protocols given a list of plates or plate_set</span>
<span class="c">#</span>
<span class="c">#</span>
<span class="c">###############################</span>
<a name="get_protocol_options-"></a><span class="k">sub </span><span class="m">get_protocol_options</span> <span class="s">{</span>
<span class="c">###############################</span>
    <span class="k">my</span> <span class="i">%args</span>      = <span class="i">filter_input</span><span class="s">(</span> \<span class="i">@_</span><span class="cm">,</span> -<span class="w">args</span> <span class="cm">=&gt;</span> <span class="q">'dbc'</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$dbc</span>       = <span class="i">$args</span>{-<span class="w">dbc</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$set</span>       = <span class="i">$args</span>{-<span class="w">set</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$plate_ids</span> = <span class="i">$args</span>{-<span class="w">plate_ids</span>} || <span class="i">$args</span>{-<span class="w">plate_id</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$format</span>    = <span class="i">$args</span>{<span class="q">'-format'</span>}<span class="sc">;</span>                        <span class="c">## returns id by default (set format=&gt;'name' to return lab protocol names (or field_reference)</span>

    <span class="k">my</span> <span class="i">$debug</span> = <span class="i">$args</span>{-<span class="w">debug</span>}<span class="sc">;</span>

    <span class="k">if</span> <span class="s">(</span><span class="i">$set</span><span class="s">)</span> <span class="s">{</span>
        <span class="i">$plate_ids</span> = <span class="k">join</span> <span class="q">','</span><span class="cm">,</span> <span class="i">$dbc</span><span class="i">-&gt;Table_find</span><span class="s">(</span> <span class="q">'Plate_Set'</span><span class="cm">,</span> <span class="q">'FK_Plate__ID'</span><span class="cm">,</span> <span class="q">&quot;WHERE Plate_Set_Number = '$set'&quot;</span><span class="cm">,</span> -<span class="w">distinct</span> <span class="cm">=&gt;</span> <span class="n">1</span> <span class="s">)</span><span class="sc">;</span>
    <span class="s">}</span>

    <span class="i">$plate_ids</span> ||= <span class="n">0</span><span class="sc">;</span>

    <span class="k">my</span> <span class="i">@pipelines</span> = <span class="i">$dbc</span><span class="i">-&gt;Table_find</span><span class="s">(</span> <span class="q">'Plate'</span><span class="cm">,</span> <span class="q">'FK_Pipeline__ID'</span><span class="cm">,</span> <span class="q">&quot;WHERE Plate_ID IN ($plate_ids)&quot;</span><span class="cm">,</span> -<span class="w">distinct</span> <span class="cm">=&gt;</span> <span class="n">1</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">@visible_protocols</span> = <span class="i">visible_protocols</span><span class="s">(</span> <span class="i">$dbc</span><span class="cm">,</span> \<span class="i">@pipelines</span> <span class="s">)</span><span class="sc">;</span>    <span class="c">## pipelines visible to all plates in this group</span>

    <span class="k">my</span> <span class="i">@unlinked</span> = <span class="i">$dbc</span><span class="i">-&gt;Table_find</span><span class="s">(</span> <span class="q">'Lab_Protocol,Object_Class LEFT JOIN Pipeline_Step ON Object_ID=Lab_Protocol_ID AND FK_Object_Class__ID=Object_Class_ID'</span><span class="cm">,</span> <span class="q">'Lab_Protocol_ID'</span><span class="cm">,</span> <span class="q">&quot;WHERE Object_Class = 'Lab_Protocol' AND Pipeline_Step_ID IS NULL&quot;</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">if</span> <span class="s">(</span><span class="i">@unlinked</span><span class="s">)</span> <span class="s">{</span>
        <span class="k">push</span> <span class="i">@visible_protocols</span><span class="cm">,</span> <span class="i">@unlinked</span><span class="sc">;</span>
    <span class="s">}</span>

    <span class="k">my</span> <span class="i">$pids</span> = <span class="k">join</span> <span class="q">','</span><span class="cm">,</span> <span class="i">@visible_protocols</span><span class="sc">;</span>

    <span class="k">if</span> <span class="s">(</span><span class="i">$pids</span><span class="s">)</span> <span class="s">{</span>
        <span class="c">## filter on accessible groups if applicable ##</span>
        <span class="k">my</span> <span class="i">$grps</span> = <span class="i">$dbc</span><span class="i">-&gt;get_local</span><span class="s">(</span><span class="q">'group_list'</span><span class="s">)</span><span class="sc">;</span>
        <span class="i">$pids</span> = <span class="k">join</span> <span class="q">','</span><span class="cm">,</span>
            <span class="i">$dbc</span><span class="i">-&gt;Table_find</span><span class="s">(</span> <span class="q">'Lab_Protocol LEFT JOIN GrpLab_Protocol ON FK_Lab_Protocol__ID=Lab_Protocol_ID'</span><span class="cm">,</span> <span class="q">'Lab_Protocol_ID'</span><span class="cm">,</span> <span class="q">&quot;WHERE Lab_Protocol_ID IN ($pids) AND (FK_Grp__ID IN ($grps) OR FK_Grp__ID IS NULL)&quot;</span><span class="cm">,</span> -<span class="w">distinct</span> <span class="cm">=&gt;</span> <span class="n">1</span><span class="cm">,</span> -<span class="w">debug</span> <span class="cm">=&gt;</span> <span class="i">$debug</span> <span class="s">)</span><span class="sc">;</span>

        <span class="c">## reset visible protocols ##</span>
        <span class="i">@visible_protocols</span> = <span class="k">split</span> <span class="q">','</span><span class="cm">,</span> <span class="i">$pids</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">else</span> <span class="s">{</span>
        <span class="i">$pids</span> = <span class="q">'0'</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">if</span> <span class="s">(</span> <span class="i">@visible_protocols</span> &amp;&amp; <span class="i">$format</span> =~ <span class="q">/reference/i</span> <span class="s">)</span> <span class="s">{</span>
        <span class="k">my</span> <span class="i">@list</span> = <span class="i">$dbc</span><span class="i">-&gt;get_FK_info</span><span class="s">(</span> <span class="q">'FK_Lab_Protocol__ID'</span><span class="cm">,</span> <span class="i">$pids</span><span class="cm">,</span> -<span class="w">condition</span> <span class="cm">=&gt;</span> <span class="q">&quot;WHERE Lab_Protocol_ID IN ($pids)&quot;</span><span class="cm">,</span> -<span class="w">debug</span> <span class="cm">=&gt;</span> <span class="i">$debug</span> <span class="s">)</span><span class="sc">;</span>
        <span class="k">return</span> <span class="i">@list</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">elsif</span> <span class="s">(</span> <span class="i">@visible_protocols</span> &amp;&amp; <span class="i">$format</span> =~ <span class="q">/name/i</span> <span class="s">)</span> <span class="s">{</span>
        <span class="k">my</span> <span class="i">@list</span> = <span class="i">$dbc</span><span class="i">-&gt;Table_find</span><span class="s">(</span> <span class="q">'Lab_Protocol'</span><span class="cm">,</span> <span class="q">'Lab_Protocol_Name'</span><span class="cm">,</span> <span class="q">&quot;WHERE Lab_Protocol_ID IN ($pids)&quot;</span><span class="cm">,</span> -<span class="w">debug</span> <span class="cm">=&gt;</span> <span class="i">$debug</span> <span class="s">)</span><span class="sc">;</span>
        <span class="k">return</span> <span class="i">@list</span><span class="sc">;</span>

    <span class="s">}</span>
    <span class="k">else</span> <span class="s">{</span>
        <span class="k">return</span> <span class="i">@visible_protocols</span><span class="sc">;</span>
    <span class="s">}</span>
<span class="s">}</span>

<span class="c">#</span>
<span class="c"># Retrieve visible protocols given a list of pipelines</span>
<span class="c">#</span>
<span class="c">###########################</span>
<a name="visible_protocols-"></a><span class="k">sub </span><span class="m">visible_protocols</span> <span class="s">{</span>
<span class="c">###########################</span>
    <span class="k">my</span> <span class="i">%args</span>      = <span class="i">filter_input</span><span class="s">(</span> \<span class="i">@_</span><span class="cm">,</span> -<span class="w">args</span> <span class="cm">=&gt;</span> <span class="q">'dbc,pipeline'</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$dbc</span>       = <span class="i">$args</span>{-<span class="w">dbc</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$pipelines</span> = <span class="i">$args</span>{-<span class="w">pipeline</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$condition</span> = <span class="i">$args</span>{-<span class="w">condition</span>} || <span class="n">1</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$or</span>        = <span class="i">$args</span>{ -<span class="k">or</span> }<span class="sc">;</span>                                   <span class="c">## include protocols that are in ANY of the pipelines supplied (rather than all by default)</span>

    <span class="k">my</span> <span class="i">$found_pipelines</span>  = <span class="n">0</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$common_protocols</span> = <span class="s">[</span><span class="s">]</span><span class="sc">;</span>

    <span class="k">if</span> <span class="s">(</span><span class="i">$or</span><span class="s">)</span> <span class="s">{</span>
        <span class="c">## pull up all applicable protocol in ANY of the list given... ##</span>
        <span class="i">$found_pipelines</span> = <span class="k">join</span> <span class="q">','</span><span class="cm">,</span> <span class="i">@$pipelines</span><span class="sc">;</span>
        <span class="k">my</span> <span class="i">@protocols</span> = <span class="i">$dbc</span><span class="i">-&gt;Table_find</span><span class="s">(</span> <span class="q">'Pipeline_Step,Object_Class'</span><span class="cm">,</span> <span class="q">'Object_ID'</span><span class="cm">,</span> <span class="q">&quot;WHERE FK_Object_Class__ID=Object_Class_ID AND Object_Class = 'Lab_Protocol' AND FK_Pipeline__ID IN ($found_pipelines)&quot;</span> <span class="s">)</span><span class="sc">;</span>

        <span class="k">my</span> <span class="i">@more_protocols</span><span class="sc">;</span>
        <span class="k">my</span> <span class="i">@daughter_pipelines</span> = <span class="i">$dbc</span><span class="i">-&gt;Table_find</span><span class="s">(</span> <span class="q">'Pipeline'</span><span class="cm">,</span> <span class="q">'Pipeline_ID'</span><span class="cm">,</span> <span class="q">&quot;WHERE FKParent_Pipeline__ID IN ($found_pipelines)&quot;</span> <span class="s">)</span><span class="sc">;</span>
        <span class="k">if</span> <span class="s">(</span><span class="i">@daughter_pipelines</span><span class="s">)</span> <span class="s">{</span>
            <span class="i">@more_protocols</span> = <span class="i">visible_protocols</span><span class="s">(</span> <span class="i">$dbc</span><span class="cm">,</span> \<span class="i">@daughter_pipelines</span><span class="cm">,</span> -<span class="w">or</span> <span class="cm">=&gt;</span> <span class="n">1</span> <span class="s">)</span><span class="sc">;</span>
        <span class="s">}</span>
        <span class="i">$common_protocols</span> = <span class="i">RGmath::union</span><span class="s">(</span> \<span class="i">@protocols</span><span class="cm">,</span> \<span class="i">@more_protocols</span> <span class="s">)</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">else</span> <span class="s">{</span>
        <span class="c">## protocols need to be in ALL pipelines supplied (for cases of multiple plates scanned) ##</span>
        <span class="k">foreach</span> <span class="k">my</span> <span class="i">$pipeline</span> <span class="s">(</span><span class="i">@$pipelines</span><span class="s">)</span> <span class="s">{</span>
            <span class="k">if</span> <span class="s">(</span> !<span class="i">$pipeline</span> <span class="s">)</span> <span class="s">{</span><span class="k">next</span><span class="s">}</span>
            <span class="i">$found_pipelines</span>++<span class="sc">;</span>
            <span class="k">my</span> <span class="i">@daughter_pipelines</span> = <span class="i">$dbc</span><span class="i">-&gt;Table_find</span><span class="s">(</span> <span class="q">'Pipeline'</span><span class="cm">,</span> <span class="q">'Pipeline_ID'</span><span class="cm">,</span> <span class="q">&quot;WHERE FKParent_Pipeline__ID = $pipeline&quot;</span> <span class="s">)</span><span class="sc">;</span>
            <span class="k">my</span> <span class="i">@protocols</span> = <span class="i">$dbc</span><span class="i">-&gt;Table_find</span><span class="s">(</span> <span class="q">'Pipeline_Step,Object_Class'</span><span class="cm">,</span> <span class="q">'Object_ID'</span><span class="cm">,</span> <span class="q">&quot;WHERE FK_Object_Class__ID=Object_Class_ID AND Object_Class = 'Lab_Protocol' AND FK_Pipeline__ID = '$pipeline'&quot;</span> <span class="s">)</span><span class="sc">;</span>

            <span class="k">my</span> <span class="i">@more_protocols</span> = <span class="s">(</span><span class="s">)</span><span class="sc">;</span>
            <span class="k">if</span> <span class="s">(</span><span class="i">@daughter_pipelines</span><span class="s">)</span> <span class="s">{</span>
                <span class="i">@more_protocols</span> = <span class="i">visible_protocols</span><span class="s">(</span> <span class="i">$dbc</span><span class="cm">,</span> \<span class="i">@daughter_pipelines</span><span class="cm">,</span> -<span class="w">or</span> <span class="cm">=&gt;</span> <span class="n">1</span> <span class="s">)</span><span class="sc">;</span>
            <span class="s">}</span>

            <span class="k">if</span> <span class="s">(</span> !<span class="i">@protocols</span> &amp;&amp; !<span class="i">@more_protocols</span> <span class="s">)</span> <span class="s">{</span><span class="k">next</span><span class="s">}</span>    <span class="c">## #Message(&quot;nothing for $pipeline&quot;); next; }</span>

            <span class="k">if</span> <span class="s">(</span> <span class="s">(</span> <span class="i">$found_pipelines</span> &gt; <span class="n">1</span> <span class="s">)</span> &amp;&amp; !<span class="i">$or</span> <span class="s">)</span> <span class="s">{</span>
                <span class="s">(</span><span class="i">$common_protocols</span><span class="s">)</span> = <span class="i">RGmath::intersection</span><span class="s">(</span> <span class="s">[</span> <span class="i">@protocols</span><span class="cm">,</span> <span class="i">@more_protocols</span> <span class="s">]</span><span class="cm">,</span> <span class="i">$common_protocols</span> <span class="s">)</span><span class="sc">;</span>
            <span class="s">}</span>
            <span class="k">else</span> <span class="s">{</span>
                <span class="i">$common_protocols</span> = <span class="i">RGmath::union</span><span class="s">(</span> \<span class="i">@protocols</span><span class="cm">,</span> \<span class="i">@more_protocols</span> <span class="s">)</span><span class="sc">;</span>
            <span class="s">}</span>
        <span class="s">}</span>
    <span class="s">}</span>

    <span class="k">if</span> <span class="s">(</span><span class="i">$found_pipelines</span><span class="s">)</span> <span class="s">{</span>
        <span class="k">my</span> <span class="i">$protocol_list</span> = <span class="k">join</span> <span class="q">','</span><span class="cm">,</span> <span class="i">@$common_protocols</span><span class="sc">;</span>
        <span class="i">$protocol_list</span> ||= <span class="q">'0'</span><span class="sc">;</span>
        <span class="i">$condition</span> .= <span class="q">&quot; AND Lab_Protocol_ID IN ($protocol_list)&quot;</span><span class="sc">;</span>
    <span class="s">}</span>

    <span class="k">my</span> <span class="i">$groups</span> = <span class="i">$dbc</span><span class="i">-&gt;get_local</span><span class="s">(</span><span class="q">'group_list'</span><span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">@protocols</span> = <span class="i">$dbc</span><span class="i">-&gt;Table_find</span><span class="s">(</span> <span class="q">'Lab_Protocol,GrpLab_Protocol'</span><span class="cm">,</span> <span class="q">'Lab_Protocol_ID'</span><span class="cm">,</span> <span class="q">&quot;WHERE FK_Lab_Protocol__ID=Lab_Protocol_ID AND FK_Grp__ID IN ($groups) AND Lab_Protocol_Status = 'Active' AND $condition&quot;</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">return</span> <span class="i">@protocols</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">###########################</span>
<a name="next_pipeline_options-"></a><span class="k">sub </span><span class="m">next_pipeline_options</span> <span class="s">{</span>
<span class="c">###########################</span>
    <span class="c"># Description:</span>
    <span class="c">#   get pipeline options for a given pipeline(s)</span>
    <span class="c"># Input:</span>
    <span class="c">#	-pipeline	given pipeline(s)</span>
    <span class="c"># output:</span>
    <span class="c">#   a list of next pipeline options</span>
    <span class="c"># &lt;snip&gt;</span>
    <span class="c"># 	$next_pipelines-&gt;next_pipeline_options(-dbc =&gt; $dbc,-pipeline =&gt; $pipeline);</span>
    <span class="c"># &lt;/snip&gt;</span>
<span class="c">####################################</span>
    <span class="k">my</span> <span class="i">%args</span>        = <span class="i">filter_input</span><span class="s">(</span> \<span class="i">@_</span><span class="cm">,</span> -<span class="w">mandatory</span> <span class="cm">=&gt;</span> <span class="q">'dbc,pipeline'</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$debug</span>       = <span class="i">$args</span>{-<span class="w">debug</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$pipeline</span>    = <span class="i">$args</span>{-<span class="w">pipeline</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$protocol_id</span> = <span class="i">$args</span>{-<span class="w">protocol</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$grp</span>         = <span class="i">Cast_List</span><span class="s">(</span> -<span class="w">list</span> <span class="cm">=&gt;</span> <span class="i">$args</span>{-<span class="w">grp</span>}<span class="cm">,</span> -<span class="w">to</span> <span class="cm">=&gt;</span> <span class="q">'string'</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$condition</span>   = <span class="i">$args</span>{-<span class="w">condition</span>} || <span class="n">1</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$dbc</span>         = <span class="i">$args</span>{-<span class="w">dbc</span>}<span class="sc">;</span>

    <span class="k">my</span> <span class="i">@pipelines</span> = <span class="i">Cast_List</span><span class="s">(</span> -<span class="w">list</span> <span class="cm">=&gt;</span> <span class="i">$pipeline</span><span class="cm">,</span> -<span class="w">to</span> <span class="cm">=&gt;</span> <span class="q">'array'</span> <span class="s">)</span><span class="sc">;</span>

    <span class="k">if</span> <span class="s">(</span><span class="i">$grp</span><span class="s">)</span> <span class="s">{</span> <span class="i">$condition</span> .= <span class="q">&quot; AND Pipeline.FK_Grp__ID IN ($grp)&quot;</span> <span class="s">}</span>

    <span class="k">my</span> <span class="i">@daughter_pipelines</span><span class="sc">;</span>

    <span class="k">if</span> <span class="s">(</span> !<span class="i">$pipelines</span>[<span class="n">0</span>] <span class="s">)</span> <span class="s">{</span>
        <span class="c">## no parent pipelines defined ... allow user to choose any pipeline ##</span>

        <span class="k">if</span> <span class="s">(</span><span class="i">$protocol_id</span><span class="s">)</span> <span class="s">{</span>
            <span class="i">@daughter_pipelines</span> = <span class="i">alDente::Pipeline::get_daughter_pipelines</span><span class="s">(</span> -<span class="w">dbc</span> <span class="cm">=&gt;</span> <span class="i">$dbc</span><span class="cm">,</span> -<span class="w">pipeline</span> <span class="cm">=&gt;</span> <span class="i">$pipelines</span>[<span class="n">0</span>]<span class="cm">,</span> -<span class="w">class</span> <span class="cm">=&gt;</span> <span class="q">'Lab_Protocol'</span><span class="cm">,</span> -<span class="w">step</span> <span class="cm">=&gt;</span> <span class="i">$protocol_id</span><span class="cm">,</span> -<span class="w">debug</span> <span class="cm">=&gt;</span> <span class="i">$debug</span> <span class="s">)</span><span class="sc">;</span>
        <span class="s">}</span>
        <span class="k">else</span> <span class="s">{</span>
            <span class="i">@daughter_pipelines</span> = <span class="i">$dbc</span><span class="i">-&gt;Table_find</span><span class="s">(</span> <span class="q">&quot;Pipeline&quot;</span><span class="cm">,</span> <span class="q">&quot;Pipeline_ID&quot;</span><span class="cm">,</span> <span class="q">&quot;WHERE $condition&quot;</span> <span class="s">)</span><span class="sc">;</span>
        <span class="s">}</span>
    <span class="s">}</span>
    <span class="k">else</span> <span class="s">{</span>
        <span class="i">@daughter_pipelines</span> = <span class="i">alDente::Pipeline::get_daughter_pipelines</span><span class="s">(</span> -<span class="w">dbc</span> <span class="cm">=&gt;</span> <span class="i">$dbc</span><span class="cm">,</span> -<span class="w">pipeline</span> <span class="cm">=&gt;</span> <span class="i">$pipelines</span>[<span class="n">0</span>]<span class="cm">,</span> -<span class="w">class</span> <span class="cm">=&gt;</span> <span class="q">'Lab_Protocol'</span><span class="cm">,</span> -<span class="w">step</span> <span class="cm">=&gt;</span> <span class="i">$protocol_id</span><span class="cm">,</span> -<span class="w">debug</span> <span class="cm">=&gt;</span> <span class="i">$debug</span> <span class="s">)</span><span class="sc">;</span>
        <span class="k">if</span> <span class="s">(</span> <span class="k">int</span><span class="s">(</span><span class="i">@pipelines</span><span class="s">)</span> == <span class="n">1</span> <span class="s">)</span> <span class="s">{</span>
            <span class="c">## single parent pipeline... add daughter pipelines ##</span>
            <span class="k">unshift</span> <span class="i">@daughter_pipelines</span><span class="cm">,</span> <span class="i">$pipelines</span>[<span class="n">0</span>]<span class="sc">;</span>
        <span class="s">}</span>
        <span class="k">else</span> <span class="s">{</span>
            <span class="c">## Multiple parent pipelines</span>
            <span class="k">foreach</span> <span class="k">my</span> <span class="i">$i</span> <span class="s">(</span> <span class="n">1</span> .. <span class="i">$#pipelines</span> <span class="s">)</span> <span class="s">{</span>
                <span class="k">my</span> <span class="i">@next_daughters</span> = <span class="i">alDente::Pipeline::get_daughter_pipelines</span><span class="s">(</span> -<span class="w">dbc</span> <span class="cm">=&gt;</span> <span class="i">$dbc</span><span class="cm">,</span> -<span class="w">pipeline</span> <span class="cm">=&gt;</span> <span class="i">$pipelines</span>[<span class="i">$i</span>]<span class="cm">,</span> -<span class="w">class</span> <span class="cm">=&gt;</span> <span class="q">'Lab_Protocol'</span><span class="cm">,</span> -<span class="w">step</span> <span class="cm">=&gt;</span> <span class="i">$protocol_id</span><span class="cm">,</span> -<span class="w">debug</span> <span class="cm">=&gt;</span> <span class="i">$debug</span> <span class="s">)</span><span class="sc">;</span>
                <span class="k">my</span> <span class="s">(</span><span class="i">$intersection</span><span class="s">)</span> = <span class="i">RGmath::intersection</span><span class="s">(</span> \<span class="i">@next_daughters</span><span class="cm">,</span> \<span class="i">@daughter_pipelines</span> <span class="s">)</span><span class="sc">;</span>
                <span class="i">@daughter_pipelines</span> = <span class="i">@$intersection</span><span class="sc">;</span>
                <span class="k">if</span> <span class="s">(</span> <span class="k">int</span><span class="s">(</span><span class="i">@daughter_pipelines</span><span class="s">)</span> == <span class="n">0</span> <span class="s">)</span> <span class="s">{</span> <span class="k">last</span><span class="sc">;</span> <span class="s">}</span>
            <span class="s">}</span>
        <span class="s">}</span>
    <span class="s">}</span>
    <span class="c">## May wish to add 'first step' pipelines if this is a 'last step' pipeline (?) ##</span>

    <span class="k">return</span> <span class="i">@daughter_pipelines</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">###############</span>
<a name="new_protocol-"></a><span class="k">sub </span><span class="m">new_protocol</span> <span class="s">{</span>
<span class="c">###############</span>
    <span class="k">my</span> <span class="i">$self</span>        = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">%args</span>        = <span class="i">&amp;filter_input</span><span class="s">(</span> \<span class="i">@_</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$dbc</span>         = <span class="i">$args</span>{-<span class="w">dbc</span>} || <span class="i">$self</span><span class="i">-&gt;param</span><span class="s">(</span><span class="q">'dbc'</span><span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$protocol</span>    = <span class="i">$args</span>{-<span class="w">protocol</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$status</span>      = <span class="i">$args</span>{-<span class="w">status</span>} || <span class="q">'Under Development'</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$description</span> = <span class="i">$args</span>{-<span class="w">description</span>} || <span class="q">''</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">@groups</span><span class="sc">;</span>
    <span class="i">@groups</span> = <span class="i">@</span>{ <span class="i">$args</span>{-<span class="w">group_ids</span>} } <span class="k">if</span> <span class="s">(</span> <span class="i">$args</span>{-<span class="w">group_ids</span>} <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$protocol_id</span><span class="sc">;</span>

    <span class="k">eval</span> <span class="s">{</span>
        <span class="k">my</span> <span class="i">$description</span> = <span class="i">param</span><span class="s">(</span><span class="q">'Protocol Description'</span><span class="s">)</span> || <span class="q">''</span><span class="sc">;</span>
        <span class="k">my</span> <span class="i">$newid</span> = <span class="i">$dbc</span><span class="i">-&gt;Table_append_array</span><span class="s">(</span> <span class="q">'Lab_Protocol'</span><span class="cm">,</span> <span class="s">[</span> <span class="q">'Lab_Protocol_Name'</span><span class="cm">,</span> <span class="q">'FK_Employee__ID'</span><span class="cm">,</span> <span class="q">'Lab_Protocol_Status'</span><span class="cm">,</span> <span class="q">'Lab_Protocol_Description'</span> <span class="s">]</span><span class="cm">,</span> <span class="s">[</span> <span class="i">$protocol</span><span class="cm">,</span> <span class="i">$user_id</span><span class="cm">,</span> <span class="i">$status</span><span class="cm">,</span> <span class="i">$description</span> <span class="s">]</span><span class="cm">,</span> -<span class="w">autoquote</span> <span class="cm">=&gt;</span> <span class="n">1</span> <span class="s">)</span><span class="sc">;</span>

        <span class="k">die</span><span class="s">(</span><span class="q">&quot;ERROR: Failed to add new protocol '$protocol'.&quot;</span><span class="s">)</span> <span class="k">unless</span> <span class="i">$newid</span><span class="sc">;</span>
        <span class="i">$protocol_id</span> = <span class="i">$newid</span><span class="sc">;</span>
        <span class="k">my</span> <span class="i">%values</span><span class="sc">;</span>

        <span class="c"># Associate protocol to user groups</span>
        <span class="k">my</span> <span class="i">$i</span><span class="sc">;</span>
        <span class="k">foreach</span> <span class="k">my</span> <span class="i">$group</span> <span class="s">(</span><span class="i">@groups</span><span class="s">)</span> <span class="s">{</span>
            <span class="i">$values</span>{ ++<span class="i">$i</span> } = <span class="s">[</span> <span class="i">$group</span><span class="cm">,</span> <span class="i">$newid</span> <span class="s">]</span><span class="sc">;</span>
        <span class="s">}</span>
        <span class="k">my</span> <span class="i">$new_ids</span> = <span class="i">$dbc</span><span class="i">-&gt;smart_append</span><span class="s">(</span>
            -<span class="w">tables</span>    <span class="cm">=&gt;</span> <span class="q">'GrpLab_Protocol'</span><span class="cm">,</span>
            -<span class="w">fields</span>    <span class="cm">=&gt;</span> <span class="s">[</span> <span class="q">'FK_Grp__ID'</span><span class="cm">,</span> <span class="q">'FK_Lab_Protocol__ID'</span> <span class="s">]</span><span class="cm">,</span>
            -<span class="w">values</span>    <span class="cm">=&gt;</span> \<span class="i">%values</span><span class="cm">,</span>
            -<span class="w">autoquote</span> <span class="cm">=&gt;</span> <span class="n">1</span>
        <span class="s">)</span><span class="sc">;</span>
        <span class="k">die</span><span class="s">(</span><span class="q">&quot;ERROR: Failed to associate new protocol '$protocol' to groups.&quot;</span><span class="s">)</span> <span class="k">unless</span> <span class="i">$newid</span><span class="sc">;</span>
        <span class="i">Message</span><span class="s">(</span><span class="q">&quot;Added new Protocol: $protocol (Status: $status).&quot;</span><span class="s">)</span><span class="sc">;</span>
    <span class="s">}</span><span class="sc">;</span>

    <span class="i">Message</span><span class="s">(</span><span class="i">$@</span><span class="s">)</span> <span class="k">if</span> <span class="i">$@</span><span class="sc">;</span>
    <span class="k">return</span> <span class="i">$protocol_id</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">###############################</span>
<span class="c"># Description:</span>
<span class="c">#	- This method creates a new protocol by copying from an existing protocol</span>
<span class="c">#</span>
<span class="c"># &lt;snip&gt;</span>
<span class="c">#	Usage example:</span>
<span class="c">#		my $new_id = $protocol_obj-&gt;copy_protocol( -dbc =&gt; $dbc, -protocol =&gt; $protocol, -admin =&gt; $admin, -new_name =&gt; $newname, -new_group =&gt; $newgroup, -state =&gt; $state );</span>
<span class="c">#	Return:</span>
<span class="c">#		Scalar. New Lab_Protocol_ID if success; 0 if failed.</span>
<span class="c"># &lt;/snip&gt;</span>
<span class="c">###############################</span>
<span class="c">#######################</span>
<a name="copy_protocol-"></a><span class="k">sub </span><span class="m">copy_protocol</span> <span class="s">{</span>

    <span class="c">#</span>
<span class="c">#######################</span>
    <span class="k">my</span> <span class="i">$self</span>      = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">%args</span>      = <span class="i">&amp;filter_input</span><span class="s">(</span> \<span class="i">@_</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$dbc</span>       = <span class="i">$args</span>{-<span class="w">dbc</span>} || <span class="i">$self</span><span class="i">-&gt;param</span><span class="s">(</span><span class="q">'dbc'</span><span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$protocol</span>  = <span class="i">$args</span>{-<span class="w">protocol</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$new_name</span>  = <span class="i">$args</span>{-<span class="w">new_name</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$new_group</span> = <span class="i">$args</span>{-<span class="w">new_group</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$state</span>     = <span class="i">$args</span>{-<span class="w">state</span>}<span class="sc">;</span>

    <span class="k">my</span> <span class="i">$exists</span> = <span class="i">$dbc</span><span class="i">-&gt;Table_find</span><span class="s">(</span> <span class="q">'Lab_Protocol'</span><span class="cm">,</span> <span class="q">'Lab_Protocol_Name'</span><span class="cm">,</span> <span class="q">&quot;WHERE Lab_Protocol_Name = '$new_name'&quot;</span> <span class="s">)</span><span class="sc">;</span>

    <span class="k">if</span> <span class="s">(</span><span class="i">$exists</span><span class="s">)</span> <span class="s">{</span>
        <span class="w">Message</span> <span class="q">&quot;Protocol $new_name already exists.  Please select a different name&quot;</span><span class="sc">;</span>
        <span class="k">return</span><span class="sc">;</span>
    <span class="s">}</span>

    <span class="k">my</span> <span class="s">(</span><span class="i">$protocol_id</span><span class="s">)</span> = <span class="i">$dbc</span><span class="i">-&gt;Table_find</span><span class="s">(</span> <span class="q">'Lab_Protocol'</span><span class="cm">,</span> <span class="q">'Lab_Protocol_ID'</span><span class="cm">,</span> <span class="q">&quot;where Lab_Protocol_Name = '$protocol'&quot;</span> <span class="s">)</span><span class="sc">;</span>

    <span class="k">my</span> <span class="i">$copied</span><span class="sc">;</span>

    <span class="c">#First copy the protocol table</span>
    <span class="s">(</span><span class="i">$copied</span><span class="s">)</span> = <span class="i">$dbc</span><span class="i">-&gt;Table_copy</span><span class="s">(</span> <span class="q">'Lab_Protocol'</span><span class="cm">,</span> <span class="q">&quot;where Lab_Protocol_ID = $protocol_id&quot;</span><span class="cm">,</span> <span class="s">[</span> <span class="q">'Lab_Protocol_ID'</span><span class="cm">,</span> <span class="q">'Lab_Protocol_Name'</span><span class="cm">,</span> <span class="q">'Lab_Protocol_Status'</span> <span class="s">]</span><span class="cm">,</span> <span class="k">undef</span><span class="cm">,</span> <span class="s">[</span> <span class="k">undef</span><span class="cm">,</span> <span class="i">$new_name</span><span class="cm">,</span> <span class="i">$state</span> <span class="s">]</span><span class="cm">,</span> -<span class="w">no_merge</span> <span class="cm">=&gt;</span> <span class="n">1</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">die</span><span class="s">(</span><span class="q">&quot;Problem copying protocol.&quot;</span><span class="s">)</span> <span class="k">unless</span> <span class="i">$copied</span><span class="sc">;</span>
    <span class="i">Message</span><span class="s">(</span><span class="q">&quot;Added new $new_name Protocol (Status: $state).&quot;</span><span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$new_id</span> = <span class="i">$copied</span><span class="sc">;</span>

    <span class="c">## The group association shouldn't be copied</span>
    <span class="c">#Now copy the GrpLab_Protocol record</span>
    <span class="c">#( my $copied ) = $dbc -&gt; Table_copy( 'GrpLab_Protocol', &quot;where FK_Lab_Protocol__ID = $protocol_id&quot;, [ 'GrpLab_Protocol_ID', 'FK_Lab_Protocol__ID' ], undef, [ undef, $new_id ], -no_merge =&gt; 1 );</span>
    <span class="c">#die(&quot;Problem copying group permissions of protocol.&quot;) unless $copied;</span>
    <span class="c">#Message(&quot;Group permissions of protocol copied.&quot;);</span>
    <span class="k">my</span> <span class="i">$new_group_id</span> = <span class="i">$dbc</span><span class="i">-&gt;get_FK_ID</span><span class="s">(</span> <span class="q">'FK_Grp__ID'</span><span class="cm">,</span> <span class="i">$new_group</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$ok</span> = <span class="i">$dbc</span><span class="i">-&gt;Table_append_array</span><span class="s">(</span> <span class="q">'GrpLab_Protocol'</span><span class="cm">,</span> <span class="s">[</span> <span class="q">'FK_Grp__ID'</span><span class="cm">,</span> <span class="q">'FK_Lab_Protocol__ID'</span><span class="cm">,</span> <span class="q">'Grp_Access'</span> <span class="s">]</span><span class="cm">,</span> <span class="s">[</span> <span class="i">$new_group_id</span><span class="cm">,</span> <span class="i">$new_id</span><span class="cm">,</span> <span class="q">'Admin'</span> <span class="s">]</span><span class="cm">,</span> -<span class="w">autoquote</span> <span class="cm">=&gt;</span> <span class="n">1</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">if</span> <span class="s">(</span> !<span class="i">$ok</span> <span class="s">)</span> <span class="s">{</span>
        <span class="i">$dbc</span><span class="i">-&gt;error</span><span class="s">(</span><span class="q">&quot;Error setting new group for $new_name&quot;</span><span class="s">)</span><span class="sc">;</span>
    <span class="s">}</span>

    <span class="c">#Now also copy the protocol steps</span>
    <span class="s">(</span><span class="i">$copied</span><span class="s">)</span> = <span class="i">$dbc</span><span class="i">-&gt;Table_copy</span><span class="s">(</span> <span class="q">'Protocol_Step'</span><span class="cm">,</span> <span class="q">&quot;where FK_Lab_Protocol__ID = $protocol_id&quot;</span><span class="cm">,</span> <span class="s">[</span> <span class="q">'Protocol_Step_ID'</span><span class="cm">,</span> <span class="q">'FK_Lab_Protocol__ID'</span> <span class="s">]</span><span class="cm">,</span> <span class="k">undef</span><span class="cm">,</span> <span class="s">[</span> <span class="k">undef</span><span class="cm">,</span> <span class="i">$new_id</span> <span class="s">]</span><span class="cm">,</span> -<span class="w">no_merge</span> <span class="cm">=&gt;</span> <span class="n">1</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">die</span><span class="s">(</span><span class="q">&quot;Problem copying protocol steps&quot;</span><span class="s">)</span> <span class="k">unless</span> <span class="i">$copied</span><span class="sc">;</span>
    <span class="i">Message</span><span class="s">(</span><span class="q">&quot;Protocol steps copied.&quot;</span><span class="s">)</span><span class="sc">;</span>

    <span class="k">return</span> <span class="i">$new_id</span><span class="sc">;</span>

<span class="s">}</span>

<span class="c">#######################</span>
<a name="get_Formatted_Values-"></a><span class="k">sub </span><span class="m">get_Formatted_Values</span> <span class="s">{</span>
<span class="c">#######################</span>
    <span class="k">my</span> <span class="i">$self</span>                = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">%args</span>                = <span class="i">&amp;filter_input</span><span class="s">(</span> \<span class="i">@_</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$dbc</span>                 = <span class="i">$args</span>{-<span class="w">dbc</span>} || <span class="i">$self</span><span class="i">-&gt;param</span><span class="s">(</span><span class="q">'dbc'</span><span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$plate_label_def</span>     = <span class="i">$args</span>{-<span class="w">plate_label_def</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$transfer_q</span>          = <span class="i">$args</span>{-<span class="w">transfer_q</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$transfer_q_unit</span>     = <span class="i">$args</span>{-<span class="w">transfer_q_unit</span>} || <span class="q">'ml'</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$split_x</span>             = <span class="i">$args</span>{-<span class="w">split_x</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$quantity</span>            = <span class="i">$args</span>{-<span class="w">quantity</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$quantity_units</span>      = <span class="i">$args</span>{-<span class="w">quantity_units</span>} || <span class="q">'ml'</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$sformat</span>             = <span class="i">$args</span>{-<span class="w">sformat</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$mformats_chosen_ref</span> = <span class="i">$args</span>{-<span class="w">mformats_chosen</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$prep_attr_name_ref</span>  = <span class="i">$args</span>{-<span class="w">prep_attr_name</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$prep_attr_def_ref</span>   = <span class="i">$args</span>{-<span class="w">prep_attr_def</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$plate_attr_name_ref</span> = <span class="i">$args</span>{-<span class="w">plate_attr_name</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$plate_attr_def_ref</span>  = <span class="i">$args</span>{-<span class="w">plate_attr_def</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$list_ref</span>            = <span class="i">$args</span>{-<span class="w">list</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$extra_inputs_ref</span>    = <span class="i">$args</span>{-<span class="w">extra_inputs</span>}<span class="sc">;</span>

    <span class="k">my</span> <span class="i">@Input</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">@Defaults</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">@Formats</span><span class="sc">;</span>

    <span class="k">my</span> <span class="i">@mformats_chosen</span><span class="cm">,</span> <span class="k">my</span> <span class="i">@prep_attr_name</span><span class="cm">,</span> <span class="k">my</span> <span class="i">@prep_attr_def</span><span class="cm">,</span> <span class="k">my</span> <span class="i">@plate_attr_name</span><span class="cm">,</span> <span class="k">my</span> <span class="i">@plate_attr_def</span><span class="cm">,</span> <span class="k">my</span> <span class="i">@list</span><span class="cm">,</span> <span class="k">my</span> <span class="i">@extra_inputs</span><span class="sc">;</span>
    <span class="i">@mformats_chosen</span> = <span class="i">@$mformats_chosen_ref</span> <span class="k">if</span> <span class="i">$mformats_chosen_ref</span><span class="sc">;</span>
    <span class="i">@prep_attr_name</span>  = <span class="i">@$prep_attr_name_ref</span>  <span class="k">if</span> <span class="i">$mformats_chosen_ref</span><span class="sc">;</span>
    <span class="i">@prep_attr_def</span>   = <span class="i">@$prep_attr_def_ref</span>   <span class="k">if</span> <span class="i">$prep_attr_def_ref</span><span class="sc">;</span>
    <span class="i">@plate_attr_name</span> = <span class="i">@$plate_attr_name_ref</span> <span class="k">if</span> <span class="i">$plate_attr_name_ref</span><span class="sc">;</span>
    <span class="i">@plate_attr_def</span>  = <span class="i">@$plate_attr_def_ref</span>  <span class="k">if</span> <span class="i">$plate_attr_def_ref</span><span class="sc">;</span>
    <span class="i">@list</span>            = <span class="i">@$list_ref</span>            <span class="k">if</span> <span class="i">$list_ref</span><span class="sc">;</span>
    <span class="i">@extra_inputs</span>    = <span class="i">@$extra_inputs_ref</span>    <span class="k">if</span> <span class="i">$extra_inputs_ref</span><span class="sc">;</span>

    <span class="c"># the inputs and defaults must be formatted correctly in order for them to</span>
    <span class="c"># be visualized on the barcode scanners</span>
    <span class="k">if</span> <span class="s">(</span><span class="i">@list</span><span class="s">)</span> <span class="s">{</span>
        <span class="i">$list</span>[<span class="i">$#list</span>] =~ <span class="q">/(\d+)/</span><span class="sc">;</span>
        <span class="k">my</span> <span class="i">$reagents</span> = <span class="i">$1</span><span class="sc">;</span>
        <span class="k">push</span><span class="s">(</span> <span class="i">@Input</span><span class="cm">,</span> <span class="i">$list</span>[<span class="i">$#list</span>] <span class="s">)</span><span class="sc">;</span>
        <span class="k">foreach</span> <span class="k">my</span> <span class="i">$x</span> <span class="s">(</span> <span class="n">1</span> .. <span class="i">$reagents</span> <span class="s">)</span> <span class="s">{</span>
            <span class="k">my</span> <span class="i">$quant</span> = <span class="i">param</span><span class="s">(</span><span class="q">&quot;Quantity $x&quot;</span><span class="s">)</span> || <span class="q">''</span><span class="sc">;</span>
            <span class="k">push</span><span class="s">(</span> <span class="i">@Input</span><span class="cm">,</span>    <span class="q">''</span> <span class="s">)</span><span class="sc">;</span>
            <span class="k">push</span><span class="s">(</span> <span class="i">@Defaults</span><span class="cm">,</span> <span class="i">$quant</span> <span class="s">)</span><span class="sc">;</span>
            <span class="k">push</span><span class="s">(</span> <span class="i">@Formats</span><span class="cm">,</span>  <span class="q">''</span> <span class="s">)</span><span class="sc">;</span>
        <span class="s">}</span>
    <span class="s">}</span>

    <span class="k">my</span> <span class="i">%plate_attributes</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">%prep_attributes</span><span class="sc">;</span>
    <span class="k">foreach</span> <span class="k">my</span> <span class="i">$input</span> <span class="s">(</span><span class="i">@extra_inputs</span><span class="s">)</span> <span class="s">{</span>
        <span class="k">my</span> <span class="i">$default</span> = <span class="q">''</span><span class="sc">;</span>
        <span class="k">my</span> <span class="i">$format</span>  = <span class="q">''</span><span class="sc">;</span>

        <span class="k">if</span> <span class="s">(</span> <span class="i">$input</span> =~ <span class="q">/(FK_Equipment__ID)/</span> <span class="s">)</span> <span class="s">{</span>
            <span class="i">$format</span> = <span class="k">join</span> <span class="q">'|'</span><span class="cm">,</span> <span class="i">@mformats_chosen</span><span class="sc">;</span>    <span class="c">## allow for multiple selections</span>
            <span class="i">$format</span> ||= <span class="q">''</span><span class="sc">;</span>
        <span class="s">}</span>
        <span class="k">elsif</span> <span class="s">(</span> <span class="i">$input</span> =~ <span class="q">/FK_Plate__ID/</span> <span class="s">)</span>  <span class="s">{</span> <span class="s">}</span>
        <span class="k">elsif</span> <span class="s">(</span> <span class="i">$input</span> =~ <span class="q">/(FK_Rack__ID)/</span> <span class="s">)</span> <span class="s">{</span> <span class="s">}</span>
        <span class="k">elsif</span> <span class="s">(</span> <span class="i">$input</span> =~ <span class="q">s/(FK_Solution__ID)/$1:Solution_Quantity/</span> <span class="s">)</span> <span class="s">{</span>
            <span class="k">push</span><span class="s">(</span> <span class="i">@Defaults</span><span class="cm">,</span> <span class="i">$default</span> <span class="s">)</span><span class="sc">;</span>
            <span class="i">$format</span> = <span class="i">$sformat</span> || <span class="q">''</span><span class="sc">;</span>
            <span class="k">push</span><span class="s">(</span> <span class="i">@Formats</span><span class="cm">,</span> <span class="i">$format</span> <span class="s">)</span><span class="sc">;</span>
            <span class="i">$default</span> = <span class="q">&quot;$quantity$quantity_units&quot;</span><span class="sc">;</span>
            <span class="i">$format</span>  = <span class="q">''</span><span class="sc">;</span>                           <span class="c">#resetting format for quantity</span>
        <span class="s">}</span>
        <span class="k">elsif</span> <span class="s">(</span> <span class="i">$input</span> =~ <span class="q">/Prep_Attribute/</span> <span class="s">)</span> <span class="s">{</span>
            <span class="k">my</span> <span class="i">$attr_name</span> = <span class="k">shift</span> <span class="i">@prep_attr_name</span><span class="sc">;</span>
            <span class="k">if</span> <span class="s">(</span> <span class="i">$input</span> =~ <span class="q">/(Prep_Attribute)_(\d+)/</span> <span class="s">)</span> <span class="s">{</span>
                <span class="i">$prep_attributes</span>{<span class="i">$2</span>}{<span class="w">name</span>} = <span class="i">$attr_name</span><span class="sc">;</span>
                <span class="i">$input</span> = <span class="i">$1</span><span class="sc">;</span>
            <span class="s">}</span>
            <span class="i">$input</span>   = <span class="q">&quot;$input=$attr_name&quot;</span><span class="sc">;</span>
            <span class="i">$default</span> = <span class="k">shift</span> <span class="i">@prep_attr_def</span><span class="sc">;</span>
        <span class="s">}</span>
        <span class="k">elsif</span> <span class="s">(</span> <span class="i">$input</span> =~ <span class="q">/Mandatory_PrepAttribute_(\d+)/</span> <span class="s">)</span> <span class="s">{</span>
            <span class="i">$prep_attributes</span>{<span class="i">$1</span>}{<span class="w">mandatory</span>} = <span class="n">1</span><span class="sc">;</span>
            <span class="k">next</span><span class="sc">;</span>
        <span class="s">}</span>
        <span class="k">elsif</span> <span class="s">(</span> <span class="i">$input</span> =~ <span class="q">/Plate_Attribute/</span> <span class="s">)</span> <span class="s">{</span>
            <span class="k">my</span> <span class="i">$attr_name</span> = <span class="k">shift</span> <span class="i">@plate_attr_name</span><span class="sc">;</span>
            <span class="k">if</span> <span class="s">(</span> <span class="i">$input</span> =~ <span class="q">/(Plate_Attribute)_(\d+)/</span> <span class="s">)</span> <span class="s">{</span>
                <span class="i">$plate_attributes</span>{<span class="i">$2</span>}{<span class="w">name</span>} = <span class="i">$attr_name</span><span class="sc">;</span>
                <span class="i">$input</span> = <span class="i">$1</span><span class="sc">;</span>
            <span class="s">}</span>
            <span class="i">$input</span>   = <span class="q">&quot;$input=$attr_name&quot;</span><span class="sc">;</span>
            <span class="i">$default</span> = <span class="k">shift</span> <span class="i">@plate_attr_def</span><span class="sc">;</span>
        <span class="s">}</span>
        <span class="k">elsif</span> <span class="s">(</span> <span class="i">$input</span> =~ <span class="q">/Mandatory_PlateAttribute_(\d+)/</span> <span class="s">)</span> <span class="s">{</span>
            <span class="i">$plate_attributes</span>{<span class="i">$1</span>}{<span class="w">mandatory</span>} = <span class="n">1</span><span class="sc">;</span>
            <span class="k">next</span><span class="sc">;</span>
        <span class="s">}</span>
        <span class="k">elsif</span> <span class="s">(</span> <span class="i">$input</span> =~ <span class="q">/Track_Transfer/</span> <span class="s">)</span> <span class="s">{</span>
            <span class="i">$default</span> = <span class="q">&quot;$transfer_q$transfer_q_unit&quot;</span><span class="sc">;</span>
        <span class="s">}</span>
        <span class="k">elsif</span> <span class="s">(</span> <span class="i">$input</span> =~ <span class="q">/Split/</span> <span class="s">)</span> <span class="s">{</span>
            <span class="i">$default</span> = <span class="i">$split_x</span><span class="sc">;</span>
        <span class="s">}</span>
        <span class="k">elsif</span> <span class="s">(</span> <span class="i">$input</span> =~ <span class="q">/Plate_Label/</span> <span class="s">)</span> <span class="s">{</span>
            <span class="i">$default</span> = <span class="i">$plate_label_def</span><span class="sc">;</span>
        <span class="s">}</span>

        <span class="k">push</span><span class="s">(</span> <span class="i">@Input</span><span class="cm">,</span>    <span class="i">$input</span> <span class="s">)</span><span class="sc">;</span>
        <span class="k">push</span><span class="s">(</span> <span class="i">@Formats</span><span class="cm">,</span>  <span class="i">$format</span> <span class="s">)</span><span class="sc">;</span>
        <span class="k">push</span><span class="s">(</span> <span class="i">@Defaults</span><span class="cm">,</span> <span class="i">$default</span> <span class="s">)</span><span class="sc">;</span>
    <span class="s">}</span>

    <span class="k">foreach</span> <span class="k">my</span> <span class="i">$key</span> <span class="s">(</span> <span class="k">keys</span> <span class="i">%prep_attributes</span> <span class="s">)</span> <span class="s">{</span>
        <span class="k">if</span> <span class="s">(</span> <span class="k">defined</span> <span class="i">$prep_attributes</span>{<span class="i">$key</span>}{<span class="w">mandatory</span>} &amp;&amp; <span class="i">$prep_attributes</span>{<span class="i">$key</span>}{<span class="w">mandatory</span>} == <span class="n">1</span> <span class="s">)</span> <span class="s">{</span>
            <span class="k">push</span> <span class="i">@Input</span><span class="cm">,</span> <span class="q">&quot;Mandatory_PrepAttribute_$prep_attributes{$key}{name}&quot;</span> <span class="k">if</span> <span class="s">(</span> <span class="i">$prep_attributes</span>{<span class="i">$key</span>}{<span class="w">name</span>} <span class="s">)</span><span class="sc">;</span>
        <span class="s">}</span>
    <span class="s">}</span>
    <span class="k">foreach</span> <span class="k">my</span> <span class="i">$key</span> <span class="s">(</span> <span class="k">keys</span> <span class="i">%plate_attributes</span> <span class="s">)</span> <span class="s">{</span>
        <span class="k">if</span> <span class="s">(</span> <span class="k">defined</span> <span class="i">$plate_attributes</span>{<span class="i">$key</span>}{<span class="w">mandatory</span>} &amp;&amp; <span class="i">$plate_attributes</span>{<span class="i">$key</span>}{<span class="w">mandatory</span>} == <span class="n">1</span> <span class="s">)</span> <span class="s">{</span>
            <span class="k">push</span> <span class="i">@Input</span><span class="cm">,</span> <span class="q">&quot;Mandatory_PlateAttribute_$plate_attributes{$key}{name}&quot;</span> <span class="k">if</span> <span class="s">(</span> <span class="i">$plate_attributes</span>{<span class="i">$key</span>}{<span class="w">name</span>} <span class="s">)</span><span class="sc">;</span>
        <span class="s">}</span>
    <span class="s">}</span>

    <span class="k">my</span> <span class="i">$defaults</span> = <span class="k">join</span> <span class="q">':'</span><span class="cm">,</span> <span class="i">@Defaults</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$formats</span>  = <span class="k">join</span> <span class="q">':'</span><span class="cm">,</span> <span class="i">@Formats</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$inputs</span>   = <span class="k">join</span> <span class="q">':'</span><span class="cm">,</span> <span class="i">@Input</span><span class="sc">;</span>

    <span class="k">return</span> <span class="s">(</span> <span class="i">$inputs</span><span class="cm">,</span> <span class="i">$defaults</span><span class="cm">,</span> <span class="i">$formats</span> <span class="s">)</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">########################</span>
<a name="get_New_Step_Name-"></a><span class="k">sub </span><span class="m">get_New_Step_Name</span> <span class="s">{</span>
<span class="c">########################</span>
    <span class="k">my</span> <span class="i">$self</span>              = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">%args</span>              = <span class="i">&amp;filter_input</span><span class="s">(</span> \<span class="i">@_</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$dbc</span>               = <span class="i">$args</span>{-<span class="w">dbc</span>} || <span class="i">$self</span><span class="i">-&gt;param</span><span class="s">(</span><span class="q">'dbc'</span><span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$step_type</span>         = <span class="i">$args</span>{-<span class="w">step_type</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$format</span>            = <span class="i">$args</span>{<span class="q">'-format'</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$new_sample_type</span>   = <span class="i">$args</span>{-<span class="w">new_sample_type</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$create_new_sample</span> = <span class="i">$args</span>{-<span class="w">create_new_sample</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$step_name</span>         = <span class="i">$args</span>{-<span class="w">step_name</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$new_step_name</span><span class="sc">;</span>

    <span class="k">if</span> <span class="s">(</span><span class="i">$create_new_sample</span><span class="s">)</span> <span class="s">{</span>
        <span class="i">$create_new_sample</span> = <span class="q">&quot; (Track New Sample)&quot;</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">if</span> <span class="s">(</span> <span class="i">$step_type</span> =~ <span class="q">/Transfer/</span> <span class="s">)</span> <span class="s">{</span>
        <span class="i">$new_step_name</span> = <span class="q">&quot;$step_type $new_sample_type to $format $create_new_sample&quot;</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">elsif</span> <span class="s">(</span> <span class="i">$step_type</span> =~ <span class="q">/Aliquot/</span> <span class="s">)</span> <span class="s">{</span>
        <span class="i">$new_step_name</span> = <span class="q">&quot;$step_type $new_sample_type to $format $create_new_sample&quot;</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">elsif</span> <span class="s">(</span> <span class="i">$step_type</span> =~ <span class="q">/Extract/</span> <span class="s">)</span> <span class="s">{</span>
        <span class="i">$new_step_name</span> = <span class="q">&quot;$step_type $new_sample_type to $format $create_new_sample&quot;</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">elsif</span> <span class="s">(</span> <span class="i">$step_type</span> =~ <span class="q">/Pre-Print/</span> <span class="s">)</span> <span class="s">{</span>
        <span class="i">$new_step_name</span> = <span class="q">&quot;$step_type to $format&quot;</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">elsif</span> <span class="s">(</span> <span class="i">$step_type</span> =~ <span class="q">/Pool/</span> <span class="s">)</span> <span class="s">{</span>
        <span class="i">$new_step_name</span> = <span class="q">&quot;$step_type to $format&quot;</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">elsif</span> <span class="s">(</span> <span class="i">$step_type</span> =~ <span class="q">/Setup/</span> <span class="s">)</span> <span class="s">{</span>
        <span class="i">$new_step_name</span> = <span class="q">&quot;$step_type to $format&quot;</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">else</span> <span class="s">{</span> <span class="i">$new_step_name</span> = <span class="i">$step_name</span> <span class="s">}</span>
    <span class="k">return</span> <span class="i">$new_step_name</span><span class="sc">;</span>

<span class="s">}</span>

<span class="c">#######################</span>
<a name="delete_Protocol-"></a><span class="k">sub </span><span class="m">delete_Protocol</span> <span class="s">{</span>

    <span class="c">#</span>
<span class="c">#######################</span>
    <span class="k">my</span> <span class="i">$self</span>     = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">%args</span>     = <span class="i">&amp;filter_input</span><span class="s">(</span> \<span class="i">@_</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$dbc</span>      = <span class="i">$args</span>{-<span class="w">dbc</span>} || <span class="i">$self</span><span class="i">-&gt;param</span><span class="s">(</span><span class="q">'dbc'</span><span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$protocol</span> = <span class="i">$args</span>{-<span class="w">protocol</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$delete1</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$delete2</span><span class="sc">;</span>

    <span class="c"># unless trans already started, start one and finish at the end</span>
    <span class="i">$dbc</span><span class="i">-&gt;start_trans</span><span class="s">(</span> -<span class="w">name</span> <span class="cm">=&gt;</span> <span class="q">'Delete Protocol'</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="s">(</span><span class="i">$P_id</span><span class="s">)</span> = <span class="i">$dbc</span><span class="i">-&gt;Table_find</span><span class="s">(</span> <span class="q">'Lab_Protocol'</span><span class="cm">,</span> <span class="q">'Lab_Protocol_ID'</span><span class="cm">,</span> <span class="q">&quot;where Lab_Protocol_Name = '$protocol'&quot;</span> <span class="s">)</span><span class="sc">;</span>
    <span class="c">## DELETE Grp Entry</span>
    <span class="i">$dbc</span><span class="i">-&gt;delete_record</span><span class="s">(</span> <span class="q">'GrpLab_Protocol'</span><span class="cm">,</span> <span class="q">'FK_Lab_Protocol__ID'</span><span class="cm">,</span> <span class="i">$P_id</span><span class="cm">,</span> -<span class="w">trans</span> <span class="cm">=&gt;</span> <span class="i">$Transaction</span> <span class="s">)</span><span class="sc">;</span>
    <span class="c">## DELETE PROTOCOL STEPS ##</span>
    <span class="i">$delete1</span> = <span class="i">$dbc</span><span class="i">-&gt;delete_record</span><span class="s">(</span> <span class="q">'Protocol_Step'</span><span class="cm">,</span> <span class="q">'FK_Lab_Protocol__ID'</span><span class="cm">,</span> <span class="i">$P_id</span><span class="cm">,</span> -<span class="w">trans</span> <span class="cm">=&gt;</span> <span class="i">$Transaction</span> <span class="s">)</span><span class="sc">;</span>
    <span class="c">## DELETE LAB PROTOCOL ##</span>
    <span class="i">$delete2</span> = <span class="i">$dbc</span><span class="i">-&gt;delete_record</span><span class="s">(</span> <span class="q">'Lab_Protocol'</span><span class="cm">,</span> <span class="q">'Lab_Protocol_ID'</span><span class="cm">,</span> <span class="i">$P_id</span><span class="cm">,</span> -<span class="w">trans</span> <span class="cm">=&gt;</span> <span class="i">$Transaction</span> <span class="s">)</span><span class="sc">;</span>

    <span class="i">$dbc</span><span class="i">-&gt;finish_trans</span><span class="s">(</span> -<span class="w">name</span> <span class="cm">=&gt;</span> <span class="q">'Delete Protocol'</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">return</span> <span class="i">$delete2</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">########################</span>
<a name="delete_Steps-"></a><span class="k">sub </span><span class="m">delete_Steps</span> <span class="s">{</span>

    <span class="c">#</span>
    <span class="c"># Deletes protocol steps</span>
<span class="c">########################</span>
    <span class="k">my</span> <span class="i">$self</span>     = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">%args</span>     = <span class="i">&amp;filter_input</span><span class="s">(</span> \<span class="i">@_</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$dbc</span>      = <span class="i">$args</span>{-<span class="w">dbc</span>} || <span class="i">$self</span><span class="i">-&gt;param</span><span class="s">(</span><span class="q">'dbc'</span><span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$protocol</span> = <span class="i">$args</span>{-<span class="w">protocol</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$steps</span>    = <span class="i">$args</span>{-<span class="w">steps</span>}<span class="sc">;</span>

    <span class="k">my</span> <span class="i">@step_ids</span> = <span class="i">$dbc</span><span class="i">-&gt;Table_find</span><span class="s">(</span> <span class="q">'Lab_Protocol, Protocol_Step'</span><span class="cm">,</span> <span class="q">&quot;Protocol_Step_ID&quot;</span><span class="cm">,</span> <span class="q">&quot;WHERE Lab_Protocol_ID = FK_Lab_Protocol__ID AND Lab_Protocol_Name = '$protocol' and Protocol_Step_Number IN ($steps)&quot;</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$ids</span> = <span class="k">join</span> <span class="q">','</span><span class="cm">,</span> <span class="i">@step_ids</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$ok</span><span class="sc">;</span>
    <span class="i">$ok</span> = <span class="i">$dbc</span><span class="i">-&gt;delete_records</span><span class="s">(</span>
        <span class="q">'Protocol_Step'</span><span class="cm">,</span> <span class="q">'Protocol_Step_ID'</span><span class="cm">,</span>
        -<span class="w">id_list</span>   <span class="cm">=&gt;</span> <span class="i">$ids</span><span class="cm">,</span>
        -<span class="w">autoquote</span> <span class="cm">=&gt;</span> <span class="n">1</span>
    <span class="s">)</span> <span class="k">if</span> <span class="s">(</span><span class="i">$ids</span><span class="s">)</span><span class="sc">;</span>

    <span class="k">return</span> <span class="i">$ok</span><span class="sc">;</span>

<span class="s">}</span>

<span class="c">########################</span>
<a name="reindex_Protocol-"></a><span class="k">sub </span><span class="m">reindex_Protocol</span> <span class="s">{</span>

    <span class="c">#</span>
<span class="c">########################</span>
    <span class="k">my</span> <span class="i">$self</span>     = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">%args</span>     = <span class="i">&amp;filter_input</span><span class="s">(</span> \<span class="i">@_</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$dbc</span>      = <span class="i">$args</span>{-<span class="w">dbc</span>} || <span class="i">$self</span><span class="i">-&gt;param</span><span class="s">(</span><span class="q">'dbc'</span><span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$protocol</span> = <span class="i">$args</span>{-<span class="w">protocol</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$debug</span>    = <span class="i">$args</span>{-<span class="w">debug</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="s">(</span><span class="i">$protocol_id</span><span class="s">)</span> = <span class="i">$dbc</span><span class="i">-&gt;Table_find</span><span class="s">(</span> <span class="q">'Lab_Protocol'</span><span class="cm">,</span> <span class="q">'Lab_Protocol_ID'</span><span class="cm">,</span> <span class="q">&quot;WHERE Lab_Protocol_Name = '$protocol'&quot;</span> <span class="s">)</span><span class="sc">;</span>

    <span class="k">my</span> <span class="i">@ids</span> = <span class="i">$dbc</span><span class="i">-&gt;Table_find</span><span class="s">(</span> <span class="q">'Protocol_Step'</span><span class="cm">,</span> <span class="q">'Protocol_Step_ID'</span><span class="cm">,</span> <span class="q">&quot; where FK_Lab_Protocol__ID=$protocol_id order by Protocol_Step_Number,Protocol_Step_Changed&quot;</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$number</span> = <span class="k">scalar</span><span class="s">(</span><span class="i">@ids</span><span class="s">)</span><span class="sc">;</span>

    <span class="k">for</span> <span class="s">(</span> <span class="k">my</span> <span class="i">$index</span> = <span class="n">1</span><span class="sc">;</span> <span class="i">$index</span> &lt;= <span class="i">$number</span><span class="sc">;</span> <span class="i">$index</span>++ <span class="s">)</span> <span class="s">{</span>
        <span class="k">my</span> <span class="i">$ok</span> = <span class="i">$dbc</span><span class="i">-&gt;Table_update</span><span class="s">(</span> <span class="q">'Protocol_Step'</span><span class="cm">,</span> <span class="q">'Protocol_Step_Number'</span><span class="cm">,</span> <span class="i">$index</span><span class="cm">,</span> <span class="q">&quot;where Protocol_Step_ID = $ids[$index-1]&quot;</span><span class="cm">,</span> -<span class="w">autoquote</span> <span class="cm">=&gt;</span> <span class="n">1</span><span class="cm">,</span> -<span class="w">debug</span> <span class="cm">=&gt;</span> <span class="i">$debug</span> <span class="s">)</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">return</span><span class="sc">;</span>
<span class="s">}</span>

<a name="get_protocol_status_options-"></a><span class="k">sub </span><span class="m">get_protocol_status_options</span> <span class="s">{</span>
    <span class="k">my</span> <span class="i">%args</span> = <span class="i">filter_input</span><span class="s">(</span> \<span class="i">@_</span><span class="cm">,</span> -<span class="w">args</span> <span class="cm">=&gt;</span> <span class="q">'dbc'</span><span class="cm">,</span> -<span class="w">mandatory</span> <span class="cm">=&gt;</span> <span class="q">'dbc'</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$dbc</span> = <span class="i">$args</span>{-<span class="w">dbc</span>}<span class="sc">;</span>

    <span class="k">my</span> <span class="s">(</span><span class="i">$field_type</span><span class="s">)</span> = <span class="i">$dbc</span><span class="i">-&gt;Table_find</span><span class="s">(</span> <span class="q">'DBField'</span><span class="cm">,</span> <span class="q">'Field_Type'</span><span class="cm">,</span> <span class="q">&quot;WHERE Field_Table = 'Lab_Protocol' and Field_Name = 'Lab_Protocol_Status'&quot;</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">@options</span><span class="sc">;</span>
    <span class="k">if</span> <span class="s">(</span> <span class="i">$field_type</span> &amp;&amp; <span class="i">$field_type</span> =~ <span class="q">/^enum\((.*)\)$/</span> <span class="s">)</span> <span class="s">{</span>
        <span class="k">my</span> <span class="i">@values</span> = <span class="k">split</span> <span class="q">','</span><span class="cm">,</span> <span class="i">$1</span><span class="sc">;</span>
        <span class="k">foreach</span> <span class="k">my</span> <span class="i">$option</span> <span class="s">(</span><span class="i">@values</span><span class="s">)</span> <span class="s">{</span>
            <span class="k">if</span> <span class="s">(</span> <span class="i">$option</span> =~ <span class="q">/^[\'\&quot;](.*)[\'\&quot;]$/</span> <span class="s">)</span> <span class="s">{</span>
                <span class="k">push</span> <span class="i">@options</span><span class="cm">,</span> <span class="i">$1</span><span class="sc">;</span>
            <span class="s">}</span>
        <span class="s">}</span>
    <span class="s">}</span>
    <span class="k">return</span> <span class="i">@options</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">##########################</span>
<span class="c"># Get the Grp_Access privileges for the specified protocol</span>
<span class="c">#</span>
<span class="c"># Example:	my @access = get_grp_access( -dbc =&gt; $dbc, -id =&gt; $id, -grp_ids =&gt; '8,9' );</span>
<span class="c">#</span>
<span class="c"># Return:	Hash Ref of Grp ID and Grp_Access</span>
<span class="c">##########################</span>
<a name="get_grp_access-"></a><span class="k">sub </span><span class="m">get_grp_access</span> <span class="s">{</span>
<span class="c">##########################</span>
    <span class="k">my</span> <span class="i">$self</span>          = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">%args</span>          = <span class="i">filter_input</span><span class="s">(</span> \<span class="i">@_</span><span class="cm">,</span> -<span class="w">args</span> <span class="cm">=&gt;</span> <span class="q">'dbc'</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$dbc</span>           = <span class="i">$args</span>{-<span class="w">dbc</span>} || <span class="i">$self</span>-&gt;{<span class="w">dbc</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$protocol_id</span>   = <span class="i">$args</span>{-<span class="w">id</span>} || <span class="i">$self</span>-&gt;{<span class="w">protocol_id</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$protocol_name</span> = <span class="i">$args</span>{-<span class="w">name</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$grp_ids</span>       = <span class="i">$args</span>{-<span class="w">grp_ids</span>}<span class="sc">;</span>

    <span class="k">my</span> <span class="i">$extra_conditions</span> = <span class="q">''</span><span class="sc">;</span>
    <span class="k">if</span> <span class="s">(</span><span class="i">$grp_ids</span><span class="s">)</span> <span class="s">{</span>
        <span class="k">my</span> <span class="i">$grp_list</span> = <span class="i">Cast_List</span><span class="s">(</span> -<span class="w">list</span> <span class="cm">=&gt;</span> <span class="i">$grp_ids</span><span class="cm">,</span> -<span class="w">to</span> <span class="cm">=&gt;</span> <span class="q">'String'</span><span class="cm">,</span> -<span class="w">autoquote</span> <span class="cm">=&gt;</span> <span class="n">0</span> <span class="s">)</span><span class="sc">;</span>
        <span class="i">$extra_conditions</span> .= <span class="q">&quot; and FK_Grp__ID in ( $grp_list ) &quot;</span><span class="sc">;</span>
    <span class="s">}</span>

    <span class="k">my</span> <span class="i">%grp_access</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">%access_info</span><span class="sc">;</span>
    <span class="k">if</span> <span class="s">(</span><span class="i">$protocol_id</span><span class="s">)</span> <span class="s">{</span>
        <span class="i">%access_info</span> = <span class="i">$dbc</span><span class="i">-&gt;Table_retrieve</span><span class="s">(</span> <span class="q">'GrpLab_Protocol'</span><span class="cm">,</span> <span class="s">[</span> <span class="q">'FK_Grp__ID'</span><span class="cm">,</span> <span class="q">'Grp_Access'</span> <span class="s">]</span><span class="cm">,</span> <span class="q">&quot;WHERE FK_Lab_Protocol__ID = $protocol_id $extra_conditions&quot;</span> <span class="s">)</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">elsif</span> <span class="s">(</span><span class="i">$protocol_name</span><span class="s">)</span> <span class="s">{</span>
        <span class="i">%access_info</span> = <span class="i">$dbc</span><span class="i">-&gt;Table_retrieve</span><span class="s">(</span> <span class="q">'Lab_Protocol, GrpLab_Protocol'</span><span class="cm">,</span> <span class="s">[</span> <span class="q">'FK_Grp__ID'</span><span class="cm">,</span> <span class="q">'Grp_Access'</span> <span class="s">]</span><span class="cm">,</span> <span class="q">&quot;WHERE FK_Lab_Protocol__ID = Lab_Protocol_ID and Lab_Protocol_Name = '$protocol_name' $extra_conditions&quot;</span> <span class="s">)</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">my</span> <span class="i">$index</span> = <span class="n">0</span><span class="sc">;</span>
    <span class="k">while</span> <span class="s">(</span> <span class="k">defined</span> <span class="i">$access_info</span>{<span class="w">FK_Grp__ID</span>}[<span class="i">$index</span>] <span class="s">)</span> <span class="s">{</span>
        <span class="i">$grp_access</span>{ <span class="i">$access_info</span>{<span class="w">FK_Grp__ID</span>}[<span class="i">$index</span>] } = <span class="i">$access_info</span>{<span class="w">Grp_Access</span>}[<span class="i">$index</span>]<span class="sc">;</span>
        <span class="i">$index</span>++<span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">return</span> \<span class="i">%grp_access</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">##########################</span>
<span class="c"># Get the status for the specified protocol</span>
<span class="c">#</span>
<span class="c"># Example:	my $status = get_protocol_status( -dbc =&gt; $dbc, -id =&gt; $id );</span>
<span class="c">#</span>
<span class="c"># Return:	Scalar - protocol status</span>
<span class="c">##########################</span>
<a name="get_protocol_status-"></a><span class="k">sub </span><span class="m">get_protocol_status</span> <span class="s">{</span>
<span class="c">##########################</span>
    <span class="k">my</span> <span class="i">$self</span>          = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">%args</span>          = <span class="i">filter_input</span><span class="s">(</span> \<span class="i">@_</span><span class="cm">,</span> -<span class="w">args</span> <span class="cm">=&gt;</span> <span class="q">'dbc'</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$dbc</span>           = <span class="i">$args</span>{-<span class="w">dbc</span>} || <span class="i">$self</span>-&gt;{<span class="w">dbc</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$protocol_id</span>   = <span class="i">$args</span>{-<span class="w">id</span>} || <span class="i">$self</span>-&gt;{<span class="w">protocol_id</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$protocol_name</span> = <span class="i">$args</span>{-<span class="w">name</span>}<span class="sc">;</span>

    <span class="k">if</span> <span class="s">(</span> !<span class="i">$protocol_id</span> &amp;&amp; !<span class="i">$protocol_name</span> <span class="s">)</span> <span class="s">{</span>
        <span class="k">return</span><span class="sc">;</span>
    <span class="s">}</span>

    <span class="k">my</span> <span class="i">$conditions</span> = <span class="q">&quot;WHERE 1 &quot;</span><span class="sc">;</span>
    <span class="k">if</span> <span class="s">(</span><span class="i">$protocol_id</span><span class="s">)</span> <span class="s">{</span>
        <span class="i">$conditions</span> .= <span class="q">&quot; and Lab_Protocol_ID = $protocol_id &quot;</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">elsif</span> <span class="s">(</span><span class="i">$protocol_name</span><span class="s">)</span> <span class="s">{</span>
        <span class="i">$conditions</span> .= <span class="q">&quot; and Lab_Protocol_Name = '$protocol_name' &quot;</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">my</span> <span class="s">(</span><span class="i">$status</span><span class="s">)</span> = <span class="i">$dbc</span><span class="i">-&gt;Table_find</span><span class="s">(</span> <span class="q">'Lab_Protocol'</span><span class="cm">,</span> <span class="q">'Lab_Protocol_Status'</span><span class="cm">,</span> -<span class="w">condition</span> <span class="cm">=&gt;</span> <span class="i">$conditions</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">return</span> <span class="i">$status</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">##########################</span>
<span class="c"># Set protocol status</span>
<span class="c">#</span>
<span class="c"># Example:	my $ok = set_protocol_status( -dbc =&gt; $dbc, -id =&gt; $id, -status =&gt; 'Active' );</span>
<span class="c">#</span>
<span class="c"># Return:	1 if success; 0 if fail</span>
<span class="c">##########################</span>
<a name="set_protocol_status-"></a><span class="k">sub </span><span class="m">set_protocol_status</span> <span class="s">{</span>
<span class="c">##########################</span>
    <span class="k">my</span> <span class="i">$self</span>          = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">%args</span>          = <span class="i">filter_input</span><span class="s">(</span> \<span class="i">@_</span><span class="cm">,</span> -<span class="w">args</span> <span class="cm">=&gt;</span> <span class="q">'dbc'</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$dbc</span>           = <span class="i">$args</span>{-<span class="w">dbc</span>} || <span class="i">$self</span>-&gt;{<span class="w">dbc</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$protocol_id</span>   = <span class="i">$args</span>{-<span class="w">id</span>} || <span class="i">$self</span>-&gt;{<span class="w">protocol_id</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$protocol_name</span> = <span class="i">$args</span>{-<span class="w">name</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$status</span>        = <span class="i">$args</span>{-<span class="w">status</span>}<span class="sc">;</span>

    <span class="k">if</span> <span class="s">(</span> !<span class="i">$protocol_id</span> &amp;&amp; !<span class="i">$protocol_name</span> <span class="s">)</span> <span class="s">{</span>
        <span class="k">return</span><span class="sc">;</span>
    <span class="s">}</span>

    <span class="k">my</span> <span class="i">$conditions</span> = <span class="q">&quot;WHERE 1 &quot;</span><span class="sc">;</span>
    <span class="k">if</span> <span class="s">(</span><span class="i">$protocol_id</span><span class="s">)</span> <span class="s">{</span>
        <span class="i">$conditions</span> .= <span class="q">&quot; and Lab_Protocol_ID = $protocol_id &quot;</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">elsif</span> <span class="s">(</span><span class="i">$protocol_name</span><span class="s">)</span> <span class="s">{</span>
        <span class="i">$conditions</span> .= <span class="q">&quot; and Lab_Protocol_Name = '$protocol_name' &quot;</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">my</span> <span class="i">$ok</span> = <span class="i">$dbc</span><span class="i">-&gt;Table_update_array</span><span class="s">(</span> <span class="q">'Lab_Protocol'</span><span class="cm">,</span> <span class="s">[</span><span class="q">'Lab_Protocol_Status'</span><span class="s">]</span><span class="cm">,</span> <span class="s">[</span><span class="i">$status</span><span class="s">]</span><span class="cm">,</span> <span class="q">&quot;$conditions&quot;</span><span class="cm">,</span> -<span class="w">autoquote</span> <span class="cm">=&gt;</span> <span class="n">1</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">return</span> <span class="i">$ok</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">##############################</span>
<span class="c"># Retrieve protocols that meet the given conditions</span>
<span class="c">#</span>
<span class="c"># Example:	my $protocols = get_protocol( -dbc =&gt; $dbc, -department =&gt; 'Lib_Construction', -status =&gt; 'Active' );</span>
<span class="c">#</span>
<span class="c"># Return:	Array ref of protocols</span>
<span class="c">##############################</span>
<a name="get_protocols-"></a><span class="k">sub </span><span class="m">get_protocols</span> <span class="s">{</span>
<span class="c">##############################</span>
    <span class="k">my</span> <span class="i">%args</span>       = <span class="i">filter_input</span><span class="s">(</span> \<span class="i">@_</span><span class="cm">,</span> -<span class="w">args</span> <span class="cm">=&gt;</span> <span class="q">'dbc'</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$dbc</span>        = <span class="i">$args</span>{-<span class="w">dbc</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$department</span> = <span class="i">$args</span>{-<span class="w">department</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$grp_ids</span>    = <span class="i">$args</span>{-<span class="w">grp_ids</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$grp_type</span>   = <span class="i">$args</span>{-<span class="w">grp_type</span>}<span class="sc">;</span>                      <span class="c"># specify Grp.Grp_Type</span>
    <span class="k">my</span> <span class="i">$access</span>     = <span class="i">$args</span>{-<span class="w">access</span>}<span class="sc">;</span>                        <span class="c"># specify Grp.Access</span>
    <span class="k">my</span> <span class="i">$grp_access</span> = <span class="i">$args</span>{-<span class="w">grp_access</span>}<span class="sc">;</span>                    <span class="c"># specify GrpLab_Protocol.Grp_Access</span>
    <span class="k">my</span> <span class="i">$status</span>     = <span class="i">$args</span>{-<span class="w">status</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$debug</span>      = <span class="i">$args</span>{-<span class="w">debug</span>}<span class="sc">;</span>

    <span class="k">my</span> <span class="i">$tables</span>     = <span class="q">'Lab_Protocol,GrpLab_Protocol,Grp'</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$conditions</span> = <span class="q">' WHERE Lab_Protocol.Lab_Protocol_ID = GrpLab_Protocol.FK_Lab_Protocol__ID AND GrpLab_Protocol.FK_Grp__ID = Grp_ID '</span><span class="sc">;</span>
    <span class="k">if</span> <span class="s">(</span><span class="i">$department</span><span class="s">)</span> <span class="s">{</span>
        <span class="i">$tables</span>     .= <span class="q">',Department'</span><span class="sc">;</span>
        <span class="i">$conditions</span> .= <span class="q">&quot; AND Grp.FK_Department__ID = Department_ID AND Department_Name = '$department' &quot;</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">if</span> <span class="s">(</span><span class="i">$grp_type</span><span class="s">)</span> <span class="s">{</span>
        <span class="k">my</span> <span class="i">$list</span> = <span class="i">Cast_List</span><span class="s">(</span> -<span class="w">list</span> <span class="cm">=&gt;</span> <span class="i">$grp_type</span><span class="cm">,</span> -<span class="w">to</span> <span class="cm">=&gt;</span> <span class="q">'String'</span><span class="cm">,</span> -<span class="w">autoquote</span> <span class="cm">=&gt;</span> <span class="n">1</span> <span class="s">)</span><span class="sc">;</span>
        <span class="i">$conditions</span> .= <span class="q">&quot; AND Grp_Type in ( $list ) &quot;</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">if</span> <span class="s">(</span><span class="i">$grp_ids</span><span class="s">)</span> <span class="s">{</span>
        <span class="k">my</span> <span class="i">$list</span> = <span class="i">Cast_List</span><span class="s">(</span> -<span class="w">list</span> <span class="cm">=&gt;</span> <span class="i">$grp_ids</span><span class="cm">,</span> -<span class="w">to</span> <span class="cm">=&gt;</span> <span class="q">'String'</span><span class="cm">,</span> -<span class="w">autoquote</span> <span class="cm">=&gt;</span> <span class="n">0</span> <span class="s">)</span><span class="sc">;</span>
        <span class="i">$conditions</span> .= <span class="q">&quot; AND Grp_ID in ( $list ) &quot;</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">if</span> <span class="s">(</span><span class="i">$access</span><span class="s">)</span> <span class="s">{</span>
        <span class="k">my</span> <span class="i">$list</span> = <span class="i">Cast_List</span><span class="s">(</span> -<span class="w">list</span> <span class="cm">=&gt;</span> <span class="i">$access</span><span class="cm">,</span> -<span class="w">to</span> <span class="cm">=&gt;</span> <span class="q">'String'</span><span class="cm">,</span> -<span class="w">autoquote</span> <span class="cm">=&gt;</span> <span class="n">1</span> <span class="s">)</span><span class="sc">;</span>
        <span class="i">$conditions</span> .= <span class="q">&quot; AND Grp.Access in ( $list ) &quot;</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">if</span> <span class="s">(</span><span class="i">$grp_access</span><span class="s">)</span> <span class="s">{</span>
        <span class="k">my</span> <span class="i">$list</span> = <span class="i">Cast_List</span><span class="s">(</span> -<span class="w">list</span> <span class="cm">=&gt;</span> <span class="i">$grp_access</span><span class="cm">,</span> -<span class="w">to</span> <span class="cm">=&gt;</span> <span class="q">'String'</span><span class="cm">,</span> -<span class="w">autoquote</span> <span class="cm">=&gt;</span> <span class="n">1</span> <span class="s">)</span><span class="sc">;</span>
        <span class="i">$conditions</span> .= <span class="q">&quot; AND GrpLab_Protocol.Grp_Access in ( $list ) &quot;</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">if</span> <span class="s">(</span><span class="i">$status</span><span class="s">)</span> <span class="s">{</span>
        <span class="k">my</span> <span class="i">$list</span> = <span class="i">Cast_List</span><span class="s">(</span> -<span class="w">list</span> <span class="cm">=&gt;</span> <span class="i">$status</span><span class="cm">,</span> -<span class="w">to</span> <span class="cm">=&gt;</span> <span class="q">'String'</span><span class="cm">,</span> -<span class="w">autoquote</span> <span class="cm">=&gt;</span> <span class="n">1</span> <span class="s">)</span><span class="sc">;</span>
        <span class="i">$conditions</span> .= <span class="q">&quot; AND Lab_Protocol_Status in ( $list ) &quot;</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">my</span> <span class="i">@protocols</span> = <span class="i">$dbc</span><span class="i">-&gt;Table_find</span><span class="s">(</span>
        -<span class="w">table</span>     <span class="cm">=&gt;</span> <span class="i">$tables</span><span class="cm">,</span>
        -<span class="w">fields</span>    <span class="cm">=&gt;</span> <span class="q">'Lab_Protocol_Name'</span><span class="cm">,</span>
        -<span class="w">condition</span> <span class="cm">=&gt;</span> <span class="i">$conditions</span><span class="cm">,</span>
        -<span class="w">distinct</span>  <span class="cm">=&gt;</span> <span class="n">1</span><span class="cm">,</span>
        -<span class="w">debug</span>     <span class="cm">=&gt;</span> <span class="i">$debug</span>
    <span class="s">)</span><span class="sc">;</span>
    <span class="k">return</span> \<span class="i">@protocols</span><span class="sc">;</span>
<span class="s">}</span>

<a name="convert_to_labeled_list-"></a><span class="k">sub </span><span class="m">convert_to_labeled_list</span> <span class="s">{</span>
    <span class="k">my</span> <span class="i">%args</span> = <span class="i">filter_input</span><span class="s">(</span> \<span class="i">@_</span><span class="cm">,</span> -<span class="w">args</span> <span class="cm">=&gt;</span> <span class="q">'names'</span><span class="cm">,</span> -<span class="w">mandatory</span> <span class="cm">=&gt;</span> <span class="q">'names'</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$names</span> = <span class="i">$args</span>{-<span class="w">names</span>}<span class="sc">;</span>

    <span class="k">my</span> <span class="i">@choices</span> = <span class="s">(</span><span class="q">'-'</span><span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">%labels</span> = <span class="s">(</span> <span class="q">'-'</span> <span class="cm">=&gt;</span> <span class="q">'--Select--'</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">foreach</span> <span class="k">my</span> <span class="i">$prot</span> <span class="s">(</span><span class="i">@$names</span><span class="s">)</span> <span class="s">{</span>
        <span class="k">my</span> <span class="i">$pad_prot</span> = <span class="i">$prot</span><span class="sc">;</span>
        <span class="i">$pad_prot</span> =~ <span class="q">s/\s+/\+/g</span><span class="sc">;</span>
        <span class="k">push</span><span class="s">(</span> <span class="i">@choices</span><span class="cm">,</span> <span class="i">$pad_prot</span> <span class="s">)</span><span class="sc">;</span>
        <span class="i">$labels</span>{<span class="i">$pad_prot</span>} = <span class="i">$prot</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="i">@choices</span> = <span class="k">sort</span><span class="s">(</span><span class="i">@choices</span><span class="s">)</span><span class="sc">;</span>
    <span class="k">return</span> <span class="s">(</span> \<span class="i">@choices</span><span class="cm">,</span> \<span class="i">%labels</span> <span class="s">)</span><span class="sc">;</span>
<span class="s">}</span>

<span class="k">return</span> <span class="n">1</span><span class="sc">;</span>
<a name="EOF-"></a></pre>
</body>
</html>
