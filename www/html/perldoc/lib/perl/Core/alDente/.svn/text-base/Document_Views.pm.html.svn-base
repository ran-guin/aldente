<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" 
   "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!-- Generated by perltidy on Tue Dec 11 18:55:57 2012 -->
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>lib/perl/Core/alDente/Document_Views.pm</title>
<style type="text/css">
<!--
/* default style sheet generated by perltidy */
body {background: #FFFFFF; color: #000000}
pre { color: #000000; 
      background: #FFFFFF;
      font-family: courier;
    } 

.c  { color: #228B22;} /* comment */
.cm { color: #000000;} /* comma */
.co { color: #000000;} /* colon */
.h  { color: #CD5555; font-weight:bold;} /* here-doc-target */
.hh { color: #CD5555; font-style:italic;} /* here-doc-text */
.i  { color: #00688B;} /* identifier */
.j  { color: #CD5555; font-weight:bold;} /* label */
.k  { color: #8B008B; font-weight:bold;} /* keyword */
.m  { color: #FF0000; font-weight:bold;} /* subroutine */
.n  { color: #B452CD;} /* numeric */
.p  { color: #000000;} /* paren */
.pd { color: #228B22; font-style:italic;} /* pod-text */
.pu { color: #000000;} /* punctuation */
.q  { color: #CD5555;} /* quote */
.s  { color: #000000;} /* structure */
.sc { color: #000000;} /* semicolon */
.v  { color: #B452CD;} /* v-string */
.w  { color: #000000;} /* bareword */
-->
</style>
</head>
<body>
<a name="-top-"></a>
<h1>lib/perl/Core/alDente/Document_Views.pm</h1>
<!-- BEGIN CODE INDEX --><a name="code-index"></a>
<ul>
<li><a href="#package-alDente::Document_Views-">package alDente::Document_Views</a>
<ul>
<li><a href="#view_Code-">view_Code</a></li>
</ul>
</li>
<li><a href="#EOF-">EOF</a></li>
</ul>
<!-- END CODE INDEX -->
<hr />
<!-- contents of filename: lib/perl/Core/alDente/Document_Views.pm -->
<pre>
<span class="c">###################################################################################################################################</span>
<span class="c"># alDente::Document_Views.pm</span>
<span class="c">#</span>
<span class="c">#</span>
<span class="c">#</span>
<span class="c">#</span>
<span class="c">###################################################################################################################################</span>
<a name="package-alDente::Document_Views-"></a><span class="k">package </span><span class="i">alDente::Document_Views</span><span class="sc">;</span>

<span class="k">use</span> <span class="w">strict</span><span class="sc">;</span>
<span class="k">use</span> <span class="w">CGI</span> <span class="q">qw(:standard)</span><span class="sc">;</span>

<span class="c">## SDB modules</span>
<span class="k">use</span> <span class="w">SDB::CustomSettings</span><span class="sc">;</span>
<span class="k">use</span> <span class="w">SDB::DBIO</span><span class="sc">;</span>
<span class="k">use</span> <span class="w">SDB::HTML</span><span class="sc">;</span>

<span class="c">## RG Tools</span>
<span class="k">use</span> <span class="w">RGTools::RGIO</span><span class="sc">;</span>
<span class="k">use</span> <span class="w">RGTools::Views</span><span class="sc">;</span>
<span class="k">use</span> <span class="w">alDente::Attribute_Views</span><span class="sc">;</span>

<span class="c">################</span>
<span class="c"># An HTML document generator to enable automatic viewing of code showing descriptions, arguments etc.</span>
<span class="c">################</span>
<a name="view_Code-"></a><span class="k">sub </span><span class="m">view_Code</span> <span class="s">{</span>
<span class="c">################</span>
    <span class="k">my</span> <span class="i">%args</span>        = <span class="i">&amp;filter_input</span><span class="s">(</span> \<span class="i">@_</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$Document</span>    = <span class="i">$args</span>{-<span class="w">Document</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$module</span>      = <span class="i">$args</span>{-<span class="w">API</span>} || <span class="i">$args</span>{-<span class="w">module</span>} || <span class="i">param</span><span class="s">(</span><span class="q">'API'</span><span class="s">)</span><span class="sc">;</span>          <span class="c">## name of module or API to display (eg. DBIO)</span>
    <span class="k">my</span> <span class="i">$dir</span>         = <span class="i">$args</span>{-<span class="w">dir</span>} || <span class="i">param</span><span class="s">(</span><span class="q">'Directory'</span><span class="s">)</span><span class="sc">;</span>                      <span class="c">## directory within library where module exists (eg SDB)</span>
    <span class="k">my</span> <span class="i">$path</span>        = <span class="i">$args</span>{-<span class="w">path</span>} || <span class="i">param</span><span class="s">(</span><span class="q">'Path'</span><span class="s">)</span> || <span class="i">$Configs</span>{<span class="w">perl_dir</span>}<span class="sc">;</span>    <span class="c">## path where module library is (defaults to alDente's beta perl library)</span>
    <span class="k">my</span> <span class="i">$module_list</span> = <span class="i">$args</span>{-<span class="w">modules</span>} || <span class="i">param</span><span class="s">(</span><span class="q">'Modules'</span><span class="s">)</span><span class="sc">;</span>                    <span class="c">## optional list of specified modules to enable access to (array ref)</span>

    <span class="k">my</span> <span class="s">(</span> <span class="i">$path_mod</span><span class="cm">,</span> <span class="i">$error</span> <span class="s">)</span> = <span class="i">try_system_command</span><span class="s">(</span><span class="q">&quot;find $path -name $module.pm -follow&quot;</span><span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">@path_mod</span> = <span class="k">split</span> <span class="q">&quot; &quot;</span><span class="cm">,</span> <span class="i">$path_mod</span><span class="sc">;</span>

    <span class="k">if</span> <span class="s">(</span> <span class="i">$path_mod</span>[<span class="n">0</span>] =~ <span class="q">/\Q$path\E(.+)\/$module/</span> <span class="s">)</span> <span class="s">{</span> <span class="i">$dir</span> = <span class="i">$1</span><span class="sc">;</span> <span class="s">}</span>

    <span class="k">my</span> <span class="i">%layers</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$format</span> = <span class="q">'tab'</span><span class="sc">;</span>

    <span class="k">my</span> <span class="i">@exclusions</span> = <span class="q">qw(new DESTROY error warning errors warnings generate_data api_output)</span><span class="sc">;</span>    <span class="c">## exclude documentation on these methods (as well as methods starting with _ )</span>

    <span class="k">my</span> <span class="i">@modules</span><span class="sc">;</span>
    <span class="k">if</span> <span class="s">(</span><span class="i">$module_list</span><span class="s">)</span> <span class="s">{</span>
        <span class="i">@modules</span> = <span class="i">Cast_List</span><span class="s">(</span> -<span class="w">list</span> <span class="cm">=&gt;</span> <span class="i">$module_list</span><span class="cm">,</span> -<span class="w">to</span> <span class="cm">=&gt;</span> <span class="q">'array'</span> <span class="s">)</span><span class="sc">;</span>
        <span class="i">$module_list</span> = <span class="k">join</span> <span class="q">','</span><span class="cm">,</span> <span class="i">@modules</span><span class="sc">;</span>                                                      <span class="c">## convert to string to use in link.</span>
    <span class="s">}</span>
    <span class="k">else</span> <span class="s">{</span>
        <span class="k">my</span> <span class="i">$found</span> = <span class="q">`ls $path/*/*.pm`</span><span class="sc">;</span>
        <span class="i">@modules</span> = <span class="k">split</span> <span class="q">&quot;\n&quot;</span><span class="cm">,</span> <span class="i">$found</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="c">## generate general layer with link to all modules ##</span>
    <span class="k">my</span> <span class="i">%Modules</span><span class="sc">;</span>

    <span class="k">foreach</span> <span class="k">my</span> <span class="i">$module</span> <span class="s">(</span><span class="i">@modules</span><span class="s">)</span> <span class="s">{</span>
        <span class="k">my</span> <span class="i">$dir</span><span class="sc">;</span>
        <span class="k">my</span> <span class="i">$mod</span><span class="sc">;</span>
        <span class="k">my</span> <span class="i">@dirs</span><span class="sc">;</span>

        <span class="k">if</span> <span class="s">(</span> <span class="i">$module</span> =~ <span class="q">/\/?(\w+)(\/|::)(\w+)(\.pm|)$/</span> <span class="s">)</span> <span class="s">{</span>
            <span class="i">$dir</span> = <span class="i">$1</span><span class="sc">;</span>
            <span class="i">$mod</span> = <span class="i">$3</span><span class="sc">;</span>
            <span class="k">push</span> <span class="i">@dirs</span><span class="cm">,</span> <span class="i">$dir</span> <span class="k">unless</span> <span class="s">(</span> <span class="k">grep</span> <span class="q">/^$dir$/</span><span class="cm">,</span> <span class="i">@dirs</span> <span class="s">)</span><span class="sc">;</span>
        <span class="s">}</span>
        <span class="k">else</span> <span class="s">{</span> <span class="i">Message</span><span class="s">(</span><span class="q">&quot;$module not found (or not in dir::name format)&quot;</span><span class="s">)</span><span class="sc">;</span> <span class="k">next</span><span class="sc">;</span> <span class="s">}</span>

        <span class="k">my</span> <span class="s">(</span> <span class="i">$path_mod</span><span class="cm">,</span> <span class="i">$error</span> <span class="s">)</span> = <span class="i">try_system_command</span><span class="s">(</span><span class="q">&quot;find $path -name $mod.pm -follow&quot;</span><span class="s">)</span><span class="sc">;</span>
        <span class="k">my</span> <span class="i">@path_mod</span> = <span class="k">split</span> <span class="q">&quot; &quot;</span><span class="cm">,</span> <span class="i">$path_mod</span><span class="sc">;</span>

        <span class="i">$Modules</span>{<span class="i">$dir</span>} .= <span class="q">'&lt;LI&gt;'</span> . <span class="i">Link_To</span><span class="s">(</span> <span class="i">$homelink</span><span class="cm">,</span> <span class="i">$mod</span><span class="cm">,</span> <span class="q">&quot;&amp;cgi_application=alDente::Document_App&amp;rm=View Modules&amp;Directory=$dir&amp;API=$mod&amp;Modules=$module_list&quot;</span><span class="cm">,</span> -<span class="w">window</span> <span class="cm">=&gt;</span> <span class="s">[</span><span class="q">'code'</span><span class="s">]</span><span class="cm">,</span> -<span class="w">tooltip</span> <span class="cm">=&gt;</span> <span class="q">&quot;View methods&quot;</span> <span class="s">)</span><span class="sc">;</span>
        <span class="k">if</span> <span class="s">(</span> <span class="i">$path_mod</span>[<span class="n">0</span>] =~ <span class="q">/\Q$path\E(.+)\/$mod/</span> <span class="s">)</span> <span class="s">{</span> <span class="i">$dir</span> = <span class="i">$1</span><span class="sc">;</span> <span class="s">}</span>
        <span class="k">if</span> <span class="s">(</span> <span class="k">-e</span> <span class="q">&quot;$Configs{web_dir}/html/perldoc/lib/perl/$dir/$mod.pm.html&quot;</span> <span class="s">)</span> <span class="s">{</span> <span class="i">$Modules</span>{<span class="i">$dir</span>} .= <span class="i">&amp;Link_To</span><span class="s">(</span> <span class="q">&quot;../html/perldoc/lib/perl/$dir/$mod.pm.html&quot;</span><span class="cm">,</span> <span class="q">&quot;-[pod]&quot;</span><span class="cm">,</span> -<span class="w">window</span> <span class="cm">=&gt;</span> <span class="s">[</span><span class="q">'pod'</span><span class="s">]</span><span class="cm">,</span> -<span class="w">tooltip</span> <span class="cm">=&gt;</span> <span class="q">'View source code'</span> <span class="s">)</span> <span class="s">}</span>

        <span class="c">#        else { $Modules{$dir} .= Show_Tool_Tip('(no)',&quot;$Configs{web_dir}/html/perldoc/lib/perl/$dir/$mod.pm.html&quot;) }</span>
    <span class="s">}</span>

    <span class="k">my</span> <span class="i">$APIs</span> = <span class="w">new</span> <span class="i">HTML_Table</span><span class="s">(</span> -<span class="w">title</span> <span class="cm">=&gt;</span> <span class="q">'alDente Modules'</span><span class="cm">,</span> -<span class="w">border</span> <span class="cm">=&gt;</span> <span class="n">1</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">@headers</span><span class="sc">;</span>
    <span class="k">foreach</span> <span class="k">my</span> <span class="i">$dir</span> <span class="s">(</span> <span class="k">keys</span> <span class="i">%Modules</span> <span class="s">)</span> <span class="s">{</span>
        <span class="k">push</span> <span class="i">@headers</span><span class="cm">,</span> <span class="i">$dir</span><span class="sc">;</span>
        <span class="i">$APIs</span><span class="i">-&gt;Set_Column</span><span class="s">(</span> <span class="s">[</span> <span class="q">&quot;&lt;UL&gt;\n&quot;</span> . <span class="i">$Modules</span>{<span class="i">$dir</span>} . <span class="q">&quot;\n&lt;/UL&gt;\n&quot;</span> <span class="s">]</span> <span class="s">)</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="i">$APIs</span><span class="i">-&gt;Set_Headers</span><span class="s">(</span> \<span class="i">@headers</span> <span class="s">)</span><span class="sc">;</span>
    <span class="i">$APIs</span><span class="i">-&gt;Set_VAlignment</span><span class="s">(</span><span class="q">'top'</span><span class="s">)</span><span class="sc">;</span>

    <span class="k">my</span> <span class="i">@order</span><span class="sc">;</span>

    <span class="k">if</span> <span class="s">(</span><span class="i">$module</span><span class="s">)</span> <span class="s">{</span>
        <span class="k">my</span> <span class="i">@sections</span> = <span class="q">qw(SYNOPSIS DESCRIPTION NAME)</span><span class="sc">;</span>
        <span class="k">foreach</span> <span class="k">my</span> <span class="i">$section</span> <span class="s">(</span><span class="i">@sections</span><span class="s">)</span> <span class="s">{</span>
            <span class="i">$layers</span>{<span class="i">$section</span>} = <span class="i">alDente::Tools::search_code</span><span class="s">(</span>
                <span class="w">path</span>        <span class="cm">=&gt;</span> <span class="q">&quot;$Configs{perl_dir}/$dir&quot;</span><span class="cm">,</span>
                <span class="w">filename</span>    <span class="cm">=&gt;</span> <span class="q">&quot;$module.pm&quot;</span><span class="cm">,</span>
                <span class="w">output</span>      <span class="cm">=&gt;</span> <span class="i">$URL_temp_dir</span> . <span class="q">&quot;/search.$section&quot;</span> . <span class="k">localtime</span><span class="s">(</span><span class="s">)</span><span class="cm">,</span>
                <span class="w">search_area</span> <span class="cm">=&gt;</span> <span class="q">'routine'</span><span class="cm">,</span>
                <span class="w">method</span>      <span class="cm">=&gt;</span> <span class="i">$section</span><span class="cm">,</span>
                <span class="w">section</span>     <span class="cm">=&gt;</span> <span class="i">$section</span>
            <span class="s">)</span> || <span class="q">&quot;($section section not found)&quot;</span><span class="sc">;</span>
            <span class="k">push</span> <span class="i">@order</span><span class="cm">,</span> <span class="i">$section</span><span class="sc">;</span>
        <span class="s">}</span>

        <span class="c">## Get list of methods in each module ##</span>
        <span class="k">my</span> <span class="i">@methods</span> = <span class="k">split</span> <span class="q">&quot;\n&quot;</span><span class="cm">,</span> <span class="i">try_system_command</span><span class="s">(</span><span class="q">&quot;grep '^sub ' $Configs{perl_dir}/$dir/$module.pm&quot;</span><span class="s">)</span><span class="sc">;</span>
        <span class="k">if</span> <span class="s">(</span> <span class="i">$methods</span>[<span class="n">0</span>] =~ <span class="q">/No such file/i</span> <span class="s">)</span> <span class="s">{</span> <span class="i">Message</span><span class="s">(</span><span class="q">&quot;cannot find $Configs{perl_dir}/$dir/$module.pm&quot;</span><span class="s">)</span> <span class="s">}</span>
        <span class="k">foreach</span> <span class="k">my</span> <span class="i">$method</span> <span class="s">(</span> <span class="k">sort</span> <span class="i">@methods</span> <span class="s">)</span> <span class="s">{</span>
            <span class="i">$method</span> =~ <span class="q">s /^sub\s+(\w+)(.*?)$/$1/</span><span class="sc">;</span>
            <span class="c">## skip inappropriate methods:  internal ones, excluded ones, old ones etc. ##</span>
            <span class="k">if</span> <span class="s">(</span> !<span class="i">$method</span> <span class="s">)</span> <span class="s">{</span><span class="k">next</span><span class="s">}</span>
            <span class="k">elsif</span> <span class="s">(</span> <span class="k">grep</span> <span class="q">/^$method$/</span><span class="cm">,</span> <span class="i">@exclusions</span> <span class="s">)</span> <span class="s">{</span><span class="k">next</span><span class="s">}</span>
            <span class="k">elsif</span> <span class="s">(</span> <span class="i">$method</span> =~ <span class="q">/^_/</span> <span class="s">)</span>     <span class="s">{</span><span class="k">next</span><span class="s">}</span>
            <span class="k">elsif</span> <span class="s">(</span> <span class="i">$method</span> =~ <span class="q">/_OLD$/i</span> <span class="s">)</span> <span class="s">{</span><span class="k">next</span><span class="s">}</span>

            <span class="k">my</span> <span class="i">$layer</span> = <span class="i">alDente::Tools::search_code</span><span class="s">(</span>
                <span class="w">path</span>        <span class="cm">=&gt;</span> <span class="q">&quot;$Configs{perl_dir}/$dir&quot;</span><span class="cm">,</span>
                <span class="w">filename</span>    <span class="cm">=&gt;</span> <span class="q">&quot;$module.pm&quot;</span><span class="cm">,</span>
                <span class="w">output</span>      <span class="cm">=&gt;</span> <span class="i">$URL_temp_dir</span> . <span class="q">&quot;/search.$method&quot;</span> . <span class="k">localtime</span><span class="s">(</span><span class="s">)</span><span class="cm">,</span>
                <span class="w">search_area</span> <span class="cm">=&gt;</span> <span class="q">'routine'</span><span class="cm">,</span>
                <span class="w">method</span>      <span class="cm">=&gt;</span> <span class="i">$method</span><span class="cm">,</span>
            <span class="s">)</span><span class="sc">;</span>

            <span class="c">#	      if (grep /^$method$/, @highlights) { $method = &quot;&lt;Font color=red&gt;$method&lt;/Font&gt;&quot; }   ## highlight methods most commonly used ##</span>
            <span class="i">$layers</span>{<span class="i">$method</span>} = <span class="i">$layer</span> || <span class="q">&quot;(method $method not found in $module)&quot;</span><span class="sc">;</span>
            <span class="k">push</span> <span class="i">@order</span><span class="cm">,</span> <span class="i">$method</span><span class="sc">;</span>
        <span class="s">}</span>
    <span class="s">}</span>
    <span class="k">else</span> <span class="s">{</span>
        <span class="k">return</span> <span class="i">$APIs</span><span class="i">-&gt;Printout</span><span class="s">(</span><span class="n">0</span><span class="s">)</span><span class="sc">;</span>
    <span class="s">}</span>

    <span class="i">$layers</span>{<span class="q">'other Modules'</span>} = <span class="i">$APIs</span><span class="i">-&gt;Printout</span><span class="s">(</span><span class="n">0</span><span class="s">)</span><span class="sc">;</span>
    <span class="k">unshift</span> <span class="i">@order</span><span class="cm">,</span> <span class="q">'other Modules'</span><span class="sc">;</span>

    <span class="k">my</span> <span class="i">$output</span> = <span class="i">SDB::HTML::define_Layers</span><span class="s">(</span>
        -<span class="w">layers</span>    <span class="cm">=&gt;</span> \<span class="i">%layers</span><span class="cm">,</span>
        -<span class="w">tab_width</span> <span class="cm">=&gt;</span> <span class="n">100</span><span class="cm">,</span>
        -<span class="w">order</span>     <span class="cm">=&gt;</span> \<span class="i">@order</span><span class="cm">,</span>
        -<span class="w">default</span>   <span class="cm">=&gt;</span> <span class="q">'DESCRIPTION'</span><span class="cm">,</span>
        -<span class="w">format</span>    <span class="cm">=&gt;</span> <span class="q">'list'</span>
    <span class="s">)</span><span class="sc">;</span>
    <span class="k">return</span> <span class="i">$output</span><span class="sc">;</span>
<span class="s">}</span>

<span class="n">1</span><span class="sc">;</span>
<a name="EOF-"></a></pre>
</body>
</html>
