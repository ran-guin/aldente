<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>Process_Monitor.pm</title>
<link rev="made" href="mailto:root@localhost" />
</head>

<style type="text/css">
<!--
/* default style sheet generated by perltidy */
body {background: #FFFFFF; color: #000000}
pre { color: #000000; 
      background: #F0F0F0;
      font-family: courier;
    } 

.c  { color: #228B22;} /* comment */
.cm { color: #000000;} /* comma */
.co { color: #000000;} /* colon */
.h  { color: #CD5555; font-weight:bold;} /* here-doc-target */
.hh { color: #CD5555; font-style:italic;} /* here-doc-text */
.i  { color: #00688B;} /* identifier */
.j  { color: #CD5555; font-weight:bold;} /* label */
.k  { color: #8B008B; font-weight:bold;} /* keyword */
.m  { color: #FF0000; font-weight:bold;} /* subroutine */
.n  { color: #B452CD;} /* numeric */
.p  { color: #000000;} /* paren */
.pd { color: #228B22; font-style:italic;} /* pod-text */
.pu { color: #000000;} /* punctuation */
.q  { color: #CD5555;} /* quote */
.s  { color: #000000;} /* structure */
.sc { color: #000000;} /* semicolon */
.v  { color: #B452CD;} /* v-string */
.w  { color: #000000;} /* bareword */
-->
</style>
<body style="background-color: white">
<a name="-top-"></a>
<h1>Process_Monitor.pm</h1>

<p><a name="__index__"></a></p>
<!-- INDEX BEGIN -->
<!-- INDEX END -->
<h2>Code Index:</h2>
<!-- BEGIN CODE INDEX --><a name="code-index"></a>
<ul>
<li><a href="#package-Process_Monitor-">package Process_Monitor</a>
<ul>
<li><a href="#new-">new</a></li>
<li><a href="#set_variation-">set_variation</a></li>
<li><a href="#cron_dir-">cron_dir</a></li>
<li><a href="#stats_dir-">stats_dir</a></li>
<li><a href="#set_notify-">set_notify</a></li>
<li><a href="#start_sub_Section-">start_sub_Section</a></li>
<li><a href="#end_sub_Section-">end_sub_Section</a></li>
<li><a href="#start_Section-">start_Section</a></li>
<li><a href="#end_Section-">end_Section</a></li>
<li><a href="#set_Comment-">set_Comment</a></li>
<li><a href="#set_Message-">set_Message</a></li>
<li><a href="#set_Warning-">set_Warning</a></li>
<li><a href="#get_Warnings-">get_Warnings</a></li>
<li><a href="#set_Error-">set_Error</a></li>
<li><a href="#get_Errors-">get_Errors</a></li>
<li><a href="#set_Detail-">set_Detail</a></li>
<li><a href="#succeeded-">succeeded</a></li>
<li><a href="#completed-">completed</a></li>
<li><a href="#DESTROY-">DESTROY</a></li>
<li><a href="#_is_different-">_is_different</a></li>
<li><a href="#_get_last_message-">_get_last_message</a></li>
<li><a href="#_write_to_log-">_write_to_log</a></li>
<li><a href="#_write_to_stats_file-">_write_to_stats_file</a></li>
<li><a href="#create_HTML_page-">create_HTML_page</a></li>
<li><a href="#simplify-">simplify</a></li>
<li><a href="#_log_repeat_message-">_log_repeat_message</a></li>
<li><a href="#_send_notification-">_send_notification</a></li>
<li><a href="#_report_incomplete-">_report_incomplete</a></li>
</ul>
</li>
<li><a href="#EOF-">EOF</a></li>
</ul>
<!-- END CODE INDEX -->

<pre>    open my $LOG, &quot;&gt;&gt;$self-&gt;{log_file}&quot; or die (&quot;Could not open $self-&gt;{log_file}&quot;,
                                                return 0
                                                );</pre>
<pre>
    my $notification_time = &amp;date_time();
    print {$LOG} &quot;Notification sent at: &amp;date_time() \n&quot;;    
    close $LOG;</pre>
<pre>
    print &quot;sending notification...\n&quot;;</pre>
<pre>
    return 1;
}
=cut</pre>

<hr /><pre><a name="package-Process_Monitor-"></a><span class="k">package </span><span class="i">Process_Monitor</span><span class="sc">;</span>

<span class="c">################################################################################</span>
<span class="c">#</span>
<span class="c">#</span>
<span class="c"># This module is used to generate objects that describe scripts/cron jobs and notify the user in case</span>
<span class="c">#   the script crashes.  This method should enable user to record:</span>
<span class="c">#                        - messages</span>
<span class="c">#                        - warnings</span>
<span class="c">#                        - errors</span>
<span class="c">#                        - details (all of the above, plus any additional text information)</span>
<span class="c">#</span>
<span class="c">#</span>
<span class="c">#</span>
<span class="c"># In the background we will also track:</span>
<span class="c">#                                - time of execution</span>
<span class="c">#                                - run time</span>
<span class="c">#                                - number of succesful tests</span>
<span class="c">#</span>
<span class="c"># Information is stored in an object which is written to frozen to a YAML object</span>
<span class="c">#</span>
<span class="c"># Manager.pm thaws the YAML object, creates an HTML table with information for a given script and emails it to aliases stored in this Process Monitor object</span>
<span class="c">#</span>
<span class="c"># &lt;SYNOPSIS&gt; OUT OF DATE!!!</span>
<span class="c">#</span>
<span class="c"># The following lines should be included in any script we want to monitor.</span>
<span class="c">#</span>
<span class="c">#       my $repobj = RGTools::Report-&gt;new(-title=&gt;'Test Write file script',</span>
<span class="c">#                                         -notify=&gt;'aldente@bcgsc.ca',</span>
<span class="c">#                                        );</span>
<span class="c">#</span>
<span class="c">#       $repobj-&gt;set_Message('eg. Creating temp file...');     ## message generated</span>
<span class="c">#       ...</span>
<span class="c">#       $repobj-&gt;set_Warning('eg. No data found');             ## warning generated</span>
<span class="c">#       ...</span>
<span class="c">#       $repobj-&gt;set_Error('eg. Error');</span>
<span class="c">#       ...</span>
<span class="c">#       $repobj-&gt;set_Detail(&quot;Data: $data&quot;);               ## verbose list of details</span>
<span class="c">#       ...</span>
<span class="c">#       foreach my $index (@records) {</span>
<span class="c">#           ...</span>
<span class="c">#           $repobj-&gt;succeeded();                          ## keep track of successful loops</span>
<span class="c">#       }</span>
<span class="c">#</span>
<span class="c">#       if($error) {</span>
<span class="c">#             $repobj-&gt;set_error('disk full',-fatal=&gt;1);   ## generate error (optional fatal flag)</span>
<span class="c">#       }</span>
<span class="c">#      $repobj-&gt;completed();</span>
<span class="c">#</span>
<span class="c">#     Notifying Errors:</span>
<span class="c">#</span>
<span class="c">#</span>
<span class="c"># &lt;/SYNOPSIS&gt;</span>
<span class="c">#</span>
<span class="c">################################################################################</span>

<span class="k">use</span> <span class="w">strict</span><span class="sc">;</span>
<span class="k">use</span> <span class="w">Data::Dumper</span><span class="sc">;</span>
<span class="k">use</span> <span class="w">YAML</span><span class="sc">;</span>

<span class="k">use</span> <span class="w">RGTools::RGIO</span><span class="sc">;</span>
<span class="k">use</span> <span class="w">RGTools::HTML_Table</span><span class="sc">;</span>
<span class="k">use</span> <span class="w">RGTools::Process_Monitor::Manager</span><span class="sc">;</span>
<span class="k">use</span> <span class="w">alDente::Notification</span><span class="sc">;</span>
<span class="k">use</span> <span class="w">alDente::SDB_Defaults</span><span class="sc">;</span>
<span class="k">use</span> <span class="w">SDB::CustomSettings</span><span class="sc">;</span>

<span class="k">use</span> <span class="w">Benchmark</span><span class="sc">;</span>
<span class="k">use</span> <span class="w">vars</span> <span class="q">qw($URL_temp_dir $URL_domain $URL_dir_name)</span><span class="sc">;</span>

<span class="k">my</span> <span class="i">$log_dir</span>  = <span class="i">$crons_log_dir</span><span class="sc">;</span>    <span class="c">### can be overridden with -log-file argument</span>
<span class="k">my</span> <span class="i">$HTML_dir</span> = <span class="q">&quot;dynamic/tmp&quot;</span><span class="sc">;</span>
<span class="k">my</span> <span class="i">$url_file</span><span class="sc">;</span>

<span class="c">###################</span>
<span class="c">### Constructor ###</span>
<span class="c">###################</span>
<a name="new-"></a><span class="k">sub </span><span class="m">new</span> <span class="s">{</span>
<span class="c">###########</span>
    <span class="k">my</span> <span class="i">$this</span> = <span class="k">shift</span><span class="sc">;</span>

    <span class="k">my</span> <span class="i">%args</span> = <span class="i">&amp;filter_input</span><span class="s">(</span>
         \<span class="i">@_</span><span class="cm">,</span>
        -<span class="w">args</span>      <span class="cm">=&gt;</span> <span class="q">'title,notify,cron_dir'</span><span class="cm">,</span>
        -<span class="w">mandatory</span> <span class="cm">=&gt;</span> <span class="q">'title'</span>
    <span class="s">)</span><span class="sc">;</span>

    <span class="c">### Handler to catch the error message the script died with</span>
    <span class="i">$SIG</span>{<span class="w">__DIE__</span>} = <span class="k">sub</span> <span class="s">{</span> <span class="i">$SIG</span>{<span class="w">DIE</span>} = <span class="i">chomp_edge_whitespace</span><span class="s">(</span> <span class="i">$_</span>[<span class="n">0</span>] <span class="s">)</span> <span class="s">}</span><span class="sc">;</span>

    <span class="c">### Initialization</span>
    <span class="k">my</span> <span class="i">$self</span> = <span class="s">{</span><span class="s">}</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$class</span> = <span class="k">ref</span><span class="s">(</span><span class="i">$this</span><span class="s">)</span> || <span class="i">$this</span><span class="sc">;</span>
    <span class="k">bless</span> <span class="i">$self</span><span class="cm">,</span> <span class="i">$class</span><span class="sc">;</span>

    <span class="c">### Benchmarks</span>
    <span class="i">$self</span>-&gt;{<span class="w">Benchmark</span>}{<span class="w">Start</span>} = <span class="i">new</span> <span class="w">Benchmark</span><span class="sc">;</span>

    <span class="i">$self</span>-&gt;{<span class="w">_execution_time</span>} = <span class="k">undef</span><span class="sc">;</span>

    <span class="c">### Timestamps</span>
    <span class="i">$self</span>-&gt;{<span class="w">_start_time</span>} = <span class="i">&amp;date_time</span><span class="s">(</span><span class="s">)</span><span class="sc">;</span>
    <span class="i">$self</span>-&gt;{<span class="w">_end_time</span>}   = <span class="k">undef</span><span class="sc">;</span>

    <span class="c">### Message storage</span>
    <span class="i">$self</span>-&gt;{<span class="w">messages</span>}  = <span class="s">[</span><span class="s">]</span><span class="sc">;</span>
    <span class="i">$self</span>-&gt;{<span class="w">warnings</span>}  = <span class="s">[</span><span class="s">]</span><span class="sc">;</span>
    <span class="i">$self</span>-&gt;{<span class="w">errors</span>}    = <span class="s">[</span><span class="s">]</span><span class="sc">;</span>
    <span class="i">$self</span>-&gt;{<span class="w">details</span>}   = <span class="s">[</span><span class="s">]</span><span class="sc">;</span>
    <span class="i">$self</span>-&gt;{<span class="w">succeeded</span>} = <span class="n">0</span><span class="sc">;</span>
    <span class="i">$self</span>-&gt;{<span class="w">quiet</span>}     = <span class="n">0</span><span class="sc">;</span>
    <span class="i">$self</span>-&gt;{<span class="w">success</span>}   = <span class="n">0</span><span class="sc">;</span>
    <span class="i">$self</span>-&gt;{<span class="w">force</span>}     = <span class="n">0</span><span class="sc">;</span>
    <span class="i">$self</span>-&gt;{<span class="w">url</span>}       = <span class="q">&quot;&quot;</span><span class="sc">;</span>

    <span class="c">### Arguments</span>
    <span class="i">$self</span>-&gt;{<span class="w">title</span>}  = <span class="i">$args</span>{-<span class="w">title</span>}<span class="sc">;</span>
    <span class="i">$self</span>-&gt;{<span class="w">no_log</span>} = <span class="i">$args</span>{-<span class="w">no_log</span>}<span class="sc">;</span>    <span class="c">## optionally suppress logging</span>
    <span class="i">$self</span>-&gt;{<span class="w">notify</span>} = <span class="s">[</span><span class="s">]</span><span class="sc">;</span>

    <span class="c">### Notification list</span>
    <span class="k">if</span> <span class="s">(</span> <span class="i">$args</span>{-<span class="w">notify</span>} <span class="s">)</span> <span class="s">{</span>
        <span class="i">$self</span><span class="i">-&gt;set_notify</span><span class="s">(</span> <span class="i">$args</span>{-<span class="w">notify</span>} <span class="s">)</span> <span class="k">or</span> <span class="k">return</span><span class="sc">;</span>
    <span class="s">}</span>                                    <span class="c"># Notify List</span>

    <span class="i">$self</span>-&gt;{<span class="w">cron_dir</span>}  = <span class="i">$args</span>{-<span class="w">cron_dir</span>}  || <span class="i">cron_dir</span><span class="s">(</span><span class="q">'-6h'</span><span class="s">)</span><span class="sc">;</span>
    <span class="i">$self</span>-&gt;{<span class="w">stats_dir</span>} = <span class="i">$args</span>{-<span class="w">stats_dir</span>} || <span class="i">stats_dir</span><span class="s">(</span><span class="s">)</span><span class="sc">;</span>
    <span class="i">$self</span>-&gt;{<span class="w">frequency</span>} = <span class="i">$args</span>{-<span class="w">frequency</span>}<span class="sc">;</span>
    <span class="i">$self</span>-&gt;{<span class="w">quiet</span>}   = <span class="i">$args</span>{-<span class="w">quiet</span>}   <span class="k">if</span> <span class="k">defined</span> <span class="i">$args</span>{-<span class="w">quiet</span>}<span class="sc">;</span>
    <span class="i">$self</span>-&gt;{<span class="w">verbose</span>} = <span class="i">$args</span>{-<span class="w">verbose</span>} <span class="k">if</span> <span class="k">defined</span> <span class="i">$args</span>{-<span class="w">verbose</span>}<span class="sc">;</span>
    <span class="i">$self</span>-&gt;{<span class="w">temp</span>} = <span class="i">$args</span>{-<span class="w">temp</span>} || <span class="n">0</span><span class="sc">;</span>    <span class="c">## When Process_Monitor is only temporary to allow better Messaging</span>

    <span class="c">### Runtime parameters</span>
    <span class="i">$self</span>-&gt;{<span class="w">script</span>} = <span class="i">$0</span><span class="sc">;</span>
    <span class="i">$self</span>-&gt;{<span class="w">script</span>} =~ <span class="q">s /^(.*)\/(.+?)$/$2/</span><span class="sc">;</span>
    <span class="i">$self</span>-&gt;{<span class="w">script</span>} =~ <span class="q">s/\.pl//g</span><span class="sc">;</span>
    <span class="i">$self</span>-&gt;{<span class="w">pid</span>}     = <span class="i">$$</span><span class="sc">;</span>
    <span class="i">$self</span>-&gt;{<span class="w">_user</span>}   = <span class="i">chomp_edge_whitespace</span><span class="s">(</span><span class="q">`whoami`</span><span class="s">)</span><span class="sc">;</span>
    <span class="i">$self</span>-&gt;{<span class="w">host</span>}    = <span class="i">$ENV</span>{<span class="w">HOSTNAME</span>}<span class="sc">;</span>
    <span class="i">$self</span>-&gt;{<span class="w">testing</span>} = <span class="i">$args</span>{-<span class="w">testing</span>} || <span class="n">0</span><span class="sc">;</span>

    <span class="c">###log_file location</span>
    <span class="i">$self</span>-&gt;{<span class="w">log_file</span>} = <span class="q">&quot;$self-&gt;{cron_dir}/&quot;</span> . <span class="i">$self</span>-&gt;{<span class="w">script</span>} . <span class="q">'.log'</span><span class="sc">;</span>
    <span class="c">###stats_file location</span>
    <span class="i">$self</span>-&gt;{<span class="w">stats_file</span>} = <span class="q">&quot;$self-&gt;{stats_dir}/&quot;</span> . <span class="q">&quot;$self-&gt;{script}&quot;</span> . <span class="q">'_stats.log'</span><span class="sc">;</span>

    <span class="c">#    $url_file = &quot;$self-&gt;{script}&quot; . timestamp() . &quot;.htm&quot;;</span>
    <span class="i">$self</span>-&gt;{<span class="w">url</span>} = <span class="i">$args</span>{-<span class="w">url</span>} || <span class="q">&quot;&quot;</span><span class="sc">;</span>    <span class="c"># &quot;$URL_domain/$URL_dir_name/$HTML_dir/$url_file&quot;;</span>

    <span class="k">if</span> <span class="s">(</span> <span class="i">$args</span>{-<span class="w">variation</span>} <span class="s">)</span> <span class="s">{</span>
        <span class="i">$self</span><span class="i">-&gt;set_variation</span><span class="s">(</span> <span class="i">$args</span>{-<span class="w">variation</span>} <span class="s">)</span><span class="sc">;</span>
    <span class="s">}</span>

    <span class="k">return</span> <span class="i">$self</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">######################</span>
<span class="c"># Sets the log location of the script</span>
<span class="c">######################</span>
<a name="set_variation-"></a><span class="k">sub </span><span class="m">set_variation</span> <span class="s">{</span>
<span class="c">######################</span>
    <span class="k">my</span> <span class="i">$self</span>      = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$variation</span> = <span class="k">shift</span><span class="sc">;</span>

    <span class="k">if</span> <span class="s">(</span><span class="i">$variation</span><span class="s">)</span> <span class="s">{</span>
        <span class="i">$self</span>-&gt;{<span class="w">variation</span>}  = <span class="i">$variation</span><span class="sc">;</span>
        <span class="i">$self</span>-&gt;{<span class="w">log_file</span>}   = <span class="q">&quot;$self-&gt;{cron_dir}/$self-&gt;{script}_${variation}.log&quot;</span><span class="sc">;</span>
        <span class="i">$self</span>-&gt;{<span class="w">stats_file</span>} = <span class="q">&quot;$self-&gt;{stats_dir}/$self-&gt;{script}_${variation}_stats.log&quot;</span><span class="sc">;</span>
    <span class="s">}</span>
<span class="s">}</span>

<span class="c">######################################</span>
<span class="c"># Generate default cron directory</span>
<span class="c"># (creates directory if necessary)</span>
<span class="c">#</span>
<span class="c"># Return: directory name</span>
<span class="c">#############################</span>
<a name="cron_dir-"></a><span class="k">sub </span><span class="m">cron_dir</span> <span class="s">{</span>
<span class="c">#############################</span>
    <span class="k">my</span> <span class="i">$offset</span> = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="s">(</span><span class="i">$date</span><span class="s">)</span> = <span class="k">split</span> <span class="q">' '</span><span class="cm">,</span> <span class="i">&amp;date_time</span><span class="s">(</span><span class="i">$offset</span><span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="s">(</span> <span class="i">$year</span><span class="cm">,</span> <span class="i">$month</span><span class="cm">,</span> <span class="i">$day</span> <span class="s">)</span> = <span class="k">split</span> <span class="q">'-'</span><span class="cm">,</span> <span class="i">$date</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$new_dir</span> = <span class="q">&quot;$log_dir/Process_Monitor/$year/$month/$day&quot;</span><span class="sc">;</span>

    <span class="k">unless</span> <span class="s">(</span> <span class="k">-e</span> <span class="i">$new_dir</span> <span class="s">)</span> <span class="s">{</span>
        <span class="q">`mkdir -m 775 -p &quot;$new_dir&quot;`</span><span class="sc">;</span>
    <span class="s">}</span>

    <span class="k">return</span> <span class="i">$new_dir</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">#Return: directory name</span>
<span class="c">####################</span>
<a name="stats_dir-"></a><span class="k">sub </span><span class="m">stats_dir</span> <span class="s">{</span>
<span class="c">####################</span>
    <span class="k">my</span> <span class="i">$new_dir</span> = <span class="q">&quot;$log_dir/Process_Monitor/stats&quot;</span><span class="sc">;</span>

    <span class="k">unless</span> <span class="s">(</span> <span class="k">-e</span> <span class="i">$new_dir</span> <span class="s">)</span> <span class="s">{</span>
        <span class="q">`mkdir -m 775 -p &quot;$new_dir&quot;`</span><span class="sc">;</span>
    <span class="s">}</span>

    <span class="k">return</span> <span class="i">$new_dir</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">####################</span>
<a name="set_notify-"></a><span class="k">sub </span><span class="m">set_notify</span> <span class="s">{</span>
<span class="c">####################</span>
    <span class="k">my</span> <span class="i">$self</span>       = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$target_ref</span> = <span class="k">shift</span><span class="sc">;</span>

    <span class="k">foreach</span> <span class="k">my</span> <span class="i">$target</span> <span class="s">(</span> <span class="i">Cast_List</span><span class="s">(</span> -<span class="w">list</span> <span class="cm">=&gt;</span> <span class="i">$target_ref</span><span class="cm">,</span> -<span class="w">to</span> <span class="cm">=&gt;</span> <span class="q">'array'</span> <span class="s">)</span> <span class="s">)</span> <span class="s">{</span>
        <span class="k">if</span> <span class="s">(</span> <span class="i">$target</span> =~ <span class="q">/\@/</span> <span class="s">)</span> <span class="s">{</span>
            <span class="k">push</span> <span class="i">@</span>{ <span class="i">$self</span>-&gt;{<span class="w">notify</span>} }<span class="cm">,</span> <span class="i">$target</span><span class="sc">;</span>
        <span class="s">}</span>
        <span class="k">elsif</span> <span class="s">(</span> <span class="i">$target</span> = <span class="k">undef</span> <span class="s">)</span> <span class="s">{</span>
            <span class="k">next</span><span class="sc">;</span>
        <span class="s">}</span>
        <span class="k">else</span> <span class="s">{</span>
            <span class="k">print</span> <span class="q">&quot;*** Invalid address ($target) ***\n&quot;</span><span class="sc">;</span>
        <span class="s">}</span>
    <span class="s">}</span>
    <span class="k">return</span> <span class="i">$self</span>-&gt;{<span class="w">notify</span>}<span class="sc">;</span>
<span class="s">}</span>

<span class="c">########################</span>
<a name="start_sub_Section-"></a><span class="k">sub </span><span class="m">start_sub_Section</span> <span class="s">{</span>
<span class="c">########################</span>
    <span class="k">my</span> <span class="i">$self</span> = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">return</span> <span class="i">$self</span><span class="i">-&gt;start_Section</span><span class="s">(</span> <span class="i">@_</span><span class="cm">,</span> -<span class="w">quiet</span> <span class="cm">=&gt;</span> <span class="n">1</span> <span class="s">)</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">########################</span>
<a name="end_sub_Section-"></a><span class="k">sub </span><span class="m">end_sub_Section</span> <span class="s">{</span>
<span class="c">########################</span>
    <span class="k">my</span> <span class="i">$self</span> = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">return</span> <span class="i">$self</span><span class="i">-&gt;end_Section</span><span class="s">(</span> <span class="i">@_</span><span class="cm">,</span> -<span class="w">quiet</span> <span class="cm">=&gt;</span> <span class="n">1</span> <span class="s">)</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">#</span>
<span class="c"># generates standard output header to enable easier parsing through logs</span>
<span class="c">#</span>
<span class="c">#</span>
<span class="c">####################</span>
<a name="start_Section-"></a><span class="k">sub </span><span class="m">start_Section</span> <span class="s">{</span>
<span class="c">####################</span>
    <span class="k">my</span> <span class="i">$self</span>    = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">%args</span>    = <span class="i">filter_input</span><span class="s">(</span> \<span class="i">@_</span><span class="cm">,</span> -<span class="w">args</span> <span class="cm">=&gt;</span> <span class="q">'section'</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$section</span> = <span class="i">$args</span>{-<span class="w">section</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$quiet</span>   = <span class="i">$args</span>{-<span class="w">quiet</span>}<span class="sc">;</span>

    <span class="k">my</span> <span class="i">$highlight</span> = !<span class="i">$quiet</span><span class="sc">;</span>    <span class="c">## larger sections with borders and end</span>

<span class="c">##    print &quot;Highlight = $highlight.&quot;;</span>

    <span class="i">$self</span>-&gt;{<span class="w">section_count</span>}++<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$header</span> = <span class="q">&quot;\n&quot;</span><span class="sc">;</span>

    <span class="k">if</span> <span class="s">(</span><span class="i">$highlight</span><span class="s">)</span> <span class="s">{</span> <span class="i">$header</span> .= <span class="q">&quot;*&quot;</span> x <span class="n">100</span> . <span class="q">&quot;\n&quot;</span> <span class="s">}</span>

    <span class="i">$header</span> .= <span class="q">&quot;* &quot;</span><span class="sc">;</span>
    <span class="k">foreach</span> <span class="k">my</span> <span class="i">$level</span> <span class="s">(</span> <span class="n">2</span> .. <span class="i">$self</span>-&gt;{<span class="w">section_count</span>} <span class="s">)</span> <span class="s">{</span> <span class="i">$header</span> .= <span class="q">&quot;. &quot;</span> <span class="s">}</span>
    <span class="i">$header</span> .= <span class="q">&quot;&lt;$section&gt;\t&quot;</span> . <span class="i">date_time</span><span class="s">(</span><span class="s">)</span> . <span class="q">&quot;\n&quot;</span><span class="sc">;</span>

    <span class="k">if</span> <span class="s">(</span><span class="i">$highlight</span><span class="s">)</span> <span class="s">{</span> <span class="i">$header</span> .= <span class="q">&quot;*&quot;</span> x <span class="n">100</span> . <span class="q">&quot;\n&quot;</span> <span class="s">}</span>

    <span class="i">$self</span>-&gt;{<span class="w">section</span>}{<span class="i">$section</span>}{<span class="w">warnings</span>} = <span class="s">[</span><span class="s">]</span><span class="sc">;</span>
    <span class="i">$self</span>-&gt;{<span class="w">section</span>}{<span class="i">$section</span>}{<span class="w">errors</span>}   = <span class="s">[</span><span class="s">]</span><span class="sc">;</span>

    <span class="k">print</span> <span class="i">$header</span><span class="sc">;</span>
    <span class="k">return</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">#</span>
<span class="c"># generates standard output header to enable easier parsing through logs</span>
<span class="c">#</span>
<span class="c"># adds error &amp; warning count indicators for each section</span>
<span class="c">####################</span>
<a name="end_Section-"></a><span class="k">sub </span><span class="m">end_Section</span> <span class="s">{</span>
<span class="c">####################</span>
    <span class="k">my</span> <span class="i">$self</span>    = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">%args</span>    = <span class="i">filter_input</span><span class="s">(</span> \<span class="i">@_</span><span class="cm">,</span> -<span class="w">args</span> <span class="cm">=&gt;</span> <span class="q">'section'</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$section</span> = <span class="i">$args</span>{-<span class="w">section</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$quiet</span>   = <span class="i">$args</span>{-<span class="w">quiet</span>}<span class="sc">;</span>

    <span class="k">my</span> <span class="i">$highlight</span> = !<span class="i">$quiet</span><span class="sc">;</span>    <span class="c">## larger sections with borders and end</span>

    <span class="k">if</span> <span class="s">(</span> !<span class="i">$highlight</span> <span class="s">)</span> <span class="s">{</span> <span class="i">$self</span>-&gt;{<span class="w">section_count</span>}--<span class="sc">;</span> <span class="k">return</span><span class="sc">;</span> <span class="s">}</span>    <span class="c">## no end block for quiet sections (sub_sections)</span>

    <span class="k">my</span> <span class="i">$header</span><span class="sc">;</span>
    <span class="i">$header</span> .= <span class="q">&quot;*&quot;</span> x <span class="n">100</span> . <span class="q">&quot;\n&quot;</span><span class="sc">;</span>
    <span class="i">$header</span> .= <span class="q">&quot;* &quot;</span><span class="sc">;</span>
    <span class="k">foreach</span> <span class="k">my</span> <span class="i">$level</span> <span class="s">(</span> <span class="n">2</span> .. <span class="i">$self</span>-&gt;{<span class="w">section_count</span>} <span class="s">)</span> <span class="s">{</span> <span class="i">$header</span> .= <span class="q">&quot;. &quot;</span> <span class="s">}</span>
    <span class="i">$header</span> .= <span class="q">&quot;&lt;/$section&gt;\t&quot;</span> . <span class="i">date_time</span><span class="s">(</span><span class="s">)</span> . <span class="q">&quot;\n&quot;</span><span class="sc">;</span>

    <span class="k">foreach</span> <span class="k">my</span> <span class="i">$type</span> <span class="s">(</span> <span class="q">'errors'</span><span class="cm">,</span> <span class="q">'warnings'</span> <span class="s">)</span> <span class="s">{</span>
        <span class="i">$self</span>-&gt;{<span class="w">section</span>}{<span class="i">$section</span>}{<span class="i">$type</span>} = <span class="s">[</span><span class="s">]</span> <span class="k">if</span> <span class="s">(</span> !<span class="s">(</span> <span class="k">defined</span> <span class="i">$self</span>-&gt;{<span class="w">section</span>}{<span class="i">$section</span>}{<span class="i">$type</span>} <span class="s">)</span> <span class="s">)</span><span class="sc">;</span>
    <span class="s">}</span>

    <span class="k">if</span> <span class="s">(</span><span class="i">$highlight</span><span class="s">)</span> <span class="s">{</span>
        <span class="i">$header</span> .= <span class="q">'* '</span><span class="sc">;</span>
        <span class="i">$header</span> .= <span class="k">int</span><span class="s">(</span> <span class="i">@</span>{ <span class="i">$self</span>-&gt;{<span class="w">section</span>}{<span class="i">$section</span>}{<span class="w">errors</span>} } <span class="s">)</span> . <span class="q">&quot; Errors;\t&quot;</span><span class="sc">;</span>
        <span class="i">$header</span> .= <span class="k">int</span><span class="s">(</span> <span class="i">@</span>{ <span class="i">$self</span>-&gt;{<span class="w">section</span>}{<span class="i">$section</span>}{<span class="w">warnings</span>} } <span class="s">)</span> . <span class="q">&quot; Warnings;\n&quot;</span><span class="sc">;</span>
        <span class="i">$header</span> .= <span class="q">&quot;*&quot;</span> x <span class="n">100</span> . <span class="q">&quot;\n&quot;</span><span class="sc">;</span>
    <span class="s">}</span>

    <span class="k">print</span> <span class="i">$header</span><span class="sc">;</span>
    <span class="i">$self</span>-&gt;{<span class="w">section_count</span>}--<span class="sc">;</span>

    <span class="k">return</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">####################</span>
<a name="set_Comment-"></a><span class="k">sub </span><span class="m">set_Comment</span> <span class="s">{</span>
<span class="c">####################</span>
    <span class="k">my</span> <span class="i">$self</span>    = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$comment</span> = <span class="k">shift</span><span class="sc">;</span>

    <span class="k">unless</span> <span class="s">(</span> <span class="i">$self</span>-&gt;{<span class="w">quiet</span>} <span class="s">)</span> <span class="s">{</span> <span class="k">print</span> <span class="q">&quot;# $comment\n&quot;</span><span class="sc">;</span> <span class="s">}</span>

    <span class="k">return</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">####################</span>
<a name="set_Message-"></a><span class="k">sub </span><span class="m">set_Message</span> <span class="s">{</span>
<span class="c">####################</span>
    <span class="k">my</span> <span class="i">$self</span>    = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$message</span> = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$now</span>     = <span class="i">&amp;date_time</span><span class="s">(</span><span class="s">)</span><span class="sc">;</span>
    <span class="k">push</span> <span class="i">@</span>{ <span class="i">$self</span>-&gt;{<span class="w">messages</span>} }<span class="cm">,</span> <span class="i">$message</span><span class="sc">;</span>
    <span class="k">push</span> <span class="i">@</span>{ <span class="i">$self</span>-&gt;{<span class="w">details</span>} }<span class="cm">,</span>  <span class="i">$message</span><span class="sc">;</span>

    <span class="k">unless</span> <span class="s">(</span> <span class="i">$self</span>-&gt;{<span class="w">quiet</span>} <span class="s">)</span> <span class="s">{</span> <span class="k">print</span> <span class="q">&quot;$message\n&quot;</span><span class="sc">;</span> <span class="s">}</span>

    <span class="k">return</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">####################</span>
<a name="set_Warning-"></a><span class="k">sub </span><span class="m">set_Warning</span> <span class="s">{</span>
<span class="c">####################</span>
    <span class="k">my</span> <span class="i">$self</span>    = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$warning</span> = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$now</span>     = <span class="i">&amp;date_time</span><span class="s">(</span><span class="s">)</span><span class="sc">;</span>
    <span class="k">push</span> <span class="i">@</span>{ <span class="i">$self</span>-&gt;{<span class="w">warnings</span>} }<span class="cm">,</span> <span class="i">$warning</span><span class="sc">;</span>
    <span class="k">push</span> <span class="i">@</span>{ <span class="i">$self</span>-&gt;{<span class="w">details</span>} }<span class="cm">,</span>  <span class="i">$warning</span><span class="sc">;</span>

    <span class="k">unless</span> <span class="s">(</span> <span class="i">$self</span>-&gt;{<span class="w">quiet</span>} <span class="s">)</span> <span class="s">{</span> <span class="k">print</span> <span class="q">&quot;!? $warning\n&quot;</span><span class="sc">;</span> <span class="s">}</span>
    <span class="k">return</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">#################</span>
<a name="get_Warnings-"></a><span class="k">sub </span><span class="m">get_Warnings</span> <span class="s">{</span>
<span class="c">#################</span>
    <span class="k">my</span> <span class="i">$self</span>    = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$section</span> = <span class="k">shift</span><span class="sc">;</span>

    <span class="k">my</span> <span class="i">$warnings</span><span class="sc">;</span>
    <span class="k">if</span> <span class="s">(</span><span class="i">$section</span><span class="s">)</span> <span class="s">{</span>
        <span class="k">if</span> <span class="s">(</span> <span class="k">defined</span> <span class="i">$self</span>-&gt;{<span class="w">section</span>}{<span class="i">$section</span>}{<span class="w">warnings</span>} <span class="s">)</span> <span class="s">{</span>
            <span class="i">$warnings</span> = <span class="i">$self</span>-&gt;{<span class="w">section</span>}{<span class="i">$section</span>}{<span class="w">warnings</span>}<span class="sc">;</span>
        <span class="s">}</span>
    <span class="s">}</span>
    <span class="k">else</span> <span class="s">{</span>
        <span class="i">$warnings</span> = <span class="i">$self</span>-&gt;{<span class="w">warnings</span>}<span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">return</span> <span class="i">$warnings</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">##################</span>
<a name="set_Error-"></a><span class="k">sub </span><span class="m">set_Error</span> <span class="s">{</span>
<span class="c">##################</span>
    <span class="c"># need to call _send_notification() for error reporting</span>

    <span class="k">my</span> <span class="i">$self</span>  = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$error</span> = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$fatal</span> = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$now</span>   = <span class="i">&amp;date_time</span><span class="s">(</span><span class="s">)</span><span class="sc">;</span>
    <span class="k">push</span> <span class="i">@</span>{ <span class="i">$self</span>-&gt;{<span class="w">errors</span>} }<span class="cm">,</span>  <span class="i">$error</span><span class="sc">;</span>
    <span class="k">push</span> <span class="i">@</span>{ <span class="i">$self</span>-&gt;{<span class="w">details</span>} }<span class="cm">,</span> <span class="i">$error</span><span class="sc">;</span>

    <span class="k">unless</span> <span class="s">(</span> <span class="i">$self</span>-&gt;{<span class="w">quiet</span>} <span class="s">)</span> <span class="s">{</span> <span class="k">print</span> <span class="q">&quot;!! $error\n&quot;</span><span class="sc">;</span> <span class="s">}</span>

    <span class="k">return</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">#################</span>
<a name="get_Errors-"></a><span class="k">sub </span><span class="m">get_Errors</span> <span class="s">{</span>
<span class="c">#################</span>
    <span class="k">my</span> <span class="i">$self</span>    = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$section</span> = <span class="k">shift</span><span class="sc">;</span>

    <span class="k">my</span> <span class="i">$errors</span><span class="sc">;</span>
    <span class="k">if</span> <span class="s">(</span><span class="i">$section</span><span class="s">)</span> <span class="s">{</span>
        <span class="k">if</span> <span class="s">(</span> <span class="k">defined</span> <span class="i">$self</span>-&gt;{<span class="w">section</span>}{<span class="i">$section</span>}{<span class="w">errors</span>} <span class="s">)</span> <span class="s">{</span>
            <span class="i">$errors</span> = <span class="i">$self</span>-&gt;{<span class="w">section</span>}{<span class="i">$section</span>}{<span class="w">errors</span>}<span class="sc">;</span>
        <span class="s">}</span>
    <span class="s">}</span>
    <span class="k">else</span> <span class="s">{</span>
        <span class="i">$errors</span> = <span class="i">$self</span>-&gt;{<span class="w">errors</span>}<span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">return</span> <span class="i">$errors</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">##################</span>
<a name="set_Detail-"></a><span class="k">sub </span><span class="m">set_Detail</span> <span class="s">{</span>
<span class="c">##################</span>
    <span class="k">my</span> <span class="i">$self</span>   = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$detail</span> = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$now</span>    = <span class="i">&amp;date_time</span><span class="s">(</span><span class="s">)</span><span class="sc">;</span>

    <span class="k">push</span> <span class="i">@</span>{ <span class="i">$self</span>-&gt;{<span class="w">details</span>} }<span class="cm">,</span> <span class="i">$detail</span><span class="sc">;</span>

    <span class="k">if</span> <span class="s">(</span> <span class="i">$self</span>-&gt;{<span class="w">verbose</span>} <span class="s">)</span> <span class="s">{</span> <span class="k">print</span> <span class="q">&quot;$detail\n&quot;</span> <span class="s">}</span>
<span class="s">}</span>

<span class="c">#####################</span>
<span class="c">#</span>
<span class="c"># A method that counts total number of successful actions as defined by user</span>
<span class="c">#</span>
<span class="c">#####################</span>
<a name="succeeded-"></a><span class="k">sub </span><span class="m">succeeded</span> <span class="s">{</span>
<span class="c">#####################</span>
    <span class="k">my</span> <span class="i">$self</span> = <span class="k">shift</span><span class="sc">;</span>
    <span class="i">$self</span>-&gt;{<span class="w">succeeded</span>}++<span class="sc">;</span>
    <span class="k">return</span> <span class="i">$self</span>-&gt;{<span class="w">succeeded</span>}<span class="sc">;</span>
<span class="s">}</span>

<span class="c">#####################</span>
<span class="c">#</span>
<span class="c"># A method that MUST be executed at the end of a script, otherwise the script is assumed to be crashing or not exiting properly</span>
<span class="c">#####################</span>
<a name="completed-"></a><span class="k">sub </span><span class="m">completed</span> <span class="s">{</span>
<span class="c">#####################</span>
    <span class="k">my</span> <span class="i">$self</span> = <span class="k">shift</span><span class="sc">;</span>
    <span class="i">$self</span><span class="i">-&gt;set_Message</span><span class="s">(</span> <span class="q">'Script completed successfully '</span> . <span class="i">date_time</span><span class="s">(</span><span class="s">)</span> <span class="s">)</span><span class="sc">;</span>
    <span class="i">$self</span>-&gt;{<span class="w">success</span>} = <span class="n">1</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">#############################</span>
<span class="c"># Destructor</span>
<span class="c">#</span>
<span class="c"># Make sure the object finalized before quiting</span>
<span class="c"># If not, notify the user right away about script not exiting properly</span>
<span class="c">##################</span>
<a name="DESTROY-"></a><span class="k">sub </span><span class="m">DESTROY</span> <span class="s">{</span>
<span class="c">##################</span>
    <span class="k">my</span> <span class="i">$self</span>    = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$testing</span> = <span class="i">$self</span>-&gt;{<span class="w">testing</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$temp</span>    = <span class="i">$self</span>-&gt;{<span class="w">temp</span>}<span class="sc">;</span>
    <span class="i">$self</span>-&gt;{<span class="w">_end_time</span>}       = <span class="i">&amp;date_time</span><span class="s">(</span><span class="s">)</span><span class="sc">;</span>
    <span class="i">$self</span>-&gt;{<span class="w">Benchmark</span>}{<span class="w">End</span>}  = <span class="i">new</span> <span class="w">Benchmark</span><span class="sc">;</span>
    <span class="i">$self</span>-&gt;{<span class="w">_execution_time</span>} = <span class="i">timestr</span><span class="s">(</span> <span class="i">timediff</span><span class="s">(</span> <span class="i">$self</span>-&gt;{<span class="w">Benchmark</span>}{<span class="w">End</span>}<span class="cm">,</span> <span class="i">$self</span>-&gt;{<span class="w">Benchmark</span>}{<span class="w">Start</span>} <span class="s">)</span> <span class="s">)</span><span class="sc">;</span>

    <span class="k">unless</span> <span class="s">(</span> <span class="i">$self</span>-&gt;{<span class="w">success</span>} || <span class="i">$temp</span> <span class="s">)</span> <span class="s">{</span>
        <span class="i">$self</span><span class="i">-&gt;set_Error</span><span class="s">(</span> <span class="q">&quot;Script ended unexpectedly\n&quot;</span> . <span class="i">$SIG</span>{<span class="w">DIE</span>} <span class="s">)</span><span class="sc">;</span>
    <span class="s">}</span>

    <span class="k">if</span> <span class="s">(</span> <span class="i">$self</span>-&gt;{<span class="w">force</span>} || <span class="i">$self</span><span class="i">-&gt;_is_different</span> <span class="s">)</span> <span class="s">{</span>
        <span class="i">$self</span><span class="i">-&gt;_write_to_log</span><span class="s">(</span><span class="s">)</span> <span class="k">unless</span> <span class="i">$testing</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">else</span> <span class="s">{</span>
        <span class="i">$self</span><span class="i">-&gt;_log_repeat_message</span><span class="s">(</span><span class="s">)</span> <span class="k">unless</span> <span class="i">$testing</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">unless</span> <span class="s">(</span><span class="i">$testing</span><span class="s">)</span> <span class="s">{</span>
        <span class="i">$self</span><span class="i">-&gt;_write_to_stats_file</span><span class="s">(</span><span class="s">)</span><span class="sc">;</span>
        <span class="k">if</span> <span class="s">(</span> <span class="k">exists</span> <span class="i">$self</span>-&gt;{<span class="w">errors</span>}[<span class="n">0</span>] <span class="s">)</span> <span class="s">{</span>
            <span class="i">$self</span><span class="i">-&gt;_send_notification</span><span class="s">(</span><span class="s">)</span><span class="sc">;</span>
        <span class="s">}</span>
    <span class="s">}</span>

    <span class="k">return</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">#######################</span>
<span class="c">### Private Methods ###</span>
<span class="c">#######################</span>

<span class="c"># Return: 1 if current object differs from most recent object (based upon keys below)</span>
<span class="c">##########################</span>
<a name="_is_different-"></a><span class="k">sub </span><span class="m">_is_different</span> <span class="s">{</span>
<span class="c">##########################</span>
    <span class="k">my</span> <span class="i">$self</span> = <span class="k">shift</span><span class="sc">;</span>

    <span class="k">my</span> <span class="i">@keys</span>         = <span class="q">qw(warnings errors messages succeeded success)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$last_message</span> = <span class="i">$self</span><span class="i">-&gt;_get_last_message</span><span class="s">(</span><span class="s">)</span><span class="sc">;</span>

    <span class="k">unless</span> <span class="s">(</span><span class="i">$last_message</span><span class="s">)</span> <span class="s">{</span> <span class="k">return</span> <span class="n">1</span> <span class="s">}</span>
    <span class="k">foreach</span> <span class="k">my</span> <span class="i">$key</span> <span class="s">(</span><span class="i">@keys</span><span class="s">)</span> <span class="s">{</span>
        <span class="k">unless</span> <span class="s">(</span> <span class="i">compare_objects</span><span class="s">(</span> <span class="i">$self</span>-&gt;{<span class="i">$key</span>}<span class="cm">,</span> <span class="i">$last_message</span>-&gt;{<span class="i">$key</span>} <span class="s">)</span> <span class="s">)</span> <span class="s">{</span>
            <span class="k">return</span> <span class="n">1</span><span class="sc">;</span>
        <span class="s">}</span>
    <span class="s">}</span>
    <span class="k">return</span> <span class="n">0</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">###################</span>
<a name="_get_last_message-"></a><span class="k">sub </span><span class="m">_get_last_message</span> <span class="s">{</span>
<span class="c">###################</span>

    <span class="k">my</span> <span class="i">$self</span> = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">open</span> <span class="k">my</span> <span class="i">$LOG</span><span class="cm">,</span> <span class="q">&quot;$self-&gt;{log_file}&quot;</span> <span class="k">or</span> <span class="k">return</span><span class="sc">;</span>    <span class="c"># no log file found</span>

    <span class="k">my</span> <span class="i">$check_line</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$log_instance</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$yaml_instance</span><span class="sc">;</span>

    <span class="k">while</span> <span class="s">(</span> <span class="i">$check_line</span> = <span class="q">&lt;$LOG&gt;</span> <span class="s">)</span> <span class="s">{</span>
        <span class="k">if</span> <span class="s">(</span> <span class="i">$check_line</span> =~ <span class="q">/^Repeat Message/</span> <span class="s">)</span> <span class="s">{</span>
            <span class="k">next</span><span class="sc">;</span>
        <span class="s">}</span>
        <span class="k">elsif</span> <span class="s">(</span> <span class="i">$check_line</span> =~ <span class="q">/(\*)START(\*)/</span> <span class="s">)</span> <span class="s">{</span>
            <span class="i">$log_instance</span> = <span class="q">''</span><span class="sc">;</span>
            <span class="k">next</span><span class="sc">;</span>
        <span class="s">}</span>
        <span class="k">elsif</span> <span class="s">(</span> <span class="i">$check_line</span> =~ <span class="q">/(\*)END(\*)/</span> <span class="s">)</span> <span class="s">{</span>
        <span class="s">}</span>
        <span class="k">else</span> <span class="s">{</span>
            <span class="i">$log_instance</span> .= <span class="i">$check_line</span><span class="sc">;</span>
            <span class="k">next</span><span class="sc">;</span>
        <span class="s">}</span>
    <span class="s">}</span>

    <span class="i">$yaml_instance</span> = <span class="i">YAML::thaw</span><span class="s">(</span><span class="i">$log_instance</span><span class="s">)</span><span class="sc">;</span>

    <span class="k">close</span> <span class="i">$LOG</span><span class="sc">;</span>
    <span class="k">return</span> <span class="i">$yaml_instance</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">###################</span>
<span class="c">#</span>
<span class="c"># Saves the object in YAML format in Cron directory</span>
<span class="c">#</span>
<span class="c">###################</span>
<a name="_write_to_log-"></a><span class="k">sub </span><span class="m">_write_to_log</span> <span class="s">{</span>
<span class="c">###################</span>
    <span class="k">my</span> <span class="i">$self</span>   = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$brief</span>  = <span class="i">simplify</span><span class="s">(</span><span class="i">$self</span><span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$object</span> = <span class="i">YAML::freeze</span><span class="s">(</span><span class="i">$brief</span><span class="s">)</span><span class="sc">;</span>

    <span class="k">if</span> <span class="s">(</span> <span class="i">$self</span>-&gt;{<span class="w">no_log</span>} <span class="s">)</span> <span class="s">{</span> <span class="k">return</span> <span class="n">1</span> <span class="s">}</span>
    <span class="k">open</span> <span class="k">my</span> <span class="i">$LOG</span><span class="cm">,</span> <span class="q">&quot;&gt;&gt;$self-&gt;{log_file}&quot;</span> <span class="k">or</span> <span class="k">die</span><span class="s">(</span><span class="q">&quot;Could not open $self-&gt;{log_file}&quot;</span><span class="s">)</span><span class="sc">;</span>
    <span class="i">try_system_command</span><span class="s">(</span><span class="q">&quot;chmod 664 $self-&gt;{log_file}&quot;</span><span class="s">)</span><span class="sc">;</span>
    <span class="k">print</span> <span class="s">{</span><span class="i">$LOG</span><span class="s">}</span> <span class="q">&quot;**START**\n&quot;</span><span class="sc">;</span>
    <span class="k">print</span> <span class="s">{</span><span class="i">$LOG</span><span class="s">}</span> <span class="i">$object</span><span class="sc">;</span>
    <span class="k">print</span> <span class="s">{</span><span class="i">$LOG</span><span class="s">}</span> <span class="q">&quot;**END**\n&quot;</span><span class="sc">;</span>
    <span class="k">close</span> <span class="i">$LOG</span><span class="sc">;</span>
    <span class="k">print</span> <span class="q">&quot;writing to log file...\n&quot;</span><span class="sc">;</span>
    <span class="k">print</span> <span class="q">&quot;log file: $self-&gt;{log_file}\n&quot;</span><span class="sc">;</span>
    <span class="k">return</span> <span class="n">1</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">#################</span>
<span class="c">#</span>
<span class="c">#$self-&gt;_write_to_stats_file();</span>
<span class="c">###########################</span>
<a name="_write_to_stats_file-"></a><span class="k">sub </span><span class="m">_write_to_stats_file</span> <span class="s">{</span>
<span class="c">###########################</span>
    <span class="k">my</span> <span class="i">$self</span> = <span class="k">shift</span><span class="sc">;</span>

    <span class="i">$self</span><span class="i">-&gt;set_Message</span><span class="s">(</span><span class="q">&quot;adding entry to stats file: $self-&gt;{stats_file}&quot;</span><span class="s">)</span><span class="sc">;</span>

    <span class="k">if</span> <span class="s">(</span> <span class="i">$self</span>-&gt;{<span class="w">no_log</span>} <span class="s">)</span> <span class="s">{</span> <span class="k">return</span> <span class="n">1</span> <span class="s">}</span>

    <span class="k">open</span> <span class="k">my</span> <span class="i">$STATS</span><span class="cm">,</span> <span class="q">&quot;&gt;&gt;$self-&gt;{stats_file}&quot;</span> <span class="k">or</span> <span class="k">die</span> <span class="q">&quot;Could not open stats file: $self-&gt;{stats_file}\nError: $!&quot;</span><span class="sc">;</span>
    <span class="k">if</span> <span class="s">(</span> !<span class="s">(</span> <span class="w">try_system_command</span> <span class="q">&quot;grep 'Time' $self-&gt;{stats_file}&quot;</span> <span class="s">)</span> <span class="s">)</span> <span class="s">{</span>
        <span class="k">print</span> <span class="s">{</span><span class="i">$STATS</span><span class="s">}</span> <span class="q">&quot;Date\tTime\tErrors\tWarnings\n&quot;</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">my</span> <span class="s">(</span> <span class="i">$date</span><span class="cm">,</span> <span class="i">$end_time</span> <span class="s">)</span> = <span class="k">split</span> <span class="q">'\s'</span><span class="cm">,</span> <span class="i">$self</span>-&gt;{<span class="w">_end_time</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$newline</span> = <span class="q">&quot;$date\t$end_time\t&quot;</span> . <span class="k">scalar</span><span class="s">(</span> <span class="i">@</span>{ <span class="i">$self</span>-&gt;{<span class="w">errors</span>} } <span class="s">)</span> . <span class="q">&quot;\t&quot;</span> . <span class="k">scalar</span><span class="s">(</span> <span class="i">@</span>{ <span class="i">$self</span>-&gt;{<span class="w">warnings</span>} } <span class="s">)</span> . <span class="q">&quot;\n&quot;</span><span class="sc">;</span>
    <span class="k">if</span> <span class="s">(</span> !<span class="s">(</span> <span class="w">try_system_command</span> <span class="q">&quot;grep '$date' $self-&gt;{stats_file}&quot;</span> <span class="s">)</span> <span class="s">)</span> <span class="s">{</span>
        <span class="k">print</span> <span class="s">{</span><span class="i">$STATS</span><span class="s">}</span> <span class="q">&quot;$newline&quot;</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">else</span> <span class="s">{</span>
        <span class="k">my</span> <span class="i">$success</span> = <span class="i">replace_last_line</span><span class="s">(</span> -<span class="w">file</span> <span class="cm">=&gt;</span> <span class="q">&quot;$self-&gt;{stats_file}&quot;</span><span class="cm">,</span> -<span class="w">newline</span> <span class="cm">=&gt;</span> <span class="q">&quot;$newline&quot;</span> <span class="s">)</span><span class="sc">;</span>
        <span class="k">if</span> <span class="s">(</span> !<span class="i">$success</span> <span class="s">)</span> <span class="s">{</span>
            <span class="i">$self</span><span class="i">-&gt;set_Message</span><span class="s">(</span><span class="q">&quot;Warning: last line of file $self-&gt;{stats_file} was not replaced with desired alternative; Stats file is not up to date&quot;</span><span class="s">)</span><span class="sc">;</span>
        <span class="s">}</span>
        <span class="k">else</span> <span class="s">{</span>
            <span class="i">$self</span><span class="i">-&gt;set_Message</span><span class="s">(</span><span class="q">&quot;Replaced previous entry (for today) in stats file&quot;</span><span class="s">)</span><span class="sc">;</span>
        <span class="s">}</span>
    <span class="s">}</span>
    <span class="k">return</span> <span class="n">1</span><span class="sc">;</span>

<span class="s">}</span>

<span class="c">#####################</span>
<a name="create_HTML_page-"></a><span class="k">sub </span><span class="m">create_HTML_page</span> <span class="s">{</span>
<span class="c">#####################</span>
    <span class="k">my</span> <span class="i">$self</span>    = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$content</span> = <span class="k">shift</span><span class="sc">;</span>

    <span class="i">$url_file</span> = <span class="q">&quot;$self-&gt;{script}&quot;</span> . <span class="i">timestamp</span><span class="s">(</span><span class="s">)</span> . <span class="q">&quot;.htm&quot;</span><span class="sc">;</span>
    <span class="k">if</span> <span class="s">(</span> !<span class="i">$self</span>-&gt;{<span class="w">url</span>} <span class="s">)</span> <span class="s">{</span>
        <span class="i">$self</span>-&gt;{<span class="w">url</span>} = <span class="q">&quot;$URL_domain/$URL_dir_name/$HTML_dir/$url_file&quot;</span><span class="sc">;</span>
    <span class="s">}</span>

    <span class="k">my</span> <span class="i">$HTML_location</span> = <span class="q">&quot;$URL_temp_dir/$url_file&quot;</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$HTML_file</span><span class="sc">;</span>

    <span class="k">open</span> <span class="i">$HTML_file</span><span class="cm">,</span> <span class="q">&quot;&gt;&gt;$HTML_location&quot;</span> <span class="k">or</span> <span class="k">die</span><span class="s">(</span><span class="q">&quot;Could not open $HTML_location&quot;</span><span class="s">)</span><span class="sc">;</span>
    <span class="k">print</span> <span class="s">{</span><span class="i">$HTML_file</span><span class="s">}</span> <span class="i">$content</span><span class="sc">;</span>
    <span class="k">close</span> <span class="i">$HTML_file</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">#################</span>
<a name="simplify-"></a><span class="k">sub </span><span class="m">simplify</span> <span class="s">{</span>
<span class="c">#################</span>
    <span class="k">my</span> <span class="i">$self</span> = <span class="k">shift</span><span class="sc">;</span>

    <span class="k">my</span> <span class="i">%simplified</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">@keys</span> = <span class="q">qw(script _start_time _end_time _execution_time host _user messages warnings errors details succeeded success notify url variation)</span><span class="sc">;</span>

    <span class="k">foreach</span> <span class="k">my</span> <span class="i">$key</span> <span class="s">(</span><span class="i">@keys</span><span class="s">)</span> <span class="s">{</span>
        <span class="i">$simplified</span>{<span class="i">$key</span>} = <span class="i">$self</span>-&gt;{<span class="i">$key</span>}<span class="sc">;</span>
    <span class="s">}</span>

    <span class="k">return</span> \<span class="i">%simplified</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">#####################</span>
<a name="_log_repeat_message-"></a><span class="k">sub </span><span class="m">_log_repeat_message</span> <span class="s">{</span>
<span class="c">#####################</span>
    <span class="k">my</span> <span class="i">$self</span> = <span class="k">shift</span><span class="sc">;</span>

    <span class="k">if</span> <span class="s">(</span> <span class="i">$self</span>-&gt;{<span class="w">no_log</span>} <span class="s">)</span> <span class="s">{</span> <span class="k">return</span> <span class="n">1</span> <span class="s">}</span>

    <span class="k">open</span> <span class="k">my</span> <span class="i">$LOG</span><span class="cm">,</span> <span class="q">&quot;&gt;&gt;$self-&gt;{log_file}&quot;</span> <span class="k">or</span> <span class="k">die</span><span class="s">(</span><span class="q">&quot;Could not open $self-&gt;{log_file}&quot;</span><span class="s">)</span><span class="sc">;</span>
    <span class="k">print</span> <span class="s">{</span><span class="i">$LOG</span><span class="s">}</span> <span class="q">&quot;Repeat Message Logged At: $self-&gt;{_end_time} \n&quot;</span><span class="sc">;</span>
    <span class="k">close</span> <span class="i">$LOG</span><span class="sc">;</span>
    <span class="k">print</span> <span class="q">&quot;writing to log file...\n&quot;</span><span class="sc">;</span>
    <span class="k">print</span> <span class="q">&quot;log file: $self-&gt;{log_file}\n&quot;</span><span class="sc">;</span>
    <span class="k">return</span> <span class="n">1</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">########################</span>
<span class="c">#</span>
<span class="c">#sends notification of error</span>

<span class="c">########################</span>
<a name="_send_notification-"></a><span class="k">sub </span><span class="m">_send_notification</span> <span class="s">{</span>
<span class="c">########################</span>
    <span class="c"># need to send notification of error</span>
    <span class="k">my</span> <span class="i">$self</span> = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">return</span> <span class="k">if</span> <span class="i">$self</span>-&gt;{<span class="w">testing</span>}<span class="sc">;</span>    <span class="c">## shouldnt be in here if testing mode anyway</span>
    <span class="k">my</span> <span class="i">$cron_list</span> = <span class="s">{</span> <span class="i">$self</span>-&gt;{<span class="w">script</span>} <span class="cm">=&gt;</span> <span class="n">1</span> <span class="s">}</span><span class="sc">;</span>
    <span class="k">if</span> <span class="s">(</span> <span class="i">$self</span>-&gt;{<span class="w">variation</span>} <span class="s">)</span> <span class="s">{</span>
        <span class="i">$cron_list</span> = <span class="s">{</span> <span class="i">$self</span>-&gt;{<span class="w">script</span>} <span class="cm">=&gt;</span> <span class="s">[</span> <span class="i">$self</span>-&gt;{<span class="w">script</span>} . <span class="q">'_'</span> . <span class="i">$self</span>-&gt;{<span class="w">variation</span>} <span class="s">]</span> <span class="s">}</span><span class="sc">;</span>
    <span class="s">}</span>

    <span class="k">my</span> <span class="i">$Error_Report</span> = <span class="i">new</span> <span class="i">Process_Monitor::Manager</span><span class="s">(</span> -<span class="w">cron_list</span> <span class="cm">=&gt;</span> <span class="i">$cron_list</span><span class="cm">,</span> -<span class="w">include</span> <span class="cm">=&gt;</span> <span class="n">1</span><span class="cm">,</span> -<span class="i">cron_dir</span> <span class="cm">=&gt;</span> <span class="i">$self</span>-&gt;{<span class="w">cron_dir</span>}<span class="cm">,</span> -<span class="i">stats_dir</span> <span class="cm">=&gt;</span> <span class="i">$self</span>-&gt;{<span class="w">stats_dir</span>} <span class="s">)</span><span class="sc">;</span>

    <span class="i">$Error_Report</span><span class="i">-&gt;generate_stats_graphs</span><span class="s">(</span> -<span class="w">script</span> <span class="cm">=&gt;</span> <span class="i">$self</span>-&gt;{<span class="w">script</span>}<span class="cm">,</span> -<span class="w">stats_file</span> <span class="cm">=&gt;</span> <span class="i">$self</span>-&gt;{<span class="w">stats_file</span>} <span class="s">)</span><span class="sc">;</span>
    <span class="i">$Error_Report</span><span class="i">-&gt;generate_reports</span><span class="s">(</span><span class="s">)</span><span class="sc">;</span>

    <span class="i">$Error_Report</span><span class="i">-&gt;send_summary</span><span class="s">(</span><span class="s">)</span><span class="sc">;</span>

    <span class="k">return</span> <span class="n">1</span><span class="sc">;</span>
<span class="s">}</span>

</pre><pre>
<span class="c">########################</span>
<span class="c">#</span>
<span class="c"># creates HTML table with exit message, current data and notification to rescue.</span>
<span class="c">#</span>
<span class="c">########################</span>
<a name="_report_incomplete-"></a><span class="k">sub </span><span class="m">_report_incomplete</span> <span class="s">{</span>
<span class="c">########################</span>
    <span class="k">my</span> <span class="i">$self</span> = <span class="k">shift</span><span class="sc">;</span>

    <span class="c">### Script is not exiting properly ie. dying...</span>
    <span class="k">my</span> <span class="i">$et</span> = <span class="w">HTML_Table</span><span class="w">-&gt;new</span><span class="s">(</span> -<span class="w">title</span> <span class="cm">=&gt;</span> <span class="q">&quot;Script '$self-&gt;{script}' crash info&quot;</span> <span class="s">)</span><span class="sc">;</span>
    <span class="i">$et</span><span class="i">-&gt;Set_Row</span><span class="s">(</span> <span class="s">[</span> <span class="q">'Start Time'</span><span class="cm">,</span> <span class="i">$self</span>-&gt;{<span class="w">_start_time</span>} <span class="s">]</span> <span class="s">)</span><span class="sc">;</span>

    <span class="c">#    $et-&gt;Set_Row(['Elapsed Time', end-start]);</span>
    <span class="i">$et</span><span class="i">-&gt;Set_Row</span><span class="s">(</span> <span class="s">[</span> <span class="q">'End Time'</span><span class="cm">,</span>     <span class="i">$self</span>-&gt;{<span class="w">_end_time</span>} <span class="s">]</span> <span class="s">)</span><span class="sc">;</span>
    <span class="i">$et</span><span class="i">-&gt;Set_Row</span><span class="s">(</span> <span class="s">[</span> <span class="q">''</span><span class="cm">,</span>             <span class="q">''</span> <span class="s">]</span> <span class="s">)</span><span class="sc">;</span>
    <span class="i">$et</span><span class="i">-&gt;Set_Row</span><span class="s">(</span> <span class="s">[</span> <span class="q">'Exit Message'</span><span class="cm">,</span> <span class="q">&quot;&lt;b&gt;&lt;font color=red&gt;$SIG{DIE}&lt;/font&gt;&lt;/b&gt;&quot;</span> <span class="s">]</span> <span class="s">)</span><span class="sc">;</span>
    <span class="i">$et</span><span class="i">-&gt;Set_Row</span><span class="s">(</span> <span class="s">[</span> <span class="q">'Messages'</span><span class="cm">,</span>     <span class="k">join</span><span class="s">(</span> <span class="q">'&lt;br&gt;'</span><span class="cm">,</span> <span class="i">@</span>{ <span class="i">$self</span>-&gt;{<span class="w">messages</span>} } <span class="s">)</span> <span class="s">]</span> <span class="s">)</span><span class="sc">;</span>
    <span class="i">$et</span><span class="i">-&gt;Set_Row</span><span class="s">(</span> <span class="s">[</span> <span class="q">'Warnings'</span><span class="cm">,</span>     <span class="k">join</span><span class="s">(</span> <span class="q">'&lt;br&gt;'</span><span class="cm">,</span> <span class="i">@</span>{ <span class="i">$self</span>-&gt;{<span class="w">warnings</span>} } <span class="s">)</span> <span class="s">]</span> <span class="s">)</span><span class="sc">;</span>
    <span class="i">$et</span><span class="i">-&gt;Set_Row</span><span class="s">(</span> <span class="s">[</span> <span class="q">'Errors'</span><span class="cm">,</span>       <span class="k">join</span><span class="s">(</span> <span class="q">'&lt;br&gt;'</span><span class="cm">,</span> <span class="i">@</span>{ <span class="i">$self</span>-&gt;{<span class="w">errors</span>} } <span class="s">)</span> <span class="s">]</span> <span class="s">)</span><span class="sc">;</span>
    <span class="i">$self</span><span class="i">-&gt;_send_notification</span><span class="s">(</span>
        -<span class="w">to</span>      <span class="cm">=&gt;</span> <span class="i">$self</span>-&gt;{<span class="w">notify</span>}<span class="cm">,</span>
        -<span class="w">subject</span> <span class="cm">=&gt;</span> <span class="q">&quot;System Monitor: Save '$self-&gt;{script}' from dying!&quot;</span><span class="cm">,</span>
        -<span class="w">body</span>    <span class="cm">=&gt;</span> <span class="i">$et</span><span class="i">-&gt;Printout</span><span class="s">(</span><span class="n">0</span><span class="s">)</span>
    <span class="s">)</span><span class="sc">;</span>
<span class="s">}</span>

<span class="n">1</span><span class="sc">;</span>

<a name="EOF-"></a></pre></body>

</html>
