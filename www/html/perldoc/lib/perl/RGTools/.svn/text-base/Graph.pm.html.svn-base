<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>Graph.pm</title>
<link rev="made" href="mailto:root@localhost" />
</head>

<style type="text/css">
<!--
/* default style sheet generated by perltidy */
body {background: #FFFFFF; color: #000000}
pre { color: #000000; 
      background: #F0F0F0;
      font-family: courier;
    } 

.c  { color: #228B22;} /* comment */
.cm { color: #000000;} /* comma */
.co { color: #000000;} /* colon */
.h  { color: #CD5555; font-weight:bold;} /* here-doc-target */
.hh { color: #CD5555; font-style:italic;} /* here-doc-text */
.i  { color: #00688B;} /* identifier */
.j  { color: #CD5555; font-weight:bold;} /* label */
.k  { color: #8B008B; font-weight:bold;} /* keyword */
.m  { color: #FF0000; font-weight:bold;} /* subroutine */
.n  { color: #B452CD;} /* numeric */
.p  { color: #000000;} /* paren */
.pd { color: #228B22; font-style:italic;} /* pod-text */
.pu { color: #000000;} /* punctuation */
.q  { color: #CD5555;} /* quote */
.s  { color: #000000;} /* structure */
.sc { color: #000000;} /* semicolon */
.v  { color: #B452CD;} /* v-string */
.w  { color: #000000;} /* bareword */
-->
</style>
<body style="background-color: white">
<a name="-top-"></a>
<h1>Graph.pm</h1>

<p><a name="__index__"></a></p>
<!-- INDEX BEGIN -->

<ul>

	<li><a href="#name__uplink_">NAME &lt;UPLINK&gt;</a></li>
	<li><a href="#synopsis__uplink_">SYNOPSIS &lt;UPLINK&gt;</a></li>
	<li><a href="#description__uplink_">DESCRIPTION &lt;UPLINK&gt;</a></li>
	<li><a href="#known_issues__uplink_">KNOWN ISSUES &lt;UPLINK&gt;</a></li>
	<li><a href="#future_improvements__uplink_">FUTURE IMPROVEMENTS &lt;UPLINK&gt;</a></li>
	<li><a href="#authors__uplink_">AUTHORS &lt;UPLINK&gt;</a></li>
	<li><a href="#created__uplink_">CREATED &lt;UPLINK&gt;</a></li>
	<li><a href="#revision__uplink_">REVISION &lt;UPLINK&gt;</a></li>
</ul>
<!-- INDEX END -->
<h2>Code Index:</h2>
<!-- BEGIN CODE INDEX --><a name="code-index"></a>
<ul>
<li><a href="#package-Graph-">package Graph</a>
<ul>
<li><a href="#generate_graph-">generate_graph</a></li>
</ul>
</li>
<li><a href="#EOF-">EOF</a></li>
</ul>
<!-- END CODE INDEX -->

<hr />
<pre><a name="package-Graph-"></a><span class="k">package </span><span class="i">Graph</span><span class="sc">;</span>

<span class="c">##############################</span>
<span class="c"># perldoc_header             #</span>
<span class="c">##############################</span>

</pre><p></p>
<hr />
<h1><a name="name__uplink_">NAME &lt;UPLINK&gt;</a></h1>
<p>Graph.pm -</p>
<p>
</p>
<hr />
<h1><a name="synopsis__uplink_">SYNOPSIS &lt;UPLINK&gt;</a></h1>
<pre>
        &lt;&lt;SYNOPSIS&gt;&gt;</pre>
<p>
</p>
<hr />
<h1><a name="description__uplink_">DESCRIPTION &lt;UPLINK&gt;</a></h1>
<pre>
<span class="c">##############################</span>
<span class="c"># superclasses               #</span>
<span class="c">##############################</span>

<span class="i">@ISA</span> = <span class="q">qw(Exporter)</span><span class="sc">;</span>

<span class="c">##############################</span>
<span class="c"># system_variables           #</span>
<span class="c">##############################</span>
<span class="k">require</span> <span class="w">Exporter</span><span class="sc">;</span>
<span class="i">@EXPORT</span> = <span class="q">qw(</span>
    <span class="q">generate_graph</span>
<span class="q">)</span><span class="sc">;</span>

<span class="c">##############################</span>
<span class="c"># standard_modules_ref       #</span>
<span class="c">##############################</span>

<span class="k">use</span> <span class="w">GD::Graph::points</span><span class="sc">;</span>
<span class="k">use</span> <span class="w">GD::Graph::bars</span><span class="sc">;</span>
<span class="k">use</span> <span class="w">Data::Dumper</span><span class="sc">;</span>
<span class="k">use</span> <span class="w">Getopt::Long</span><span class="sc">;</span>
<span class="k">use</span> <span class="w">strict</span><span class="sc">;</span>

<span class="k">use</span> <span class="w">RGTools::RGIO</span><span class="sc">;</span>

<span class="c">##############################</span>
<span class="c"># custom_modules_ref         #</span>
<span class="c">##############################</span>
<span class="c">##############################</span>
<span class="c"># global_vars                #</span>
<span class="c">##############################</span>
<span class="c">##############################</span>
<span class="c"># modular_vars               #</span>
<span class="c">##############################</span>
<span class="c">##############################</span>
<span class="c"># constants                  #</span>
<span class="c">##############################</span>
<span class="c">##############################</span>
<span class="c"># main_header                #</span>
<span class="c">##############################</span>
<span class="c">##############################</span>
<span class="c"># constructor                #</span>
<span class="c">##############################</span>
<span class="c">##############################</span>
<span class="c"># public_methods             #</span>
<span class="c">##############################</span>
<span class="c">##############################</span>
<span class="c"># public_functions           #</span>
<span class="c">##############################</span>

<span class="c">#####################</span>
<a name="generate_graph-"></a><span class="k">sub </span><span class="m">generate_graph</span> <span class="s">{</span>
<span class="c">#####################</span>
    <span class="k">my</span> <span class="i">%args</span>          = <span class="i">@_</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$file</span>          = <span class="i">$args</span>{-<span class="w">file</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$x_data</span>        = <span class="i">$args</span>{-<span class="w">x_data</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$y_data</span>        = <span class="i">$args</span>{-<span class="w">y_data</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$x_column</span>      = <span class="i">$args</span>{-<span class="w">xcol</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$y_column</span>      = <span class="i">$args</span>{-<span class="w">ycol</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$x_column_name</span> = <span class="i">$args</span>{-<span class="w">x_column_name</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$y_column_name</span> = <span class="i">$args</span>{-<span class="w">y_column_name</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$tail_lines</span>    = <span class="i">$args</span>{-<span class="w">tail_lines</span>}<span class="sc">;</span>                  <span class="c">## Number of lines to use at the end of the file</span>
    <span class="k">my</span> <span class="i">$ymax</span>          = <span class="i">$args</span>{-<span class="w">ymax</span>} || <span class="n">0</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$ymin</span>          = <span class="i">$args</span>{-<span class="w">ymin</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$output_file</span>   = <span class="i">$args</span>{-<span class="w">output_file</span>} || <span class="q">&quot;test.gif&quot;</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$image_xsize</span>   = <span class="i">$args</span>{-<span class="w">xsize</span>} || <span class="n">500</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$image_ysize</span>   = <span class="i">$args</span>{-<span class="w">ysize</span>} || <span class="n">300</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$delimiter</span>     = <span class="i">$args</span>{-<span class="w">delimiter</span>} || <span class="q">'\s+'</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$x_label</span>       = <span class="i">$args</span>{-<span class="w">x_label</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$y_label</span>       = <span class="i">$args</span>{-<span class="w">y_label</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$bar_width</span>     = <span class="i">$args</span>{-<span class="w">bar_width</span>} || <span class="n">1</span><span class="sc">;</span>              <span class="c">## width of bars in bar graph</span>
    <span class="k">my</span> <span class="i">$marker_size</span>   = <span class="i">$args</span>{-<span class="w">marker_size</span>} || <span class="n">1</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$colour</span>        = <span class="i">$args</span>{-<span class="w">colour</span>} || <span class="q">'blue'</span><span class="sc">;</span>            <span class="c">## colour of points / bars in graph</span>
    <span class="k">my</span> <span class="i">$x_label_skip</span>  = <span class="i">$args</span>{-<span class="w">x_label_skip</span>} || <span class="n">0</span><span class="sc">;</span>           <span class="c">## skip labels between nominal x labels (if densely packed)</span>
    <span class="k">my</span> <span class="i">$title</span>         = <span class="i">$args</span>{-<span class="w">title</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$debug</span>         = <span class="i">$args</span>{-<span class="w">debug</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$nominalx</span>      = <span class="i">$args</span>{-<span class="w">nominal_x</span>} || <span class="i">$bar_width</span><span class="sc">;</span>     <span class="c">## bar graph, with x values as labels</span>

    <span class="k">my</span> <span class="i">@colours</span><span class="sc">;</span>
    <span class="k">if</span> <span class="s">(</span> <span class="i">$colour</span> =~ <span class="q">/,/</span> <span class="s">)</span> <span class="s">{</span> <span class="i">@colours</span> = <span class="k">split</span> <span class="q">','</span><span class="cm">,</span> <span class="i">$colour</span> <span class="s">}</span>
    <span class="k">else</span>                  <span class="s">{</span> <span class="i">@colours</span> = <span class="s">(</span><span class="i">$colour</span><span class="s">)</span> <span class="s">}</span>

    <span class="i">$title</span> = <span class="q">&quot;$x_label x $y_label&quot;</span> <span class="k">unless</span> <span class="s">(</span> <span class="i">$title</span> || !<span class="s">(</span> <span class="i">$x_label</span> &amp;&amp; <span class="i">$y_label</span> <span class="s">)</span> <span class="s">)</span><span class="sc">;</span>

    <span class="k">if</span> <span class="s">(</span><span class="i">$debug</span><span class="s">)</span> <span class="s">{</span>
        <span class="k">print</span> <span class="q">&quot;RGTools::Graph::generate_graph&lt;BR&gt;&quot;</span><span class="sc">;</span>
        <span class="k">print</span> <span class="q">'&lt;PRE&gt;'</span><span class="sc">;</span>
        <span class="k">print</span> <span class="i">Dumper</span> \<span class="i">%args</span><span class="sc">;</span>
        <span class="k">print</span> <span class="q">&quot;&lt;PRE&gt;&quot;</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">if</span> <span class="s">(</span> <span class="i">$output_file</span> !~ <span class="q">/\.gif$/</span> <span class="s">)</span> <span class="s">{</span>
        <span class="i">$output_file</span> .= <span class="q">&quot;.gif&quot;</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">if</span> <span class="s">(</span> <span class="i">$tail_lines</span> &amp;&amp; !<span class="s">(</span> <span class="q">&quot;$file&quot;</span> || <span class="s">(</span> <span class="k">-e</span> <span class="q">&quot;$file&quot;</span> <span class="s">)</span> <span class="s">)</span> <span class="s">)</span> <span class="s">{</span>
        <span class="i">Call_Stack</span><span class="s">(</span><span class="s">)</span><span class="sc">;</span>
        <span class="k">print</span> <span class="q">&quot;Warning: requested only limited lines of input file, but no input file exists.\n&quot;</span><span class="sc">;</span>
        <span class="k">if</span> <span class="s">(</span> !<span class="i">$file</span> &amp;&amp; !<span class="s">(</span> <span class="i">$x_data</span> &amp;&amp; <span class="i">$y_data</span> <span class="s">)</span> <span class="s">)</span> <span class="s">{</span>
            <span class="k">return</span><span class="sc">;</span>
        <span class="s">}</span>
        <span class="k">elsif</span> <span class="s">(</span> <span class="k">-e</span> <span class="q">&quot;$file&quot;</span> <span class="s">)</span> <span class="s">{</span>
            <span class="k">print</span> <span class="q">&quot;Using entire file&quot;</span><span class="sc">;</span>
        <span class="s">}</span>
    <span class="s">}</span>
    <span class="k">my</span> <span class="i">$auto_ymax</span> = <span class="n">0</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$auto_ymin</span> = <span class="n">0</span><span class="sc">;</span>
    <span class="k">unless</span> <span class="s">(</span><span class="i">$ymax</span><span class="s">)</span> <span class="s">{</span>
        <span class="i">$auto_ymax</span> = <span class="n">1</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">unless</span> <span class="s">(</span><span class="i">$ymin</span><span class="s">)</span> <span class="s">{</span>
        <span class="i">$auto_ymin</span> = <span class="n">1</span><span class="sc">;</span>
    <span class="s">}</span>

    <span class="k">my</span> <span class="i">$count</span> = <span class="n">1</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$FH</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$xcol</span>       = <span class="n">-1</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$ycol</span>       = <span class="n">-1</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">@graph_data</span> = <span class="s">(</span> <span class="s">[</span><span class="s">]</span><span class="cm">,</span> <span class="s">[</span><span class="s">]</span> <span class="s">)</span><span class="sc">;</span>

    <span class="k">if</span> <span class="s">(</span> <span class="i">$x_column</span> =~ <span class="q">/^\d+$/</span> <span class="s">)</span> <span class="s">{</span>
        <span class="i">$xcol</span> = <span class="i">$x_column</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">if</span> <span class="s">(</span> <span class="i">$y_column</span> =~ <span class="q">/^\d+$/</span> <span class="s">)</span> <span class="s">{</span>
        <span class="i">$ycol</span> = <span class="i">$y_column</span><span class="sc">;</span>
    <span class="s">}</span>

    <span class="k">if</span> <span class="s">(</span><span class="i">$file</span><span class="s">)</span> <span class="s">{</span>
        <span class="k">my</span> <span class="i">$start_line_num</span> = <span class="n">1</span><span class="sc">;</span>
        <span class="k">if</span> <span class="s">(</span><span class="i">$tail_lines</span><span class="s">)</span> <span class="s">{</span>
            <span class="k">my</span> <span class="i">$line_count</span> = <span class="i">try_system_command</span><span class="s">(</span><span class="q">&quot;wc -l &lt; $file&quot;</span><span class="s">)</span><span class="sc">;</span>
            <span class="k">chomp</span> <span class="i">$line_count</span><span class="sc">;</span>
            <span class="k">unless</span> <span class="s">(</span> <span class="i">$line_count</span> &lt;= <span class="i">$tail_lines</span> <span class="s">)</span> <span class="s">{</span>
                <span class="i">$start_line_num</span> = <span class="i">$line_count</span> - <span class="i">$tail_lines</span><span class="sc">;</span>
            <span class="s">}</span>
        <span class="s">}</span>
        <span class="k">open</span><span class="s">(</span> <span class="i">$FH</span><span class="cm">,</span> <span class="q">&quot;$file&quot;</span> <span class="s">)</span><span class="sc">;</span>
        <span class="k">while</span> <span class="s">(</span><span class="q">&lt;$FH&gt;</span><span class="s">)</span> <span class="s">{</span>
            <span class="k">my</span> <span class="i">$line</span> = <span class="i">$_</span><span class="sc">;</span>
            <span class="k">chomp</span><span class="s">(</span><span class="i">$line</span><span class="s">)</span><span class="sc">;</span>
            <span class="k">my</span> <span class="i">@cols</span> = <span class="k">split</span><span class="s">(</span> <span class="q">/$delimiter/</span><span class="cm">,</span> <span class="i">$line</span> <span class="s">)</span><span class="sc">;</span>

            <span class="c"># if the x or y axis hasn't been defined, look for it in the table headers</span>
            <span class="c"># if it still cannot be resolved, fail out</span>
            <span class="k">if</span> <span class="s">(</span> <span class="s">(</span> <span class="i">$count</span> == <span class="n">1</span> <span class="s">)</span> &amp;&amp; <span class="s">(</span> <span class="s">(</span> <span class="i">$xcol</span> == <span class="n">-1</span> <span class="s">)</span> || <span class="s">(</span> <span class="i">$ycol</span> == <span class="n">-1</span> <span class="s">)</span> <span class="s">)</span> <span class="s">)</span> <span class="s">{</span>
                <span class="k">my</span> <span class="i">$index</span> = <span class="n">0</span><span class="sc">;</span>
                <span class="k">foreach</span> <span class="k">my</span> <span class="i">$item</span> <span class="s">(</span><span class="i">@cols</span><span class="s">)</span> <span class="s">{</span>
                    <span class="k">if</span> <span class="s">(</span> <span class="s">(</span> <span class="i">$xcol</span> == <span class="n">-1</span> <span class="s">)</span> &amp;&amp; <span class="s">(</span> <span class="s">(</span> <span class="i">$item</span> <span class="k">eq</span> <span class="i">$x_label</span> &amp;&amp; !<span class="i">$x_column_name</span> <span class="s">)</span> || <span class="s">(</span> <span class="i">$item</span> <span class="k">eq</span> <span class="i">$x_column_name</span> <span class="s">)</span> <span class="s">)</span> <span class="s">)</span> <span class="s">{</span>
                        <span class="i">$xcol</span> = <span class="i">$index</span><span class="sc">;</span>
                    <span class="s">}</span>
                    <span class="k">if</span> <span class="s">(</span> <span class="s">(</span> <span class="i">$ycol</span> == <span class="n">-1</span> <span class="s">)</span> &amp;&amp; <span class="s">(</span> <span class="s">(</span> <span class="i">$item</span> <span class="k">eq</span> <span class="i">$y_label</span> &amp;&amp; !<span class="i">$y_column_name</span> <span class="s">)</span> || <span class="s">(</span> <span class="i">$item</span> <span class="k">eq</span> <span class="i">$y_column_name</span> <span class="s">)</span> <span class="s">)</span> <span class="s">)</span> <span class="s">{</span>
                        <span class="i">$ycol</span> = <span class="i">$index</span><span class="sc">;</span>
                    <span class="s">}</span>
                    <span class="i">$index</span>++<span class="sc">;</span>
                <span class="s">}</span>
                <span class="k">if</span> <span class="s">(</span> <span class="s">(</span> <span class="i">$xcol</span> == <span class="n">-1</span> <span class="s">)</span> || <span class="s">(</span> <span class="i">$ycol</span> == <span class="n">-1</span> <span class="s">)</span> <span class="s">)</span> <span class="s">{</span>
                    <span class="k">print</span> <span class="q">&quot;X and Y axis not defined, failing out...\n&quot;</span><span class="sc">;</span>
                    <span class="k">close</span><span class="s">(</span><span class="i">$FH</span><span class="s">)</span><span class="sc">;</span>
                    <span class="k">exit</span><span class="sc">;</span>
                <span class="s">}</span>
                <span class="k">next</span><span class="sc">;</span>
            <span class="s">}</span>
            <span class="k">if</span> <span class="s">(</span> <span class="i">$count</span> &lt; <span class="i">$start_line_num</span> <span class="s">)</span> <span class="s">{</span>
                <span class="i">$count</span>++<span class="sc">;</span>
                <span class="k">next</span><span class="sc">;</span>
            <span class="s">}</span>

            <span class="c"># normal case is data. Parse out the defined x and y columns</span>
            <span class="k">my</span> <span class="i">$x</span> = <span class="i">$cols</span>[<span class="i">$xcol</span>]<span class="sc">;</span>
            <span class="k">my</span> <span class="i">$y</span> = <span class="i">$cols</span>[<span class="i">$ycol</span>]<span class="sc">;</span>

            <span class="c"># if any x_values are non-numeric - assume nominalx (bar graph labels) #</span>
            <span class="k">if</span> <span class="s">(</span> <span class="i">$x</span> !~ <span class="q">/^[\-\d\.]+$/</span> <span class="s">)</span> <span class="s">{</span>
                <span class="i">$nominalx</span> = <span class="n">1</span><span class="sc">;</span>
            <span class="s">}</span>

            <span class="k">if</span> <span class="s">(</span> <span class="i">$y</span> !~ <span class="q">/^[\-\d\.]+$/</span> <span class="s">)</span> <span class="s">{</span>
                <span class="k">if</span> <span class="s">(</span> <span class="i">$y</span> == <span class="q">&quot;&quot;</span> <span class="s">)</span> <span class="s">{</span>
                    <span class="i">$y</span> = <span class="n">0</span><span class="sc">;</span>
                <span class="s">}</span>
                <span class="k">else</span> <span class="s">{</span>
                    <span class="k">print</span> <span class="q">&quot;skipping line $count - non-numeric data:\n X - $y_label: $x\n Y - $y_label: $y\n\n&quot;</span><span class="sc">;</span>
                    <span class="k">next</span><span class="sc">;</span>
                <span class="s">}</span>
            <span class="s">}</span>

            <span class="c"># if ymax and ymin are not defined, find the maximum and minimum values</span>
            <span class="k">if</span> <span class="s">(</span> <span class="i">$auto_ymax</span> &amp;&amp; <span class="s">(</span> <span class="i">$y</span> &gt; <span class="i">$ymax</span> <span class="s">)</span> <span class="s">)</span> <span class="s">{</span>
                <span class="i">$ymax</span> = <span class="i">$y</span><span class="sc">;</span>
            <span class="s">}</span>
            <span class="k">if</span> <span class="s">(</span> <span class="i">$auto_ymin</span> &amp;&amp; <span class="s">(</span> <span class="i">$y</span> &lt; <span class="i">$ymin</span> <span class="s">)</span> <span class="s">)</span> <span class="s">{</span>
                <span class="i">$ymin</span> = <span class="i">$y</span><span class="sc">;</span>
            <span class="s">}</span>
            <span class="k">push</span><span class="s">(</span> <span class="i">@</span>{ <span class="i">$graph_data</span>[<span class="n">0</span>] }<span class="cm">,</span> <span class="i">$x</span> <span class="s">)</span><span class="sc">;</span>
            <span class="k">push</span><span class="s">(</span> <span class="i">@</span>{ <span class="i">$graph_data</span>[<span class="n">1</span>] }<span class="cm">,</span> <span class="i">$y</span> <span class="s">)</span><span class="sc">;</span>
            <span class="i">$count</span>++<span class="sc">;</span>
        <span class="s">}</span>
        <span class="k">close</span><span class="s">(</span><span class="i">$FH</span><span class="s">)</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">elsif</span> <span class="s">(</span> <span class="i">$x_data</span> || <span class="i">$y_data</span> <span class="s">)</span> <span class="s">{</span>
        <span class="c">## data provided directly ##</span>

        <span class="k">if</span> <span class="s">(</span> !<span class="s">(</span> <span class="k">int</span><span class="s">(</span> <span class="i">@</span>{<span class="i">$y_data</span>} <span class="s">)</span> <span class="s">)</span> <span class="s">)</span> <span class="s">{</span>
            <span class="k">print</span> <span class="q">&quot;Setting X-data to 1..N\n&quot;</span><span class="sc">;</span>
            <span class="k">my</span> <span class="i">@data</span> = <span class="i">@</span>{<span class="i">$x_data</span>}<span class="sc">;</span>
            <span class="i">$y_data</span> = <span class="s">[</span><span class="i">@data</span><span class="s">]</span><span class="sc">;</span>
            <span class="i">$x_data</span> = <span class="s">[</span> <span class="n">1</span> .. <span class="k">int</span><span class="s">(</span> <span class="i">@</span>{<span class="i">$y_data</span>} <span class="s">)</span> <span class="s">]</span><span class="sc">;</span>
        <span class="s">}</span>

        <span class="k">if</span> <span class="s">(</span> <span class="i">$x_data</span> &amp;&amp; <span class="s">(</span> <span class="k">int</span><span class="s">(</span> <span class="i">@</span>{<span class="i">$x_data</span>} <span class="s">)</span> == <span class="k">int</span><span class="s">(</span> <span class="i">@</span>{<span class="i">$y_data</span>} <span class="s">)</span> <span class="s">)</span> <span class="s">)</span> <span class="s">{</span>
            <span class="k">my</span> <span class="i">$i</span> = <span class="n">0</span><span class="sc">;</span>
            <span class="k">while</span> <span class="s">(</span> <span class="k">defined</span> <span class="i">$y_data</span>-&gt;[<span class="i">$i</span>] <span class="s">)</span> <span class="s">{</span>
                <span class="k">my</span> <span class="i">$x</span> = <span class="i">$x_data</span>-&gt;[<span class="i">$i</span>]<span class="sc">;</span>
                <span class="k">my</span> <span class="i">$y</span> = <span class="i">$y_data</span>-&gt;[<span class="i">$i</span>]<span class="sc">;</span>
                <span class="k">push</span> <span class="i">@</span>{ <span class="i">$graph_data</span>[<span class="n">0</span>] }<span class="cm">,</span> <span class="i">$x</span><span class="sc">;</span>
                <span class="k">push</span> <span class="i">@</span>{ <span class="i">$graph_data</span>[<span class="n">1</span>] }<span class="cm">,</span> <span class="i">$y</span><span class="sc">;</span>

                <span class="c"># if any x_values are non-numeric - assume nominalx (bar graph labels) #</span>
                <span class="k">if</span> <span class="s">(</span> <span class="i">$x</span> !~ <span class="q">/^[\-\d\.]+$/</span> <span class="s">)</span> <span class="s">{</span>
                    <span class="i">$nominalx</span> = <span class="n">1</span><span class="sc">;</span>
                <span class="s">}</span>

                <span class="k">if</span> <span class="s">(</span> <span class="i">$y</span> !~ <span class="q">/^[\-\d\.]+$/</span> <span class="s">)</span> <span class="s">{</span>
                    <span class="k">if</span> <span class="s">(</span> <span class="i">$y</span> == <span class="q">&quot;&quot;</span> <span class="s">)</span> <span class="s">{</span>
                        <span class="i">$y</span> = <span class="n">0</span><span class="sc">;</span>
                    <span class="s">}</span>
                    <span class="k">else</span> <span class="s">{</span>
                        <span class="k">print</span> <span class="q">&quot;skipping line $count - non-numeric data:\n X - $y_label: $x\n Y - $y_label: $y\n\n&quot;</span><span class="sc">;</span>
                        <span class="k">next</span><span class="sc">;</span>
                    <span class="s">}</span>
                <span class="s">}</span>

                <span class="c"># if ymax and ymin are not defined, find the maximum and minimum values</span>
                <span class="k">if</span> <span class="s">(</span> <span class="i">$auto_ymax</span> &amp;&amp; <span class="s">(</span> <span class="i">$y</span> &gt; <span class="i">$ymax</span> <span class="s">)</span> <span class="s">)</span> <span class="s">{</span>
                    <span class="i">$ymax</span> = <span class="i">$y</span><span class="sc">;</span>
                <span class="s">}</span>
                <span class="k">if</span> <span class="s">(</span> <span class="i">$auto_ymin</span> &amp;&amp; <span class="s">(</span> <span class="i">$y</span> &lt; <span class="i">$ymin</span> <span class="s">)</span> <span class="s">)</span> <span class="s">{</span>
                    <span class="i">$ymin</span> = <span class="i">$y</span><span class="sc">;</span>
                <span class="s">}</span>

                <span class="i">$i</span>++<span class="sc">;</span>
            <span class="s">}</span>
            <span class="i">$count</span> = <span class="i">$i</span><span class="sc">;</span>
            <span class="k">print</span> <span class="q">&quot;Found $i data points\n&quot;</span> <span class="k">if</span> <span class="i">$debug</span><span class="sc">;</span>
        <span class="s">}</span>

        <span class="k">else</span> <span class="s">{</span>
            <span class="k">print</span> <span class="q">&quot;X: $x_data; &quot;</span><span class="sc">;</span>
            <span class="k">print</span> <span class="q">&quot;N=&quot;</span> . <span class="k">int</span><span class="s">(</span> <span class="i">@</span>{<span class="i">$x_data</span>} <span class="s">)</span><span class="sc">;</span>
            <span class="k">print</span> <span class="q">&quot;; M=&quot;</span> . <span class="k">int</span><span class="s">(</span> <span class="i">@</span>{<span class="i">$y_data</span>} <span class="s">)</span><span class="sc">;</span>
            <span class="k">print</span> <span class="q">&quot;Error: x_data list not consistent with y_data list\n&quot;</span><span class="sc">;</span>
            <span class="k">return</span> <span class="n">0</span><span class="sc">;</span>
        <span class="s">}</span>
    <span class="s">}</span>

    <span class="k">return</span> <span class="n">0</span> <span class="k">if</span> <span class="s">(</span> <span class="i">$ymax</span> == <span class="i">$ymin</span> &amp;&amp; <span class="i">$ymin</span> == <span class="n">0</span> <span class="s">)</span><span class="sc">;</span>

    <span class="c"># collapse the array, putting repeated values onto a different array</span>
    <span class="c"># keep track of the maximum number of values associated with one x value</span>
    <span class="c"># because that is the number of arrays that need to be created</span>
    <span class="k">my</span> <span class="i">%graph_hash</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$maxdepth</span>           = <span class="n">0</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$count</span>              = <span class="n">0</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">@ordered_graph_xval</span> = <span class="s">(</span><span class="s">)</span><span class="sc">;</span>
    <span class="k">foreach</span> <span class="k">my</span> <span class="i">$item</span> <span class="s">(</span> <span class="i">@</span>{ <span class="i">$graph_data</span>[<span class="n">0</span>] } <span class="s">)</span> <span class="s">{</span>

        <span class="c"># portion of code for nominal x-values</span>
        <span class="k">push</span><span class="s">(</span> <span class="i">@ordered_graph_xval</span><span class="cm">,</span> <span class="i">$item</span> <span class="s">)</span><span class="sc">;</span>
        <span class="k">if</span> <span class="s">(</span><span class="i">$nominalx</span><span class="s">)</span> <span class="s">{</span>
            <span class="k">if</span> <span class="s">(</span> <span class="k">defined</span> <span class="i">$graph_hash</span>{<span class="i">$item</span>} <span class="s">)</span> <span class="s">{</span>
                <span class="k">push</span><span class="s">(</span> <span class="i">@</span>{ <span class="i">$graph_hash</span>{<span class="i">$item</span>} }<span class="cm">,</span> <span class="i">$graph_data</span>[<span class="n">1</span>]-&gt;[<span class="i">$count</span>] <span class="s">)</span><span class="sc">;</span>
            <span class="s">}</span>
            <span class="k">else</span> <span class="s">{</span>
                <span class="i">$graph_hash</span>{<span class="i">$item</span>} = <span class="s">[</span> <span class="i">$graph_data</span>[<span class="n">1</span>]-&gt;[<span class="i">$count</span>] <span class="s">]</span><span class="sc">;</span>
                <span class="i">$maxdepth</span> = <span class="n">1</span> <span class="k">if</span> <span class="s">(</span> <span class="i">$maxdepth</span> == <span class="n">0</span> <span class="s">)</span><span class="sc">;</span>
            <span class="s">}</span>
        <span class="s">}</span>

        <span class="c"># code for ordinal x values</span>
        <span class="k">else</span> <span class="s">{</span>
            <span class="k">if</span> <span class="s">(</span> <span class="k">defined</span> <span class="i">$graph_hash</span>{<span class="i">$item</span>} <span class="s">)</span> <span class="s">{</span>
                <span class="k">push</span><span class="s">(</span> <span class="i">@</span>{ <span class="i">$graph_hash</span>{<span class="i">$item</span>} }<span class="cm">,</span> <span class="i">$graph_data</span>[<span class="n">1</span>]-&gt;[<span class="i">$count</span>] <span class="s">)</span><span class="sc">;</span>
                <span class="k">if</span> <span class="s">(</span> <span class="k">scalar</span><span class="s">(</span> <span class="i">@</span>{ <span class="i">$graph_hash</span>{<span class="i">$item</span>} } <span class="s">)</span> &gt; <span class="i">$maxdepth</span> <span class="s">)</span> <span class="s">{</span>
                    <span class="i">$maxdepth</span> = <span class="k">scalar</span><span class="s">(</span> <span class="i">@</span>{ <span class="i">$graph_hash</span>{<span class="i">$item</span>} } <span class="s">)</span><span class="sc">;</span>
                <span class="s">}</span>
            <span class="s">}</span>
            <span class="k">else</span> <span class="s">{</span>
                <span class="i">$graph_hash</span>{<span class="i">$item</span>} = <span class="s">[</span> <span class="i">$graph_data</span>[<span class="n">1</span>]-&gt;[<span class="i">$count</span>] <span class="s">]</span><span class="sc">;</span>
                <span class="i">$maxdepth</span> = <span class="n">1</span> <span class="k">if</span> <span class="s">(</span> <span class="i">$maxdepth</span> == <span class="n">0</span> <span class="s">)</span><span class="sc">;</span>
            <span class="s">}</span>
        <span class="s">}</span>

        <span class="i">$count</span>++<span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">my</span> <span class="i">@sorted_graph_data</span> = <span class="s">(</span><span class="s">)</span><span class="sc">;</span>
    <span class="k">for</span> <span class="s">(</span> <span class="k">my</span> <span class="i">$i</span> = <span class="n">0</span><span class="sc">;</span> <span class="i">$i</span> &lt; <span class="i">$maxdepth</span><span class="sc">;</span> <span class="i">$i</span>++ <span class="s">)</span> <span class="s">{</span>
        <span class="k">push</span><span class="s">(</span> <span class="i">@sorted_graph_data</span><span class="cm">,</span> <span class="s">[</span><span class="s">]</span> <span class="s">)</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">my</span> <span class="i">%drawn_xval</span><span class="sc">;</span>

    <span class="k">if</span> <span class="s">(</span><span class="i">$nominalx</span><span class="s">)</span> <span class="s">{</span>

        <span class="c"># portion of code for nominal x-values</span>
        <span class="k">foreach</span> <span class="k">my</span> <span class="i">$key</span> <span class="s">(</span><span class="i">@ordered_graph_xval</span><span class="s">)</span> <span class="s">{</span>
            <span class="k">if</span> <span class="s">(</span> <span class="k">defined</span> <span class="i">$drawn_xval</span>{<span class="i">$key</span>} <span class="s">)</span> <span class="s">{</span>
                <span class="k">next</span><span class="sc">;</span>
            <span class="s">}</span>
            <span class="k">else</span> <span class="s">{</span>
                <span class="i">$drawn_xval</span>{<span class="i">$key</span>} = <span class="n">1</span><span class="sc">;</span>
            <span class="s">}</span>
            <span class="k">my</span> <span class="i">@item_array</span> = <span class="i">@</span>{ <span class="i">$graph_hash</span>{<span class="i">$key</span>} }<span class="sc">;</span>
            <span class="k">for</span> <span class="s">(</span> <span class="k">my</span> <span class="i">$i</span> = <span class="n">0</span><span class="sc">;</span> <span class="i">$i</span> &lt; <span class="k">scalar</span><span class="s">(</span><span class="i">@item_array</span><span class="s">)</span><span class="sc">;</span> <span class="i">$i</span>++ <span class="s">)</span> <span class="s">{</span>
                <span class="k">push</span><span class="s">(</span> <span class="i">@</span>{ <span class="i">$sorted_graph_data</span>[<span class="n">0</span>] }<span class="cm">,</span> <span class="i">$key</span> <span class="s">)</span><span class="sc">;</span>
                <span class="k">push</span><span class="s">(</span> <span class="i">@</span>{ <span class="i">$sorted_graph_data</span>[<span class="n">1</span>] }<span class="cm">,</span> <span class="i">$item_array</span>[<span class="i">$i</span>] <span class="s">)</span><span class="sc">;</span>
            <span class="s">}</span>
        <span class="s">}</span>
    <span class="s">}</span>
    <span class="k">else</span> <span class="s">{</span>
        <span class="k">foreach</span> <span class="k">my</span> <span class="i">$key</span> <span class="s">(</span> <span class="k">sort</span> <span class="s">{</span> <span class="i">$a</span> &lt;=&gt; <span class="i">$b</span> <span class="s">}</span> <span class="k">keys</span> <span class="i">%graph_hash</span> <span class="s">)</span> <span class="s">{</span>
            <span class="k">my</span> <span class="i">@item_array</span> = <span class="i">@</span>{ <span class="i">$graph_hash</span>{<span class="i">$key</span>} }<span class="sc">;</span>

            <span class="c"># code for ordinal x-values</span>
            <span class="k">push</span><span class="s">(</span> <span class="i">@</span>{ <span class="i">$sorted_graph_data</span>[<span class="n">0</span>] }<span class="cm">,</span> <span class="i">$key</span> <span class="s">)</span><span class="sc">;</span>
            <span class="k">for</span> <span class="s">(</span> <span class="k">my</span> <span class="i">$i</span> = <span class="n">0</span><span class="sc">;</span> <span class="i">$i</span> &lt; <span class="i">$maxdepth</span><span class="sc">;</span> <span class="i">$i</span>++ <span class="s">)</span> <span class="s">{</span>
                <span class="k">if</span> <span class="s">(</span> <span class="k">scalar</span><span class="s">(</span><span class="i">@item_array</span><span class="s">)</span> &gt; <span class="i">$i</span> <span class="s">)</span> <span class="s">{</span>
                    <span class="k">push</span><span class="s">(</span> <span class="i">@</span>{ <span class="i">$sorted_graph_data</span>[ <span class="i">$i</span> + <span class="n">1</span> ] }<span class="cm">,</span> <span class="i">$item_array</span>[<span class="i">$i</span>] <span class="s">)</span><span class="sc">;</span>
                <span class="s">}</span>
                <span class="k">else</span> <span class="s">{</span>
                    <span class="k">push</span><span class="s">(</span> <span class="i">@</span>{ <span class="i">$sorted_graph_data</span>[ <span class="i">$i</span> + <span class="n">1</span> ] }<span class="cm">,</span> <span class="k">undef</span> <span class="s">)</span><span class="sc">;</span>
                <span class="s">}</span>
            <span class="s">}</span>

        <span class="s">}</span>

    <span class="s">}</span>

    <span class="k">my</span> <span class="i">$graph</span><span class="sc">;</span>
    <span class="k">if</span> <span class="s">(</span><span class="i">$nominalx</span><span class="s">)</span> <span class="s">{</span>

        <span class="k">print</span> <span class="q">&quot;Generate bar graph\n&quot;</span> <span class="k">if</span> <span class="i">$debug</span><span class="sc">;</span>

        <span class="c"># determine best xsize</span>
        <span class="k">my</span> <span class="i">$good_xsize</span> = <span class="k">scalar</span><span class="s">(</span> <span class="i">@</span>{ <span class="i">$sorted_graph_data</span>[<span class="n">0</span>] } <span class="s">)</span> * <span class="i">$bar_width</span> + <span class="n">100</span><span class="sc">;</span>
        <span class="k">if</span> <span class="s">(</span> <span class="i">$good_xsize</span> &gt; <span class="i">$image_xsize</span> <span class="s">)</span> <span class="s">{</span>
            <span class="i">$image_xsize</span> = <span class="i">$good_xsize</span><span class="sc">;</span>
        <span class="s">}</span>
        <span class="i">$graph</span> = <span class="w">new</span> <span class="i">GD::Graph::bars</span><span class="s">(</span> <span class="i">$image_xsize</span><span class="cm">,</span> <span class="i">$image_ysize</span> <span class="s">)</span><span class="sc">;</span>
        <span class="i">$graph</span><span class="i">-&gt;set</span><span class="s">(</span>
            <span class="w">x_label</span>           <span class="cm">=&gt;</span> <span class="q">&quot;$x_label&quot;</span><span class="cm">,</span>
            <span class="w">y_label</span>           <span class="cm">=&gt;</span> <span class="q">&quot;$y_label&quot;</span><span class="cm">,</span>
            <span class="w">title</span>             <span class="cm">=&gt;</span> <span class="q">&quot;$title&quot;</span><span class="cm">,</span>
            <span class="w">y_max_value</span>       <span class="cm">=&gt;</span> <span class="q">&quot;$ymax&quot;</span><span class="cm">,</span>
            <span class="w">y_min_value</span>       <span class="cm">=&gt;</span> <span class="q">&quot;$ymin&quot;</span><span class="cm">,</span>
            <span class="w">x_label_skip</span>      <span class="cm">=&gt;</span> <span class="i">$x_label_skip</span><span class="cm">,</span>
            <span class="w">x_labels_vertical</span> <span class="cm">=&gt;</span> <span class="n">1</span><span class="cm">,</span>
            <span class="w">bar_width</span>         <span class="cm">=&gt;</span> <span class="i">$bar_width</span><span class="cm">,</span>
            <span class="w">dclrs</span>             <span class="cm">=&gt;</span> \<span class="i">@colours</span><span class="cm">,</span>
            <span class="w">r_margin</span>          <span class="cm">=&gt;</span> <span class="n">20</span>
        <span class="s">)</span> <span class="k">or</span> <span class="k">die</span> <span class="i">$graph</span><span class="i">-&gt;error</span><span class="sc">;</span>
        <span class="i">$graph</span><span class="i">-&gt;set_x_label_font</span><span class="s">(</span> <span class="q">'arial'</span><span class="cm">,</span> <span class="n">20</span> <span class="s">)</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">else</span> <span class="s">{</span>
        <span class="k">print</span> <span class="q">&quot;Generate scatter plot\n&quot;</span> <span class="k">if</span> <span class="i">$debug</span><span class="sc">;</span>
        <span class="i">$graph</span> = <span class="w">new</span> <span class="i">GD::Graph::points</span><span class="s">(</span> <span class="i">$image_xsize</span><span class="cm">,</span> <span class="i">$image_ysize</span> <span class="s">)</span><span class="sc">;</span>
        <span class="i">$graph</span><span class="i">-&gt;set</span><span class="s">(</span>
            <span class="w">x_label</span>       <span class="cm">=&gt;</span> <span class="q">&quot;$x_label&quot;</span><span class="cm">,</span>
            <span class="w">y_label</span>       <span class="cm">=&gt;</span> <span class="q">&quot;$y_label&quot;</span><span class="cm">,</span>
            <span class="w">title</span>         <span class="cm">=&gt;</span> <span class="q">&quot;$title&quot;</span><span class="cm">,</span>
            <span class="w">y_max_value</span>   <span class="cm">=&gt;</span> <span class="q">&quot;$ymax&quot;</span><span class="cm">,</span>
            <span class="w">y_min_value</span>   <span class="cm">=&gt;</span> <span class="q">&quot;$ymin&quot;</span><span class="cm">,</span>
            <span class="w">x_ticks</span>       <span class="cm">=&gt;</span> <span class="n">0</span><span class="cm">,</span>
            <span class="w">x_tick_number</span> <span class="cm">=&gt;</span> <span class="q">&quot;auto&quot;</span><span class="cm">,</span>
            <span class="w">marker_size</span>   <span class="cm">=&gt;</span> <span class="i">$marker_size</span><span class="cm">,</span>
            <span class="w">dclrs</span>         <span class="cm">=&gt;</span> \<span class="i">@colours</span><span class="cm">,</span>
            <span class="w">r_margin</span>      <span class="cm">=&gt;</span> <span class="n">20</span>
        <span class="s">)</span> <span class="k">or</span> <span class="k">die</span> <span class="i">$graph</span><span class="i">-&gt;error</span><span class="sc">;</span>
    <span class="s">}</span>

    <span class="k">print</span> <span class="q">&quot;Write to $output_file.\n&quot;</span> <span class="k">if</span> <span class="i">$debug</span><span class="sc">;</span>

    <span class="k">open</span> <span class="k">my</span> <span class="i">$IMG</span><span class="cm">,</span> <span class="q">'&gt;'</span><span class="cm">,</span> <span class="i">$output_file</span> <span class="k">or</span> <span class="k">print</span> <span class="q">&quot;Error - could not write to $output_file\n&quot;</span><span class="sc">;</span>
    <span class="k">binmode</span> <span class="i">$IMG</span><span class="sc">;</span>

    <span class="k">my</span> <span class="i">$i</span> = <span class="i">$graph</span><span class="i">-&gt;plot</span><span class="s">(</span> \<span class="i">@sorted_graph_data</span> <span class="s">)</span> <span class="k">or</span> <span class="k">die</span> <span class="i">$graph</span><span class="i">-&gt;error</span><span class="sc">;</span>

    <span class="k">print</span> <span class="i">$IMG</span> <span class="i">$i</span><span class="i">-&gt;gif</span><span class="sc">;</span>
    <span class="w">Message</span> <span class="q">&quot;Plotted graph to $output_file&quot;</span><span class="sc">;</span>
    <span class="k">close</span><span class="s">(</span><span class="i">$IMG</span><span class="s">)</span><span class="sc">;</span>

    <span class="k">return</span> <span class="n">1</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">##############################</span>
<span class="c"># private_methods            #</span>
<span class="c">##############################</span>
<span class="c">##############################</span>
<span class="c"># private_functions          #</span>
<span class="c">##############################</span>
<span class="c">##############################</span>
<span class="c"># main_footer                #</span>
<span class="c">##############################</span>
<span class="c">##############################</span>
<span class="c"># perldoc_footer             #</span>
<span class="c">##############################</span>

</pre><p></p>
<hr />
<h1><a name="known_issues__uplink_">KNOWN ISSUES &lt;UPLINK&gt;</a></h1>
<p>&lt;&lt;KNOWN ISSUES&gt;&gt;</p>
<p>
</p>
<hr />
<h1><a name="future_improvements__uplink_">FUTURE IMPROVEMENTS &lt;UPLINK&gt;</a></h1>
<p>&lt;&lt;FUTURE IMPROVEMENTS&gt;&gt;</p>
<p>
</p>
<hr />
<h1><a name="authors__uplink_">AUTHORS &lt;UPLINK&gt;</a></h1>
<p>&lt;&lt;AUTHORS&gt;&gt;</p>
<p>
</p>
<hr />
<h1><a name="created__uplink_">CREATED &lt;UPLINK&gt;</a></h1>
<p>2004-11-29</p>
<p>
</p>
<hr />
<h1><a name="revision__uplink_">REVISION &lt;UPLINK&gt;</a></h1>
<p>$Id: Graph.pm,v 1.4 2004/12/09 17:42:40 rguin Exp $ (Release: $Name:  $)</p>

<pre>
<span class="k">return</span> <span class="n">1</span><span class="sc">;</span>
<a name="EOF-"></a></pre></body>

</html>
