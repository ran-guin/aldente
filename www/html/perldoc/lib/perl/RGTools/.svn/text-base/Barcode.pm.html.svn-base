<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" 
   "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!-- Generated by perltidy on Mon Dec 29 15:36:16 2008 -->
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>lib/perl/RGTools/Barcode.pm</title>
<style type="text/css">
<!--
/* default style sheet generated by perltidy */
body {background: #FFFFFF; color: #000000}
pre { color: #000000; 
      background: #FFFFFF;
      font-family: courier;
    } 

.c  { color: #228B22;} /* comment */
.cm { color: #000000;} /* comma */
.co { color: #000000;} /* colon */
.h  { color: #CD5555; font-weight:bold;} /* here-doc-target */
.hh { color: #CD5555; font-style:italic;} /* here-doc-text */
.i  { color: #00688B;} /* identifier */
.j  { color: #CD5555; font-weight:bold;} /* label */
.k  { color: #8B008B; font-weight:bold;} /* keyword */
.m  { color: #FF0000; font-weight:bold;} /* subroutine */
.n  { color: #B452CD;} /* numeric */
.p  { color: #000000;} /* paren */
.pd { color: #228B22; font-style:italic;} /* pod-text */
.pu { color: #000000;} /* punctuation */
.q  { color: #CD5555;} /* quote */
.s  { color: #000000;} /* structure */
.sc { color: #000000;} /* semicolon */
.v  { color: #B452CD;} /* v-string */
.w  { color: #000000;} /* bareword */
-->
</style>
</head>
<body>
<a name="-top-"></a>
<h1>lib/perl/RGTools/Barcode.pm</h1>
<!-- BEGIN CODE INDEX --><a name="code-index"></a>
<ul>
<li><a href="#package-Barcode-">package Barcode</a>
<ul>
<li><a href="#Barcode::DESTROY-">Barcode::DESTROY</a></li>
<li><a href="#new-">new</a></li>
<li><a href="#load_from_file-">load_from_file</a></li>
<li><a href="#specify_labels-">specify_labels</a></li>
<li><a href="#set_fields-">set_fields</a></li>
<li><a href="#get_fields-">get_fields</a></li>
<li><a href="#make_zpl-">make_zpl</a></li>
<li><a href="#lprprint-">lprprint</a></li>
<li><a href="#makepng-">makepng</a></li>
<li><a href="#printpng-">printpng</a></li>
<li><a href="#get_attribute-">get_attribute</a></li>
<li><a href="#set_attribute-">set_attribute</a></li>
<li><a href="#get_field_attribute-">get_field_attribute</a></li>
<li><a href="#set_field_attribute-">set_field_attribute</a></li>
<li><a href="#establish_printer-">establish_printer</a></li>
<li><a href="#dump_format-">dump_format</a></li>
<li><a href="#_is_valid-">_is_valid</a></li>
<li><a href="#_ZPLtoScreenScale-">_ZPLtoScreenScale</a></li>
<li><a href="#_ZPLtoScreen-">_ZPLtoScreen</a></li>
<li><a href="#_Accounting-">_Accounting</a></li>
<li><a href="#_Message-">_Message</a></li>
<li><a href="#_validate-">_validate</a></li>
<li><a href="#_validate_field-">_validate_field</a></li>
<li><a href="#Pause-">Pause</a></li>
</ul>
</li>
<li><a href="#EOF-">EOF</a></li>
</ul>
<!-- END CODE INDEX -->
<hr />
<!-- contents of filename: lib/perl/RGTools/Barcode.pm -->
<pre>
<a name="package-Barcode-"></a><span class="k">package </span><span class="i">Barcode</span><span class="sc">;</span>

<span class="k">use</span> <span class="w">strict</span><span class="sc">;</span>
<span class="k">use</span> <span class="w">Date::Calc</span> <span class="q">qw(Today Add_Delta_Days)</span><span class="sc">;</span>
<span class="k">use</span> <span class="w">POSIX</span> <span class="q">qw(strftime)</span><span class="sc">;</span>
<span class="k">use</span> <span class="w">Time::HiRes</span> <span class="q">qw(gettimeofday tv_interval)</span><span class="sc">;</span>
<span class="k">use</span> <span class="w">Carp</span><span class="sc">;</span>
<span class="k">use</span> <span class="w">Data::Dumper</span><span class="sc">;</span>

<span class="k">use</span> <span class="w">GD</span><span class="sc">;</span>

<span class="c">##   ####</span>
<span class="c">##   # &lt;SYNOPSIS&gt;</span>
<span class="c">##</span>
<span class="c">##   # initialize, indicating standard type #</span>
<span class="c">##   my $barcode = Barcode-&gt;new(-type=&gt;'gelpour_barcode_1D');</span>
<span class="c">##   # set fields required as per defined type #</span>
<span class="c">##   $barcode-&gt;set_fields((</span>
<span class="c">##   		      class=&gt;'RUN',</span>
<span class="c">##   		      id=&gt;1234,</span>
<span class="c">##   		      barcode=&gt;'PR123',</span>
<span class="c">##   		      rack=&gt;'RAC123',</span>
<span class="c">##   		      initial=&gt;'abc',</span>
<span class="c">##   		      creation=&gt;'2005-01-01'</span>
<span class="c">##   		      ));</span>
<span class="c">##   # print barcode</span>
<span class="c">##   $barcode-&gt;lprprint();</span>
<span class="c">##</span>
<span class="c">##   ###  Alternatively, you can set up a custom barcode: ###</span>
<span class="c">##</span>
<span class="c">##   ## define attributes for 2 items on the label...</span>
<span class="c">##   my $label1 = {</span>
<span class="c">##       '-name' =&gt;'label1',</span>
<span class="c">##       '-posx'   =&gt;5,</span>
<span class="c">##       '-posy'   =&gt;5,</span>
<span class="c">##       '-size'   =&gt;30,</span>
<span class="c">##       '-value'  =&gt;'label1',</span>
<span class="c">##   };</span>
<span class="c">##</span>
<span class="c">##   my $label2 = {</span>
<span class="c">##       '-name'    =&gt;'label2',</span>
<span class="c">##       '-style' =&gt;'code128',</span>
<span class="c">##       '-value' =&gt; 'testlabel',</span>
<span class="c">##       '-posx'   =&gt;15,</span>
<span class="c">##       '-posy'   =&gt;15,</span>
<span class="c">##       '-size'   =&gt;40,</span>
<span class="c">##   };</span>
<span class="c">##</span>
<span class="c">##   my $ok = new Barcode(</span>
<span class="c">##   		     -labels=&gt;[$label1,$label2],</span>
<span class="c">##   		     -height=&gt;0.75,</span>
<span class="c">##   		     -width=&gt;2.25,</span>
<span class="c">##   		     -top=&gt;15,</span>
<span class="c">##   		     -zero_x=&gt;25,</span>
<span class="c">##   		     -zero_y=&gt;25,</span>
<span class="c">##   		     );</span>
<span class="c">##   $ok-&gt;lprprint();</span>
<span class="c">##</span>

<span class="c">#my $datafile  = &quot;/usr/local/uproj/barcode/prod/barcodes.dat&quot;;</span>
<span class="c">#my $logfile   = &quot;/mnt/disk11/barcode/barcode.log&quot;;</span>
<span class="c">#my $DATAFILE  = &quot;/home/sequence/alDente/WebVersions/Production/conf/barcodes.dat&quot;</span>
<span class="k">use</span> <span class="w">FindBin</span><span class="sc">;</span>
<span class="k">my</span> <span class="i">$DATAFILE</span> = <span class="i">$FindBin::RealBin</span> . <span class="q">&quot;/../conf/barcodes.dat&quot;</span><span class="sc">;</span>    <span class="c">## &lt;CONSTRUCTION&gt;</span>

<span class="c">#my $LOGFILE  = &quot;/home/sequence/alDente/logs/barcode.log&quot;;</span>
<span class="k">my</span> <span class="i">$LOGFILE</span>  = <span class="q">&quot;/home/aldente/public/logs/barcode.log&quot;</span><span class="sc">;</span>
<span class="k">my</span> <span class="i">$LPRQUEUE</span> = <span class="q">&quot;zp1&quot;</span><span class="sc">;</span>

<span class="c">## Default settings ##</span>
<span class="k">my</span> <span class="i">%Default</span><span class="sc">;</span>
<span class="i">$Default</span>{<span class="w">height</span>} = <span class="n">0.75</span><span class="sc">;</span>
<span class="i">$Default</span>{<span class="w">width</span>}  = <span class="n">2.25</span><span class="sc">;</span>
<span class="i">$Default</span>{<span class="w">zero_x</span>} = <span class="n">25</span><span class="sc">;</span>
<span class="i">$Default</span>{<span class="w">zero_y</span>} = <span class="n">25</span><span class="sc">;</span>
<span class="i">$Default</span>{<span class="w">top</span>}    = <span class="n">15</span><span class="sc">;</span>

<span class="c"># Printer resolution - DO NOT CHANGE THIS</span>
<span class="i">$Default</span>{<span class="w">DPI</span>}         = <span class="n">200</span><span class="sc">;</span>    <span class="c">## default scale DPI</span>
<span class="i">$Default</span>{<span class="w">printer_DPI</span>} = <span class="n">200</span><span class="sc">;</span>    <span class="c">## default printer DPI</span>

<span class="c">#  my $Large_Label_Printer = &quot;zp1&quot;;</span>

<span class="c"># Screen resolution - ALTER IF REQUIRED. Use 72 for a 1:1 size ratio between</span>
<span class="c"># the label and the screen image. Use &gt; 72 for larger labels on the screen, and</span>
<span class="c"># &lt; 72 for smaller ones. Because the screen DPI is less than the printers, some</span>
<span class="c"># small text will not be clear on the screen if DPIs=72.</span>
<span class="k">my</span> <span class="i">$DPIs</span> = <span class="n">100</span><span class="sc">;</span>

<span class="k">my</span> <span class="i">@std_keys</span>             = <span class="q">qw(name format style posx posy size opts value barcode sample)</span><span class="sc">;</span>
<span class="k">my</span> <span class="i">@mandatory_keys</span>       = <span class="q">qw(posx posy size value)</span><span class="sc">;</span>
<span class="k">my</span> <span class="i">@mandatory_attributes</span> = <span class="q">qw(height zero_x zero_y top)</span><span class="sc">;</span>

<span class="s">{</span>
    <span class="k">my</span> <span class="i">%_attrs</span> = <span class="s">(</span>
        <span class="w">_id</span>      <span class="cm">=&gt;</span> <span class="q">'read'</span><span class="cm">,</span>
        <span class="w">_comment</span> <span class="cm">=&gt;</span> <span class="q">'read/write'</span><span class="cm">,</span>
        <span class="w">_fields</span>  <span class="cm">=&gt;</span> <span class="q">'read'</span><span class="cm">,</span>
        <span class="w">_height</span>  <span class="cm">=&gt;</span> <span class="q">'read/write'</span><span class="cm">,</span>
        <span class="w">_width</span>   <span class="cm">=&gt;</span> <span class="q">'read/write'</span><span class="cm">,</span>
        <span class="w">_valid</span>   <span class="cm">=&gt;</span> <span class="q">'read/write'</span><span class="cm">,</span>
        <span class="w">_zero_x</span>  <span class="cm">=&gt;</span> <span class="q">'read/write'</span><span class="cm">,</span>
        <span class="w">_zero_y</span>  <span class="cm">=&gt;</span> <span class="q">'read/write'</span><span class="cm">,</span>
        <span class="w">_top</span>     <span class="cm">=&gt;</span> <span class="q">'read/write'</span><span class="cm">,</span>
    <span class="s">)</span><span class="sc">;</span>
<span class="s">}</span>

<a name="Barcode::DESTROY-"></a><span class="k">sub </span><span class="m">Barcode::DESTROY</span> <span class="s">{</span>
<span class="s">}</span>

<span class="c">## (removed AUTOLOAD for get_&lt;attribute&gt;) ##</span>

<span class="c">###########</span>
<a name="new-"></a><span class="k">sub </span><span class="m">new</span> <span class="s">{</span>
<span class="c">###########</span>
    <span class="k">my</span> <span class="i">$class</span>    = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">%args</span>     = <span class="i">@_</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$type</span>     = <span class="i">$args</span>{-<span class="w">type</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$id</span>       = <span class="i">$args</span>{-<span class="w">id</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$labels</span>   = <span class="i">$args</span>{-<span class="w">labels</span>}<span class="sc">;</span>                  <span class="c">### allow for custom specification of labels.</span>
    <span class="k">my</span> <span class="i">$datafile</span> = <span class="i">$args</span>{-<span class="w">datafile</span>} || <span class="i">$DATAFILE</span><span class="sc">;</span>

    <span class="k">my</span> <span class="i">$self</span> = <span class="s">{</span>
        <span class="w">id</span>          <span class="cm">=&gt;</span> <span class="i">$id</span><span class="cm">,</span>
        <span class="w">comment</span>     <span class="cm">=&gt;</span> <span class="k">undef</span><span class="cm">,</span>
        <span class="w">fields</span>      <span class="cm">=&gt;</span> <span class="k">undef</span><span class="cm">,</span>
        <span class="w">valid</span>       <span class="cm">=&gt;</span> <span class="n">0</span><span class="cm">,</span>
        <span class="w">height</span>      <span class="cm">=&gt;</span> <span class="i">$args</span>{-<span class="w">height</span>}<span class="cm">,</span>
        <span class="w">width</span>       <span class="cm">=&gt;</span> <span class="i">$args</span>{-<span class="w">width</span>}<span class="cm">,</span>
        <span class="w">zero_x</span>      <span class="cm">=&gt;</span> <span class="i">$args</span>{-<span class="w">zero_x</span>}<span class="cm">,</span>
        <span class="w">zero_y</span>      <span class="cm">=&gt;</span> <span class="i">$args</span>{-<span class="w">zero_y</span>}<span class="cm">,</span>
        <span class="w">top</span>         <span class="cm">=&gt;</span> <span class="i">$args</span>{-<span class="w">top</span>}<span class="cm">,</span>
        <span class="w">scale_DPI</span>   <span class="cm">=&gt;</span> <span class="i">$args</span>{-<span class="w">dpi</span>} || <span class="i">$Default</span>{<span class="w">DPI</span>}<span class="cm">,</span>
        <span class="w">printer_DPI</span> <span class="cm">=&gt;</span> <span class="i">$args</span>{-<span class="w">printer_dpi</span>}<span class="cm">,</span>
    <span class="s">}</span><span class="sc">;</span>

    <span class="k">bless</span> <span class="i">$self</span><span class="cm">,</span> <span class="i">$class</span><span class="sc">;</span>

    <span class="i">$self</span>-&gt;{<span class="w">printer</span>} = <span class="q">''</span><span class="sc">;</span>    <span class="c">## initialize printer setting (may be defined)</span>

    <span class="k">if</span> <span class="s">(</span><span class="i">$labels</span><span class="s">)</span> <span class="s">{</span>            <span class="c">## labels specified explicitly (custom)</span>
        <span class="i">$self</span><span class="i">-&gt;set_attribute</span><span class="s">(</span> <span class="q">'type'</span><span class="cm">,</span> <span class="i">$type</span> <span class="s">)</span> <span class="k">if</span> <span class="i">$type</span><span class="sc">;</span>
        <span class="k">return</span> <span class="i">$self</span><span class="i">-&gt;specify_labels</span><span class="s">(</span><span class="i">%args</span><span class="s">)</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">elsif</span> <span class="s">(</span><span class="i">$type</span><span class="s">)</span> <span class="s">{</span>           <span class="c">## standard label initialized (from std file or from database)</span>
        <span class="k">return</span> <span class="i">$self</span><span class="i">-&gt;load_from_file</span><span class="s">(</span> <span class="i">$type</span><span class="cm">,</span> <span class="i">$datafile</span> <span class="s">)</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">else</span> <span class="s">{</span>
        <span class="i">carp</span><span class="s">(</span><span class="q">'no type or labels specified'</span><span class="s">)</span><span class="sc">;</span>
    <span class="s">}</span>

    <span class="k">return</span> <span class="i">$self</span><span class="sc">;</span>             <span class="c">## still requires label specification ##</span>
<span class="s">}</span>

<span class="c">#########################################################################</span>
<span class="c"># load barcode object from configuration file given barcode label name</span>
<span class="c">#</span>
<span class="c">#</span>
<span class="c"># Return: $self (barcode object) on success [undef on failure]</span>
<span class="c">########################</span>
<a name="load_from_file-"></a><span class="k">sub </span><span class="m">load_from_file</span> <span class="s">{</span>
<span class="c">########################</span>
    <span class="k">my</span> <span class="i">$self</span>       = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$label_name</span> = <span class="k">shift</span><span class="sc">;</span>                 <span class="c">## label name</span>
    <span class="k">my</span> <span class="i">$file</span>       = <span class="k">shift</span> || <span class="i">$DATAFILE</span><span class="sc">;</span>    <span class="c">## label configuration file</span>
    <span class="k">my</span> <span class="i">$debug</span>      = <span class="k">shift</span><span class="sc">;</span>

    <span class="k">unless</span> <span class="s">(</span><span class="i">$label_name</span><span class="s">)</span> <span class="s">{</span>
        <span class="k">print</span> <span class="q">&quot;** user must specify a label name to use **\n&quot;</span><span class="sc">;</span>
        <span class="k">return</span><span class="sc">;</span>
    <span class="s">}</span>

    <span class="k">if</span> <span class="s">(</span> !<span class="k">-e</span> <span class="i">$file</span> || !<span class="k">-r</span> <span class="i">_</span> <span class="s">)</span> <span class="s">{</span>
        <span class="w">carp</span> <span class="q">&quot;Can't open barcode data file $file&quot;</span><span class="sc">;</span>
    <span class="s">}</span>

    <span class="c">## set default settings ##</span>
    <span class="k">foreach</span> <span class="k">my</span> <span class="i">$attribute</span> <span class="s">(</span><span class="i">@mandatory_attributes</span><span class="s">)</span> <span class="s">{</span>
        <span class="i">$self</span><span class="i">-&gt;set_attribute</span><span class="s">(</span> <span class="i">$attribute</span><span class="cm">,</span> <span class="i">$Default</span>{<span class="i">$attribute</span>} <span class="s">)</span><span class="sc">;</span>
    <span class="s">}</span>

    <span class="k">my</span> <span class="i">$FILE</span><span class="sc">;</span>
    <span class="k">open</span> <span class="i">$FILE</span><span class="cm">,</span> <span class="i">$file</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$found</span> = <span class="n">0</span><span class="sc">;</span>
    <span class="k">while</span> <span class="s">(</span><span class="q">&lt;$FILE&gt;</span><span class="s">)</span> <span class="s">{</span>
        <span class="k">chop</span><span class="sc">;</span>
        <span class="k">if</span> <span class="s">(</span><span class="q">/^\#/</span><span class="s">)</span>   <span class="s">{</span><span class="k">next</span><span class="s">}</span>    <span class="c">## skip comment lines</span>
        <span class="k">if</span> <span class="s">(</span><span class="q">/^\s*$/</span><span class="s">)</span> <span class="s">{</span><span class="k">next</span><span class="s">}</span>    <span class="c">## skip blank lines</span>

        <span class="k">my</span> <span class="i">$line</span> = <span class="i">$_</span><span class="sc">;</span>
        <span class="k">if</span> <span class="s">(</span><span class="i">$found</span><span class="s">)</span> <span class="s">{</span>
            <span class="c">## after having found the specfied label ##</span>
            <span class="k">if</span> <span class="s">(</span><span class="q">/^\[(.*)\]/</span><span class="s">)</span> <span class="s">{</span><span class="k">last</span><span class="s">}</span>    <span class="c">## next label found -&gt; escape now.</span>
            <span class="q">s/^\s*(.*)\s*$/$1/g</span><span class="sc">;</span>
            <span class="k">my</span> <span class="i">@line</span> = <span class="k">split</span><span class="s">(</span> <span class="q">/\s+/</span><span class="cm">,</span> <span class="i">$_</span> <span class="s">)</span><span class="sc">;</span>
            <span class="c">## check for general label attributes ##</span>
            <span class="k">if</span> <span class="s">(</span> <span class="i">$line</span>[<span class="n">0</span>] <span class="k">eq</span> <span class="q">&quot;HEIGHT&quot;</span> <span class="s">)</span> <span class="s">{</span>
                <span class="i">$self</span><span class="i">-&gt;set_attribute</span><span class="s">(</span> <span class="q">'height'</span><span class="cm">,</span> <span class="i">$line</span>[<span class="n">1</span>] <span class="s">)</span><span class="sc">;</span>
                <span class="k">next</span><span class="sc">;</span>
            <span class="s">}</span>
            <span class="k">elsif</span> <span class="s">(</span> <span class="i">$line</span>[<span class="n">0</span>] <span class="k">eq</span> <span class="q">&quot;WIDTH&quot;</span> <span class="s">)</span> <span class="s">{</span>
                <span class="i">$self</span><span class="i">-&gt;set_attribute</span><span class="s">(</span> <span class="q">'width'</span><span class="cm">,</span> <span class="i">$line</span>[<span class="n">1</span>] <span class="s">)</span><span class="sc">;</span>
                <span class="k">next</span><span class="sc">;</span>
            <span class="s">}</span>
            <span class="k">elsif</span> <span class="s">(</span> <span class="i">$line</span>[<span class="n">0</span>] <span class="k">eq</span> <span class="q">&quot;TOP&quot;</span> <span class="s">)</span> <span class="s">{</span>
                <span class="i">$self</span><span class="i">-&gt;set_attribute</span><span class="s">(</span> <span class="q">'top'</span><span class="cm">,</span> <span class="i">$line</span>[<span class="n">1</span>] <span class="s">)</span><span class="sc">;</span>
                <span class="k">next</span><span class="sc">;</span>
            <span class="s">}</span>
            <span class="k">elsif</span> <span class="s">(</span> <span class="i">$line</span>[<span class="n">0</span>] <span class="k">eq</span> <span class="q">&quot;ZERO&quot;</span> <span class="s">)</span> <span class="s">{</span>
                <span class="k">my</span> <span class="s">(</span> <span class="i">$zero_x</span><span class="cm">,</span> <span class="i">$zero_y</span> <span class="s">)</span> = <span class="k">split</span><span class="s">(</span> <span class="q">/,/</span><span class="cm">,</span> <span class="i">$line</span>[<span class="n">1</span>] <span class="s">)</span><span class="sc">;</span>
                <span class="i">$self</span><span class="i">-&gt;set_attribute</span><span class="s">(</span> <span class="q">'zero_x'</span><span class="cm">,</span> <span class="i">$zero_x</span> <span class="s">)</span><span class="sc">;</span>
                <span class="i">$self</span><span class="i">-&gt;set_attribute</span><span class="s">(</span> <span class="q">'zero_y'</span><span class="cm">,</span> <span class="i">$zero_y</span> <span class="s">)</span><span class="sc">;</span>
                <span class="k">next</span><span class="sc">;</span>
            <span class="s">}</span>
            <span class="k">elsif</span> <span class="s">(</span> <span class="i">$line</span>[<span class="n">0</span>] <span class="k">eq</span> <span class="q">&quot;DPI&quot;</span> <span class="s">)</span> <span class="s">{</span>
                <span class="i">$self</span><span class="i">-&gt;set_attribute</span><span class="s">(</span> <span class="q">'scale_DPI'</span><span class="cm">,</span> <span class="i">$line</span>[<span class="n">1</span>] <span class="s">)</span><span class="sc">;</span>
                <span class="k">next</span><span class="sc">;</span>
            <span class="s">}</span>
            <span class="k">else</span> <span class="s">{</span>
                <span class="c">## if not standard label attributes, above, the line should contain individual label elements ##</span>
                <span class="k">if</span> <span class="s">(</span> <span class="i">@line</span> &lt; <span class="n">4</span> <span class="s">)</span> <span class="s">{</span>
                    <span class="k">print</span> <span class="q">&quot;Incorrect number of fields in $file $label_name label.\n(@line)\n&quot;</span><span class="sc">;</span>
                    <span class="k">return</span><span class="sc">;</span>
                <span class="s">}</span>
                <span class="k">my</span> <span class="i">$field</span>  = <span class="i">$line</span>[<span class="n">0</span>]<span class="sc">;</span>
                <span class="k">my</span> <span class="i">$format</span> = <span class="i">$line</span>[<span class="n">1</span>]<span class="sc">;</span>
                <span class="k">my</span> <span class="i">$pos</span>    = <span class="i">$line</span>[<span class="n">2</span>]<span class="sc">;</span>
                <span class="k">my</span> <span class="s">(</span> <span class="i">$posx</span><span class="cm">,</span> <span class="i">$posy</span> <span class="s">)</span><span class="sc">;</span>
                <span class="k">if</span> <span class="s">(</span> <span class="i">$pos</span> =~ <span class="q">/(.*),(.*)/</span> <span class="s">)</span> <span class="s">{</span>
                    <span class="i">$posx</span> = <span class="i">$1</span><span class="sc">;</span>
                    <span class="i">$posy</span> = <span class="i">$2</span><span class="sc">;</span>
                <span class="s">}</span>
                <span class="k">else</span> <span class="s">{</span>
                    <span class="k">print</span> <span class="q">&quot;X,Y coordinates incorrectly specified in $label_name.$field.\n&quot;</span><span class="sc">;</span>
                    <span class="k">return</span><span class="sc">;</span>
                <span class="s">}</span>
                <span class="k">my</span> <span class="i">$size</span>  = <span class="i">$line</span>[<span class="n">3</span>]<span class="sc">;</span>
                <span class="k">my</span> <span class="i">$opts</span>  = <span class="i">$line</span>[<span class="n">4</span>] || <span class="q">&quot;&quot;</span><span class="sc">;</span>
                <span class="k">my</span> <span class="i">$style</span> = <span class="i">$line</span>[<span class="n">5</span>] || <span class="q">'text'</span><span class="sc">;</span>
                <span class="i">$self</span>-&gt;{<span class="w">fields</span>}{<span class="i">$field</span>}{<span class="q">'format'</span>} = <span class="i">$format</span><span class="sc">;</span>
                <span class="i">$self</span>-&gt;{<span class="w">fields</span>}{<span class="i">$field</span>}{<span class="q">'posx'</span>}   = <span class="i">$posx</span><span class="sc">;</span>
                <span class="i">$self</span>-&gt;{<span class="w">fields</span>}{<span class="i">$field</span>}{<span class="q">'posy'</span>}   = <span class="i">$posy</span><span class="sc">;</span>
                <span class="i">$self</span>-&gt;{<span class="w">fields</span>}{<span class="i">$field</span>}{<span class="q">'size'</span>}   = <span class="i">$size</span><span class="sc">;</span>
                <span class="i">$self</span>-&gt;{<span class="w">fields</span>}{<span class="i">$field</span>}{<span class="q">'style'</span>}  = <span class="i">$style</span><span class="sc">;</span>
                <span class="i">$self</span>-&gt;{<span class="w">fields</span>}{<span class="i">$field</span>}{<span class="q">'opts'</span>}   = <span class="i">$opts</span><span class="sc">;</span>

                <span class="k">if</span> <span class="s">(</span> <span class="i">$opts</span> =~ <span class="q">/s=\&quot;(.*?)\&quot;/</span> <span class="s">)</span> <span class="s">{</span>
                    <span class="k">my</span> <span class="i">$samplevalue</span><span class="sc">;</span>
                    <span class="k">if</span> <span class="s">(</span> <span class="i">$1</span> <span class="k">eq</span> <span class="q">&quot;today&quot;</span> <span class="s">)</span> <span class="s">{</span>
                        <span class="i">$samplevalue</span> = <span class="i">strftime</span><span class="s">(</span> <span class="q">&quot;%Y-%m-%d&quot;</span><span class="cm">,</span> <span class="k">localtime</span> <span class="s">)</span><span class="sc">;</span>
                    <span class="s">}</span>
                    <span class="k">else</span> <span class="s">{</span>
                        <span class="i">$samplevalue</span> = <span class="i">$1</span><span class="sc">;</span>
                    <span class="s">}</span>
                    <span class="i">$self</span>-&gt;{<span class="w">fields</span>}{<span class="i">$field</span>}{<span class="q">'sample'</span>} = <span class="i">$samplevalue</span><span class="sc">;</span>
                <span class="s">}</span>
                <span class="k">else</span> <span class="s">{</span>
                    <span class="i">$self</span>-&gt;{<span class="w">fields</span>}{<span class="i">$field</span>}{<span class="q">'sample'</span>} = <span class="q">&quot;-&quot;</span><span class="sc">;</span>
                <span class="s">}</span>
            <span class="s">}</span>
        <span class="s">}</span>
        <span class="k">if</span> <span class="s">(</span> <span class="i">$line</span> =~ <span class="q">/\[$label_name\]\s*(.*)\s*/</span> <span class="s">)</span> <span class="s">{</span>
            <span class="i">$self</span><span class="i">-&gt;set_attribute</span><span class="s">(</span> <span class="q">'comment'</span><span class="cm">,</span> <span class="i">$1</span> <span class="s">)</span><span class="sc">;</span>
            <span class="i">$found</span> = <span class="n">1</span><span class="sc">;</span>
        <span class="s">}</span>
    <span class="s">}</span>
    <span class="k">close</span> <span class="i">$FILE</span><span class="sc">;</span>

    <span class="k">return</span> <span class="k">unless</span> <span class="i">$found</span><span class="sc">;</span>    <span class="c">## if label_name does not exist in file</span>
    <span class="i">$self</span><span class="i">-&gt;set_attribute</span><span class="s">(</span> <span class="q">'type'</span><span class="cm">,</span>  <span class="i">$label_name</span> <span class="s">)</span><span class="sc">;</span>
    <span class="i">$self</span><span class="i">-&gt;set_attribute</span><span class="s">(</span> <span class="q">'valid'</span><span class="cm">,</span> <span class="n">1</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">return</span> <span class="i">$self</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">#################</span>
<span class="c"># build zpl string from scratch</span>
<span class="c">#</span>
<span class="c"># Generally, this method should be called indirectly when the object is created by including a -labels parameter as in the following example:</span>
<span class="c">#</span>
<span class="c"># &lt;SNIP&gt;</span>
<span class="c">#</span>
<span class="c">#    my $label1 = {</span>
<span class="c">#	'-name' =&gt;'label1',</span>
<span class="c">#        '-value' =&gt;'label text',</span>
<span class="c">#	'-posx'   =&gt;5,</span>
<span class="c">#	'-posy'   =&gt;5,</span>
<span class="c">#	'-size'   =&gt;30,</span>
<span class="c">#	'-opts'   =&gt;'',</span>
<span class="c">#	'-format' =&gt; '',</span>
<span class="c">#        '-style'  =&gt; 'text',</span>
<span class="c">#    };</span>
<span class="c">#    my $label2 = {</span>
<span class="c">#	'-name'    =&gt;'barcode',</span>
<span class="c">#	'-value' =&gt;'code128',</span>
<span class="c">#	'-barcode' =&gt; 'testlabel',</span>
<span class="c"># 	'-posx'   =&gt;15,</span>
<span class="c">#	'-posy'   =&gt;15,</span>
<span class="c">#	'-size'   =&gt;40,</span>
<span class="c">#	'-opts'   =&gt;'',</span>
<span class="c">#	'-format' =&gt; '',</span>
<span class="c">#    };</span>
<span class="c">#</span>
<span class="c">#    my $ok = new Barcode(</span>
<span class="c">#		-labels=&gt;[$label1,$label2],</span>
<span class="c">#		-height=&gt;0.75,</span>
<span class="c">#		-width=&gt;2.25,</span>
<span class="c">#		-top=&gt;15,</span>
<span class="c">#		-zero_x=&gt;25,</span>
<span class="c">#		-zero_y=&gt;25,</span>
<span class="c">#		);</span>
<span class="c">#</span>
<span class="c">#   $ok-&gt;lprprint(-printer=&gt;'urania');</span>
<span class="c">#</span>
<span class="c">#   &lt;/SNIP&gt;</span>
<span class="c">#</span>
<span class="c"># Return: barcode object ($self) or undef on error]</span>
<span class="c">#######################</span>
<a name="specify_labels-"></a><span class="k">sub </span><span class="m">specify_labels</span> <span class="s">{</span>
<span class="c">#######################</span>
    <span class="k">my</span> <span class="i">$self</span>      = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">%args</span>      = <span class="i">@_</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$labels</span>    = <span class="i">$args</span>{-<span class="w">labels</span>} <span class="k">if</span> <span class="k">defined</span> <span class="i">$args</span>{ - <span class="w">labels</span> }<span class="sc">;</span>    <span class="c">## mandatory array of hashes (each hash containing keys: format, posx, posy, size, opts, text</span>
    <span class="k">my</span> <span class="i">$zero_x</span>    = <span class="i">$args</span>{-<span class="w">zero_x</span>} || <span class="i">$Default</span>{<span class="w">zero_y</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$zero_y</span>    = <span class="i">$args</span>{-<span class="w">zero_y</span>} || <span class="i">$Default</span>{<span class="w">zero_x</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$height</span>    = <span class="i">$args</span>{-<span class="w">height</span>} || <span class="i">$Default</span>{<span class="w">height</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$width</span>     = <span class="i">$args</span>{-<span class="w">width</span>} || <span class="i">$Default</span>{<span class="w">width</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$top</span>       = <span class="i">$args</span>{-<span class="w">top</span>} || <span class="i">$Default</span>{<span class="w">top</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$scale_DPI</span> = <span class="i">$args</span>{-<span class="w">dpi</span>} || <span class="i">$Default</span>{<span class="w">DPI</span>}<span class="sc">;</span>

    <span class="k">my</span> <span class="i">@keys</span><span class="sc">;</span>
    <span class="k">if</span> <span class="s">(</span> <span class="i">$labels</span> &amp;&amp; <span class="k">ref</span> <span class="i">$labels</span> <span class="k">eq</span> <span class="q">'ARRAY'</span> <span class="s">)</span> <span class="s">{</span>
        <span class="i">@keys</span> = <span class="i">@$labels</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">else</span> <span class="s">{</span>
        <span class="w">carp</span> <span class="q">&quot;Labels should be ARRAY instead of &quot;</span> . <span class="k">ref</span> <span class="i">$labels</span><span class="sc">;</span>
        <span class="k">return</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="c">## set overall label settings (as defined or to default settings) ##</span>
    <span class="i">$self</span><span class="i">-&gt;set_attribute</span><span class="s">(</span> <span class="q">'height'</span><span class="cm">,</span>    <span class="i">$height</span> <span class="s">)</span><span class="sc">;</span>
    <span class="i">$self</span><span class="i">-&gt;set_attribute</span><span class="s">(</span> <span class="q">'width'</span><span class="cm">,</span>     <span class="i">$width</span> <span class="s">)</span><span class="sc">;</span>
    <span class="i">$self</span><span class="i">-&gt;set_attribute</span><span class="s">(</span> <span class="q">'top'</span><span class="cm">,</span>       <span class="i">$top</span> <span class="s">)</span><span class="sc">;</span>
    <span class="i">$self</span><span class="i">-&gt;set_attribute</span><span class="s">(</span> <span class="q">'zero_x'</span><span class="cm">,</span>    <span class="i">$zero_x</span> <span class="s">)</span><span class="sc">;</span>
    <span class="i">$self</span><span class="i">-&gt;set_attribute</span><span class="s">(</span> <span class="q">'zero_y'</span><span class="cm">,</span>    <span class="i">$zero_y</span> <span class="s">)</span><span class="sc">;</span>
    <span class="i">$self</span><span class="i">-&gt;set_attribute</span><span class="s">(</span> <span class="q">'scale_dpi'</span><span class="cm">,</span> <span class="i">$scale_DPI</span> <span class="s">)</span><span class="sc">;</span>

    <span class="k">unless</span> <span class="s">(</span> <span class="k">ref</span> <span class="i">$keys</span>[<span class="n">0</span>] <span class="k">eq</span> <span class="q">'HASH'</span> <span class="s">)</span> <span class="s">{</span>
        <span class="k">my</span> <span class="i">$ref</span> = <span class="k">ref</span> <span class="i">$keys</span>[<span class="n">0</span>]<span class="sc">;</span>
        <span class="w">carp</span> <span class="q">&quot;Array should contain hash references (found $ref).&quot;</span><span class="sc">;</span>
        <span class="k">return</span><span class="sc">;</span>
    <span class="s">}</span>

    <span class="k">my</span> <span class="i">@labels</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$index</span> = <span class="n">1</span><span class="sc">;</span>    <span class="c">## start with 'L1' for unnamed labels ...</span>
    <span class="k">foreach</span> <span class="k">my</span> <span class="i">$label</span> <span class="s">(</span><span class="i">@keys</span><span class="s">)</span> <span class="s">{</span>
        <span class="k">my</span> <span class="i">%hash</span>       = <span class="i">%$label</span><span class="sc">;</span>
        <span class="k">my</span> <span class="i">@label_keys</span> = <span class="k">keys</span> <span class="i">%$label</span><span class="sc">;</span>
        <span class="k">my</span> <span class="i">$label_name</span> = <span class="i">$label</span>-&gt;{-<span class="w">name</span>} || <span class="q">&quot;L&quot;</span> . <span class="i">$index</span>++<span class="sc">;</span>
        <span class="k">unless</span> <span class="s">(</span><span class="i">$label_name</span><span class="s">)</span> <span class="s">{</span>
            <span class="i">_Message</span><span class="s">(</span><span class="q">&quot;** No name specified for label&quot;</span><span class="s">)</span><span class="sc">;</span>
            <span class="k">next</span><span class="sc">;</span>
        <span class="s">}</span>
        <span class="k">push</span><span class="s">(</span> <span class="i">@labels</span><span class="cm">,</span> <span class="i">$label_name</span> <span class="s">)</span><span class="sc">;</span>
        <span class="k">foreach</span> <span class="k">my</span> <span class="i">$std_key</span> <span class="s">(</span><span class="i">@std_keys</span><span class="s">)</span> <span class="s">{</span>
            <span class="i">$self</span>-&gt;{<span class="w">fields</span>}{<span class="q">&quot;$label_name&quot;</span>}{<span class="q">&quot;$std_key&quot;</span>} = <span class="i">$hash</span>{<span class="q">&quot;-$std_key&quot;</span>} <span class="k">if</span> <span class="k">defined</span> <span class="i">$hash</span>{<span class="q">&quot;-$std_key&quot;</span>}<span class="sc">;</span>
        <span class="s">}</span>

        <span class="c">#	if (defined $label-&gt;{barcode}) { $self-&gt;{fields}{barcode}{barcode} = $label-&gt;{barcode} }</span>
        <span class="c">#	if (defined $hash{'-barcode'}) { $self-&gt;{fields}{barcode}{barcode} = $label-&gt;{barcode} }</span>
        <span class="i">$self</span>-&gt;{<span class="w">fields</span>}{<span class="q">&quot;$label_name&quot;</span>}{<span class="q">'style'</span>} ||= <span class="q">'text'</span><span class="sc">;</span>    <span class="c">## set default style</span>
    <span class="s">}</span>

    <span class="c">## ensure mandatory fields entered ##</span>
    <span class="k">my</span> <span class="i">$incomplete</span> = <span class="n">0</span><span class="sc">;</span>
    <span class="k">foreach</span> <span class="k">my</span> <span class="i">$mandatory_key</span> <span class="s">(</span><span class="i">@mandatory_keys</span><span class="s">)</span> <span class="s">{</span>
        <span class="k">foreach</span> <span class="k">my</span> <span class="i">$label_name</span> <span class="s">(</span><span class="i">@labels</span><span class="s">)</span> <span class="s">{</span>
            <span class="k">unless</span> <span class="s">(</span> <span class="k">defined</span> <span class="i">$self</span>-&gt;{<span class="w">fields</span>}{<span class="q">&quot;$label_name&quot;</span>}{<span class="i">$mandatory_key</span>} <span class="s">)</span> <span class="s">{</span>
                <span class="i">carp</span><span class="s">(</span><span class="q">&quot;Missing mandatory $mandatory_key (in $label_name)&quot;</span><span class="s">)</span><span class="sc">;</span>
                <span class="i">$incomplete</span>++<span class="sc">;</span>
            <span class="s">}</span>
        <span class="s">}</span>
    <span class="s">}</span>
    <span class="k">if</span> <span class="s">(</span><span class="i">$incomplete</span><span class="s">)</span> <span class="s">{</span> <span class="i">carp</span><span class="s">(</span><span class="q">&quot;still missing mandatory fields&quot;</span><span class="s">)</span><span class="sc">;</span> <span class="s">}</span>
    <span class="i">$self</span><span class="i">-&gt;set_attribute</span><span class="s">(</span> <span class="q">'valid'</span><span class="cm">,</span> <span class="n">1</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">return</span> <span class="i">$self</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">###################</span>
<span class="c">#</span>
<span class="c"># Set up object fields based upon type or input</span>
<span class="c">#</span>
<span class="c"># &lt;snip&gt;</span>
<span class="c"># Example:</span>
<span class="c">#   # $bc-&gt;set_fields(</span>
<span class="c">#</span>
<span class="c">#</span>
<span class="c">###################</span>
<a name="set_fields-"></a><span class="k">sub </span><span class="m">set_fields</span> <span class="s">{</span>
<span class="c">###################</span>
    <span class="k">my</span> <span class="i">$self</span>  = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">%input</span> = <span class="i">@_</span><span class="sc">;</span>

    <span class="k">my</span> <span class="i">$use_sample</span> = <span class="i">$input</span>{-<span class="w">sample</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$valid</span>      = <span class="n">1</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$field</span><span class="sc">;</span>

    <span class="k">unless</span> <span class="s">(</span> <span class="i">$self</span><span class="i">-&gt;get_fields</span> <span class="s">)</span> <span class="s">{</span>
        <span class="k">return</span> !<span class="i">carp</span><span class="s">(</span><span class="q">&quot;* Error - must specify labels or upload type details first&quot;</span><span class="s">)</span><span class="sc">;</span>
    <span class="s">}</span>

    <span class="k">my</span> <span class="i">@keys</span> = <span class="k">keys</span> <span class="i">%input</span><span class="sc">;</span>
    <span class="k">foreach</span> <span class="i">$field</span> <span class="s">(</span> <span class="i">$self</span><span class="i">-&gt;get_fields</span> <span class="s">)</span> <span class="s">{</span>

        <span class="c"># Check if each of the fields defined for the label is present in the arguments</span>
        <span class="k">my</span> <span class="i">$input_value</span> = <span class="q">''</span><span class="sc">;</span>
        <span class="k">if</span> <span class="s">(</span> <span class="i">$input</span>{<span class="i">$field</span>} <span class="s">)</span> <span class="s">{</span>
            <span class="c">## defined input ...</span>
        <span class="s">}</span>
        <span class="k">elsif</span> <span class="s">(</span><span class="i">$use_sample</span><span class="s">)</span> <span class="s">{</span>
            <span class="i">$self</span>-&gt;{<span class="w">fields</span>}{<span class="i">$field</span>}{<span class="q">'value'</span>} ||= <span class="i">$self</span>-&gt;{<span class="w">fields</span>}{<span class="i">$field</span>}{<span class="q">'sample'</span>}<span class="sc">;</span>
            <span class="i">$input</span>{<span class="i">$field</span>} = <span class="i">$self</span>-&gt;{<span class="w">fields</span>}{<span class="i">$field</span>}{<span class="q">'sample'</span>}<span class="sc">;</span>

            <span class="c">#	    if ($self-&gt;{fields}{$field}{'value'} =~/^code/) { ## barcode ##</span>
            <span class="c">#		$self-&gt;{fields}{$field}{'barcode'} = 'code128';</span>
            <span class="c">#	    }</span>
            <span class="c">#	    elsif ($self-&gt;{fields}{$field}{'value'} =~/^code/) { ## barcode ##</span>
            <span class="c">#		$self-&gt;{fields}{$field}{'barcode'} = 'datamatrix';</span>
            <span class="c">#	    }</span>
            <span class="k">next</span><span class="sc">;</span>
        <span class="s">}</span>
        <span class="k">elsif</span> <span class="s">(</span> <span class="s">(</span> <span class="k">defined</span> <span class="i">$input</span>{<span class="i">$field</span>} <span class="s">)</span> || <span class="s">(</span> <span class="i">$self</span><span class="i">-&gt;get_field_attribute</span><span class="s">(</span> <span class="i">$field</span><span class="cm">,</span> <span class="q">&quot;opts&quot;</span> <span class="s">)</span> =~ <span class="q">/optional/</span> <span class="s">)</span> <span class="s">)</span> <span class="s">{</span>
            <span class="c">## ok if nothing defined in this case...  ##</span>
        <span class="s">}</span>
        <span class="k">elsif</span> <span class="s">(</span> <span class="s">(</span> <span class="k">defined</span> <span class="i">$input</span>{<span class="i">$field</span>} <span class="s">)</span> || <span class="s">(</span> <span class="i">$self</span><span class="i">-&gt;get_field_attribute</span><span class="s">(</span> <span class="i">$field</span><span class="cm">,</span> <span class="q">&quot;format&quot;</span> <span class="s">)</span> <span class="k">eq</span> <span class="q">'.*'</span> <span class="s">)</span> <span class="s">)</span> <span class="s">{</span>
            <span class="c">## ok if nothing defined in this case...  ##</span>
        <span class="s">}</span>
        <span class="k">elsif</span> <span class="s">(</span> <span class="k">defined</span> <span class="i">$self</span>-&gt;{<span class="w">fields</span>}{<span class="i">$field</span>}{<span class="w">value</span>} <span class="s">)</span> <span class="s">{</span>
            <span class="c">## ok - it may have been defined earlier ##</span>
        <span class="s">}</span>
        <span class="k">else</span> <span class="s">{</span>
            <span class="k">print</span> <span class="q">&quot;Field $field not defined in arguments.&quot;</span><span class="sc">;</span>
            <span class="k">print</span> <span class="i">Dumper</span><span class="s">(</span> <span class="i">$self</span>-&gt;{<span class="w">fields</span>}{<span class="i">$field</span>} <span class="s">)</span><span class="sc">;</span>
            <span class="i">$valid</span> = <span class="n">0</span><span class="sc">;</span>
            <span class="k">next</span><span class="sc">;</span>
        <span class="s">}</span>

        <span class="i">$input_value</span> = <span class="i">$input</span>{<span class="i">$field</span>} <span class="k">if</span> <span class="s">(</span> <span class="k">defined</span> <span class="i">$input</span>{<span class="i">$field</span>} <span class="s">)</span><span class="sc">;</span>

        <span class="k">if</span> <span class="s">(</span> <span class="k">defined</span> <span class="i">$input_value</span> &amp;&amp; !<span class="s">(</span> <span class="i">$self</span><span class="i">-&gt;_validate</span><span class="s">(</span> -<span class="w">field</span> <span class="cm">=&gt;</span> <span class="i">$field</span><span class="cm">,</span> -<span class="w">value</span> <span class="cm">=&gt;</span> <span class="i">$input_value</span> <span class="s">)</span> <span class="s">)</span> <span class="s">)</span> <span class="s">{</span>
            <span class="i">_Message</span><span class="s">(</span><span class="q">&quot;$field value ($input_value) not valid&quot;</span><span class="s">)</span><span class="sc">;</span>

            <span class="i">$self</span>-&gt;{<span class="w">fields</span>}{<span class="i">$field</span>}{<span class="q">'value'</span>} = <span class="q">&quot;-&quot;</span><span class="sc">;</span>
            <span class="i">$valid</span> = <span class="n">0</span><span class="sc">;</span>
        <span class="s">}</span>
        <span class="k">else</span> <span class="s">{</span>

            <span class="c"># The field has been validated.</span>
            <span class="i">$self</span>-&gt;{<span class="w">fields</span>}{<span class="i">$field</span>}{<span class="q">'value'</span>} = <span class="i">$input_value</span><span class="sc">;</span>
        <span class="s">}</span>
    <span class="s">}</span>
    <span class="k">return</span> <span class="i">$self</span><span class="i">-&gt;set_attribute</span><span class="s">(</span> <span class="q">'valid'</span><span class="cm">,</span> <span class="i">$valid</span> <span class="s">)</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">###################</span>
<a name="get_fields-"></a><span class="k">sub </span><span class="m">get_fields</span> <span class="s">{</span>
<span class="c">###################</span>
    <span class="k">my</span> <span class="i">$self</span> = <span class="k">shift</span><span class="sc">;</span>

    <span class="k">if</span> <span class="s">(</span> <span class="k">defined</span> <span class="i">$self</span>-&gt;{<span class="w">fields</span>} <span class="s">)</span> <span class="s">{</span>
        <span class="k">my</span> <span class="i">$field_hash</span> = <span class="i">$self</span>-&gt;{<span class="w">fields</span>}<span class="sc">;</span>
        <span class="k">unless</span> <span class="s">(</span> <span class="k">ref</span> <span class="i">$field_hash</span> <span class="k">eq</span> <span class="q">'HASH'</span> <span class="s">)</span> <span class="s">{</span>
            <span class="k">return</span> <span class="k">ref</span> <span class="i">$field_hash</span> . <span class="q">&quot; found where HASH expected.&quot;</span><span class="sc">;</span>
        <span class="s">}</span>
        <span class="k">my</span> <span class="i">@keys</span> = <span class="k">keys</span> <span class="i">%$field_hash</span><span class="sc">;</span>
        <span class="k">return</span> <span class="i">@keys</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">else</span> <span class="s">{</span>
        <span class="i">carp</span><span class="s">(</span><span class="q">&quot;no labels defined for barcode&quot;</span><span class="s">)</span><span class="sc">;</span>
        <span class="k">return</span> <span class="s">(</span><span class="s">)</span><span class="sc">;</span>    <span class="c">## return empty array (ok)</span>
    <span class="s">}</span>
<span class="s">}</span>

<span class="c">################################################################</span>
<span class="c">#</span>
<span class="c"># Constructs the ZPL commands required to print the label.</span>
<span class="c"># Returns the string containing the ZPL commands.</span>
<span class="c">################################################################</span>
<a name="make_zpl-"></a><span class="k">sub </span><span class="m">make_zpl</span> <span class="s">{</span>
<span class="c">################################################################</span>
    <span class="k">my</span> <span class="i">$self</span>        = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">%args</span>        = <span class="i">@_</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$scale_DPI</span>   = <span class="i">$args</span>{-<span class="w">scale_DPI</span>} || <span class="i">$self</span>-&gt;{<span class="w">scale_DPI</span>} || <span class="i">$Default</span>{<span class="w">DPI</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$printer_DPI</span> = <span class="i">$args</span>{-<span class="w">printer_DPI</span>} || <span class="i">$self</span>-&gt;{<span class="w">printer_DPI</span>} || <span class="i">$Default</span>{<span class="w">printer_DPI</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$verbose</span>     = <span class="i">$args</span>{-<span class="w">verbose</span>}<span class="sc">;</span>

    <span class="k">my</span> <span class="i">$scale_factor</span> = <span class="n">1</span><span class="sc">;</span>
    <span class="k">if</span> <span class="s">(</span><span class="i">$scale_DPI</span><span class="s">)</span> <span class="s">{</span>
        <span class="i">$scale_factor</span> = <span class="i">$printer_DPI</span> / <span class="i">$scale_DPI</span><span class="sc">;</span>
    <span class="s">}</span>

    <span class="k">if</span> <span class="s">(</span> !<span class="i">$self</span><span class="i">-&gt;_validate</span> <span class="s">)</span> <span class="s">{</span>
        <span class="w">carp</span> <span class="q">&quot;Label failed validation&quot;</span><span class="sc">;</span>
        <span class="k">return</span> <span class="n">0</span><span class="sc">;</span>
    <span class="s">}</span>

    <span class="k">my</span> <span class="i">$zpl</span>    = <span class="q">&quot;&quot;</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$zero_x</span> = <span class="k">int</span><span class="s">(</span> <span class="s">(</span> <span class="i">$self</span><span class="i">-&gt;get_attribute</span><span class="s">(</span><span class="q">'zero_x'</span><span class="s">)</span> <span class="s">)</span> * <span class="i">$scale_factor</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$zero_y</span> = <span class="k">int</span><span class="s">(</span> <span class="s">(</span> <span class="i">$self</span><span class="i">-&gt;get_attribute</span><span class="s">(</span><span class="q">'zero_y'</span><span class="s">)</span> <span class="s">)</span> * <span class="i">$scale_factor</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$top</span>    = <span class="k">int</span><span class="s">(</span> <span class="s">(</span> <span class="i">$self</span><span class="i">-&gt;get_attribute</span><span class="s">(</span><span class="q">'top'</span><span class="s">)</span> <span class="s">)</span> * <span class="i">$scale_factor</span> <span class="s">)</span><span class="sc">;</span>

    <span class="k">my</span> <span class="i">$field</span><span class="sc">;</span>
    <span class="i">$zpl</span> .= <span class="q">&quot;^XA\n&quot;</span><span class="sc">;</span>
    <span class="i">$zpl</span> .= <span class="q">&quot;^LT$top\n&quot;</span><span class="sc">;</span>
    <span class="i">$zpl</span> .= <span class="q">&quot;^LH$zero_x,$zero_y\n&quot;</span><span class="sc">;</span>

    <span class="k">foreach</span> <span class="i">$field</span> <span class="s">(</span> <span class="k">keys</span> <span class="i">%</span>{ <span class="i">$self</span>-&gt;{<span class="w">fields</span>} } <span class="s">)</span> <span class="s">{</span>
        <span class="k">my</span> <span class="s">(</span> <span class="i">$value</span><span class="cm">,</span> <span class="i">$size</span><span class="cm">,</span> <span class="i">$posx</span><span class="cm">,</span> <span class="i">$posy</span><span class="cm">,</span> <span class="i">$opts</span><span class="cm">,</span> <span class="i">$barcode_type</span> <span class="s">)</span><span class="sc">;</span>

        <span class="c"># skip barcode_value, not necessary</span>
        <span class="k">if</span> <span class="s">(</span> <span class="i">$field</span> <span class="k">eq</span> <span class="q">&quot;barcode_value&quot;</span> <span class="s">)</span> <span class="s">{</span>
            <span class="k">next</span><span class="sc">;</span>
        <span class="s">}</span>
        <span class="i">$value</span> = <span class="i">$self</span><span class="i">-&gt;get_field_attribute</span><span class="s">(</span> <span class="i">$field</span><span class="cm">,</span> <span class="q">&quot;value&quot;</span> <span class="s">)</span><span class="sc">;</span>
        <span class="i">$size</span> = <span class="k">int</span><span class="s">(</span> <span class="s">(</span> <span class="i">$self</span><span class="i">-&gt;get_field_attribute</span><span class="s">(</span> <span class="i">$field</span><span class="cm">,</span> <span class="q">&quot;size&quot;</span> <span class="s">)</span> <span class="s">)</span> * <span class="i">$scale_factor</span> <span class="s">)</span><span class="sc">;</span>
        <span class="i">$posx</span> = <span class="k">int</span><span class="s">(</span> <span class="s">(</span> <span class="i">$self</span><span class="i">-&gt;get_field_attribute</span><span class="s">(</span> <span class="i">$field</span><span class="cm">,</span> <span class="q">&quot;posx&quot;</span> <span class="s">)</span> <span class="s">)</span> * <span class="i">$scale_factor</span> <span class="s">)</span><span class="sc">;</span>
        <span class="i">$posy</span> = <span class="k">int</span><span class="s">(</span> <span class="s">(</span> <span class="i">$self</span><span class="i">-&gt;get_field_attribute</span><span class="s">(</span> <span class="i">$field</span><span class="cm">,</span> <span class="q">&quot;posy&quot;</span> <span class="s">)</span> <span class="s">)</span> * <span class="i">$scale_factor</span> <span class="s">)</span><span class="sc">;</span>
        <span class="i">$opts</span> = <span class="i">$self</span><span class="i">-&gt;get_field_attribute</span><span class="s">(</span> <span class="i">$field</span><span class="cm">,</span> <span class="q">&quot;opts&quot;</span> <span class="s">)</span><span class="sc">;</span>
        <span class="i">$barcode_type</span> = <span class="i">$self</span><span class="i">-&gt;get_field_attribute</span><span class="s">(</span> <span class="i">$field</span><span class="cm">,</span> <span class="q">&quot;style&quot;</span> <span class="s">)</span> || <span class="q">'text'</span><span class="sc">;</span>

        <span class="k">if</span> <span class="s">(</span> <span class="i">$barcode_type</span> <span class="k">ne</span> <span class="q">'text'</span> <span class="s">)</span> <span class="s">{</span>

            <span class="c">#Code 128</span>
            <span class="k">my</span> <span class="i">$bczpl</span> = <span class="q">&quot;&quot;</span><span class="sc">;</span>

            <span class="c">#	  my $bctext = $self-&gt;get_field_attribute(&quot;barcode&quot;,&quot;barcode&quot;);</span>
            <span class="k">my</span> <span class="i">$bctext</span> = <span class="i">$value</span><span class="sc">;</span>
            <span class="i">$size</span> =~ <span class="q">s/(.*),(.*)/$2/</span><span class="sc">;</span>

            <span class="k">if</span> <span class="s">(</span> <span class="i">$self</span><span class="i">-&gt;get_field_attribute</span><span class="s">(</span> <span class="i">$field</span><span class="cm">,</span> <span class="q">&quot;opts&quot;</span> <span class="s">)</span> =~ <span class="q">/dense/</span> <span class="s">)</span> <span class="s">{</span>
                <span class="i">$zpl</span> .= <span class="q">&quot;^BY1,3.0,10\n&quot;</span><span class="sc">;</span>
            <span class="s">}</span>
            <span class="k">elsif</span> <span class="s">(</span> <span class="s">(</span> <span class="i">$self</span><span class="i">-&gt;get_field_attribute</span><span class="s">(</span> <span class="i">$field</span><span class="cm">,</span> <span class="q">&quot;opts&quot;</span> <span class="s">)</span> =~ <span class="q">/large/</span> <span class="s">)</span> <span class="s">)</span> <span class="s">{</span>
                <span class="i">$zpl</span> .= <span class="q">&quot;^BY3,3.0,10\n&quot;</span><span class="sc">;</span>
            <span class="s">}</span>
            <span class="k">else</span> <span class="s">{</span>
                <span class="i">$zpl</span> .= <span class="q">&quot;^BY2,3.0,10\n&quot;</span><span class="sc">;</span>
            <span class="s">}</span>

            <span class="k">if</span> <span class="s">(</span> <span class="i">$self</span><span class="i">-&gt;get_field_attribute</span><span class="s">(</span> <span class="i">$field</span><span class="cm">,</span> <span class="q">&quot;opts&quot;</span> <span class="s">)</span> =~ <span class="q">/caps/</span> <span class="s">)</span> <span class="s">{</span>
                <span class="i">$bctext</span> =~ <span class="q">tr/a-z/A-Z/</span><span class="sc">;</span>
            <span class="s">}</span>

            <span class="c">#print &quot;Printing '$bctext'...&lt;br&gt;\n&quot;;</span>
            <span class="i">$posy</span> += <span class="i">$top</span><span class="sc">;</span>    <span class="c">## barcodes positions are not normally relative to top</span>

            <span class="k">if</span> <span class="s">(</span> <span class="i">$barcode_type</span> =~ <span class="q">/^code128/</span> <span class="s">)</span> <span class="s">{</span>
                <span class="i">$bczpl</span> = <span class="q">&quot;^FO$posx,$posy^BCN,$size,N,N,N,N^FD$bctext^FS\n&quot;</span><span class="sc">;</span>
            <span class="s">}</span>
            <span class="k">elsif</span> <span class="s">(</span> <span class="i">$barcode_type</span> <span class="k">eq</span> <span class="q">&quot;datamatrix&quot;</span> <span class="s">)</span> <span class="s">{</span>
                <span class="i">$bczpl</span> = <span class="q">&quot;^FO$posx,$posy^BXN,$size,200,,,,^FD$bctext^FS\n&quot;</span><span class="sc">;</span>
            <span class="s">}</span>
            <span class="k">elsif</span> <span class="s">(</span> <span class="i">$barcode_type</span> <span class="k">eq</span> <span class="q">&quot;code39&quot;</span> <span class="s">)</span> <span class="s">{</span>
                <span class="i">$bczpl</span> = <span class="q">&quot;^FO$posx,$posy^B3N,N,$size,N,N^FD$bctext^FS\n&quot;</span><span class="sc">;</span>
            <span class="s">}</span>
            <span class="k">elsif</span> <span class="s">(</span> <span class="i">$barcode_type</span> <span class="k">eq</span> <span class="q">&quot;micropdf417&quot;</span> <span class="s">)</span> <span class="s">{</span>
                <span class="i">$bczpl</span> = <span class="q">&quot;^FO$posx,$posy^BFN,5,2^FD$bctext^FS\n&quot;</span><span class="sc">;</span>
            <span class="s">}</span>
            <span class="k">elsif</span> <span class="s">(</span> <span class="i">$barcode_type</span> <span class="k">eq</span> <span class="q">&quot;qrcodebar&quot;</span> <span class="s">)</span> <span class="s">{</span>
                <span class="i">$bczpl</span> = <span class="q">&quot;^FO$posx,$posy^BQN,2,3^FDQA,$bctext^FS\n&quot;</span><span class="sc">;</span>
            <span class="s">}</span>
            <span class="k">else</span> <span class="s">{</span>
                <span class="k">return</span> !<span class="i">carp</span><span class="s">(</span><span class="q">&quot;unrecognized barcode type: $barcode_type&quot;</span><span class="s">)</span><span class="sc">;</span>
            <span class="s">}</span>
            <span class="i">$zpl</span> .= <span class="i">$bczpl</span><span class="sc">;</span>
        <span class="s">}</span>
        <span class="k">else</span> <span class="s">{</span>
            <span class="k">if</span> <span class="s">(</span> <span class="i">$opts</span> =~ <span class="q">/noprint/</span> <span class="s">)</span> <span class="s">{</span>

            <span class="s">}</span>
            <span class="k">else</span> <span class="s">{</span>
                <span class="k">if</span> <span class="s">(</span> <span class="s">(</span> <span class="i">$opts</span> =~ <span class="q">/box/</span> <span class="s">)</span> &amp;&amp; <span class="i">$value</span> <span class="s">)</span> <span class="s">{</span>
                    <span class="i">$zpl</span> .= <span class="q">&quot;^FO$posx,$posy^A0N,$size^FD^GB$size,$size,2^FS\n&quot;</span><span class="sc">;</span>
                <span class="s">}</span>
                <span class="k">elsif</span> <span class="s">(</span> <span class="s">(</span> <span class="i">$opts</span> =~ <span class="q">/rect/</span> <span class="s">)</span> &amp;&amp; <span class="i">$value</span> <span class="s">)</span> <span class="s">{</span>
                    <span class="i">$zpl</span> .= <span class="q">&quot;^FO$posx,$posy^A0N,$size^FD^GB$value,$size,3^FS\n&quot;</span><span class="sc">;</span>
                <span class="s">}</span>
                <span class="k">elsif</span> <span class="s">(</span> <span class="s">(</span> <span class="i">$opts</span> =~ <span class="q">/uline/</span> <span class="s">)</span> &amp;&amp; <span class="i">$value</span> <span class="s">)</span> <span class="s">{</span>
                    <span class="k">my</span> <span class="i">$lineposy</span> = <span class="i">$posy</span> + <span class="i">$size</span><span class="sc">;</span>
                    <span class="i">$zpl</span> .= <span class="q">&quot;^FO$posx,$lineposy^A0N,$size^FD^GB$value,0,2^FS\n&quot;</span><span class="sc">;</span>
                <span class="s">}</span>
                <span class="k">else</span> <span class="s">{</span>
                    <span class="i">$zpl</span> .= <span class="q">&quot;^FO$posx,$posy^A0N,$size^FD$value^FS\n&quot;</span><span class="sc">;</span>
                <span class="s">}</span>
            <span class="s">}</span>
        <span class="s">}</span>
    <span class="s">}</span>
    <span class="i">$zpl</span> .= <span class="q">&quot;^XZ\n&quot;</span><span class="sc">;</span>

    <span class="k">return</span> <span class="i">$zpl</span><span class="sc">;</span>
<span class="s">}</span>
<span class="c">################################################################</span>
<span class="c">#</span>
<span class="c"># Print the label to the barcode printer. The spool is defined</span>
<span class="c"># as a class variable LPRQUEUE</span>
<span class="c">#</span>
<span class="c">#################</span>
<a name="lprprint-"></a><span class="k">sub </span><span class="m">lprprint</span> <span class="s">{</span>
<span class="c">#################</span>
    <span class="k">my</span> <span class="i">$self</span> = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">%args</span> = <span class="i">@_</span><span class="sc">;</span>

    <span class="c">#    print Call_Stack;</span>
    <span class="k">my</span> <span class="i">$printer_DPI</span> = <span class="i">$args</span>{-<span class="w">printer_DPI</span>} || <span class="i">$self</span>-&gt;{<span class="w">printer_DPI</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$printer</span>     = <span class="i">$args</span>{-<span class="w">printer</span>}     || <span class="i">$self</span>-&gt;{<span class="w">printer</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$verbose</span>     = <span class="i">$args</span>{-<span class="w">verbose</span>}     || <span class="n">0</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$noscale</span>     = <span class="i">$args</span>{-<span class="w">noscale</span>}     || <span class="n">0</span><span class="sc">;</span>                      <span class="c">## Prevent automatic scaling</span>
    <span class="k">my</span> <span class="i">$debug</span>       = <span class="i">$args</span>{-<span class="w">debug</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$file</span> = <span class="i">$args</span>{-<span class="w">file</span>}<span class="sc">;</span>                                         <span class="c">## redirect lpr file to indicated file rather than into tmp/ directory</span>

    <span class="k">my</span> <span class="i">$t0</span> = <span class="s">[</span><span class="w">gettimeofday</span><span class="s">]</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$now</span> = <span class="i">strftime</span><span class="s">(</span> <span class="q">&quot;%Y-%m-%d %H:%M:%S&quot;</span><span class="cm">,</span> <span class="k">localtime</span> <span class="s">)</span><span class="sc">;</span>

    <span class="k">my</span> <span class="i">$log</span> = <span class="q">&quot;$now: lprprint called\n&quot;</span><span class="sc">;</span>

    <span class="c">#  $log   .= &quot;$stack\n&quot;;</span>

    <span class="k">unless</span> <span class="s">(</span> <span class="i">$printer</span> || <span class="i">$debug</span> <span class="s">)</span> <span class="s">{</span> <span class="i">croak</span><span class="s">(</span><span class="q">'no printer specified'</span><span class="s">)</span> <span class="s">}</span>

    <span class="k">my</span> <span class="i">$fieldsvalues</span><span class="sc">;</span>
    <span class="k">foreach</span> <span class="k">my</span> <span class="i">$field</span> <span class="s">(</span> <span class="k">keys</span> <span class="i">%</span>{ <span class="i">$self</span>-&gt;{<span class="w">fields</span>} } <span class="s">)</span> <span class="s">{</span>
        <span class="k">my</span> <span class="i">$value</span> = <span class="i">$self</span><span class="i">-&gt;get_field_attribute</span><span class="s">(</span> <span class="i">$field</span><span class="cm">,</span> <span class="q">&quot;value&quot;</span> <span class="s">)</span><span class="sc">;</span>
        <span class="k">if</span> <span class="s">(</span> <span class="k">defined</span> <span class="i">$value</span> &amp;&amp; <span class="i">$value</span> <span class="k">ne</span> <span class="q">&quot;&quot;</span> <span class="s">)</span> <span class="s">{</span>
            <span class="i">$fieldsvalues</span> .= <span class="i">$field</span> . <span class="q">&quot;[$value] &quot;</span><span class="sc">;</span>
        <span class="s">}</span>

        <span class="c">## ensure all mandatory field attributes are defined ##</span>
        <span class="k">my</span> <span class="i">$size</span>  = <span class="i">$self</span>-&gt;{<span class="w">fields</span>}{<span class="i">$field</span>}{<span class="q">'size'</span>}<span class="sc">;</span>
        <span class="k">my</span> <span class="i">$posx</span>  = <span class="i">$self</span>-&gt;{<span class="w">fields</span>}{<span class="i">$field</span>}{<span class="q">'posx'</span>}<span class="sc">;</span>
        <span class="k">my</span> <span class="i">$posy</span>  = <span class="i">$self</span>-&gt;{<span class="w">fields</span>}{<span class="i">$field</span>}{<span class="q">'posy'</span>}<span class="sc">;</span>
        <span class="k">my</span> <span class="i">$style</span> = <span class="i">$self</span>-&gt;{<span class="w">fields</span>}{<span class="i">$field</span>}{<span class="q">'style'</span>}<span class="sc">;</span>

        <span class="i">$log</span> .= <span class="q">&quot;$field: $value; Size=$size; PosX=$posx; PosY=$posy; Style=$style)\n&quot;</span><span class="sc">;</span>
        <span class="k">unless</span> <span class="s">(</span> <span class="i">$size</span> &amp;&amp; <span class="s">(</span> <span class="k">defined</span> <span class="i">$posx</span> <span class="s">)</span> &amp;&amp; <span class="s">(</span> <span class="k">defined</span> <span class="i">$posy</span> <span class="s">)</span> &amp;&amp; <span class="i">$style</span> <span class="s">)</span> <span class="s">{</span>
            <span class="k">print</span> <span class="q">&quot;Incomplete Information supplied for $field (Size=$size; X,Y=$posx,$posy; Style=$style)\n&quot;</span><span class="sc">;</span>

            <span class="i">$log</span> .= <span class="q">&quot;Incomplete Information supplied for $field (Size=$size; X,Y=$posx,$posy; Style=$style)\n&quot;</span><span class="sc">;</span>
            <span class="k">open</span> <span class="k">my</span> <span class="i">$LOG</span><span class="cm">,</span> <span class="q">&quot;&gt;&gt;$LOGFILE&quot;</span> <span class="k">or</span> <span class="k">print</span> <span class="q">&quot;No logging&quot;</span><span class="sc">;</span>
            <span class="k">print</span> <span class="s">{</span><span class="i">$LOG</span><span class="s">}</span> <span class="i">$log</span><span class="sc">;</span>
            <span class="k">close</span> <span class="i">$LOG</span><span class="sc">;</span>

            <span class="k">return</span> <span class="n">0</span><span class="sc">;</span>
        <span class="s">}</span>
    <span class="s">}</span>
    <span class="k">unless</span> <span class="s">(</span><span class="i">$fieldsvalues</span><span class="s">)</span> <span class="s">{</span> <span class="i">croak</span><span class="s">(</span> <span class="q">&quot;no items in label&quot;</span> . <span class="i">Dumper</span><span class="s">(</span><span class="i">$self</span><span class="s">)</span> <span class="s">)</span> <span class="s">}</span>

    <span class="i">$log</span> .= <span class="q">&quot;$fieldsvalues\n&quot;</span><span class="sc">;</span>

    <span class="k">unless</span> <span class="s">(</span> <span class="i">$self</span><span class="i">-&gt;_is_valid</span> <span class="s">)</span> <span class="s">{</span>
        <span class="i">$log</span> .= <span class="q">&quot;ERROR barcode not valid\n&quot;</span><span class="sc">;</span>
        <span class="k">print</span> <span class="q">&quot;Invalid barcode - not printed&quot;</span><span class="sc">;</span>

        <span class="k">open</span> <span class="k">my</span> <span class="i">$LOG</span><span class="cm">,</span> <span class="q">&quot;&gt;&gt;$LOGFILE&quot;</span> <span class="k">or</span> <span class="k">print</span> <span class="q">&quot;No logging&quot;</span><span class="sc">;</span>
        <span class="k">print</span> <span class="s">{</span><span class="i">$LOG</span><span class="s">}</span> <span class="i">$log</span><span class="sc">;</span>
        <span class="k">close</span> <span class="i">$LOG</span><span class="sc">;</span>

        <span class="k">return</span> <span class="n">0</span><span class="sc">;</span>
    <span class="s">}</span>

    <span class="k">my</span> <span class="i">$LPRQUEUE</span><span class="sc">;</span>    <span class="c">## define target printer</span>
    <span class="k">if</span> <span class="s">(</span> <span class="i">$self</span><span class="i">-&gt;establish_printer</span><span class="s">(</span><span class="i">$printer</span><span class="s">)</span> <span class="s">)</span> <span class="s">{</span>
        <span class="i">$LPRQUEUE</span> = <span class="i">$printer</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">else</span> <span class="s">{</span>

        <span class="k">open</span> <span class="k">my</span> <span class="i">$LOG</span><span class="cm">,</span> <span class="q">&quot;&gt;&gt;$LOGFILE&quot;</span> <span class="k">or</span> <span class="k">print</span> <span class="q">&quot;No logging&quot;</span><span class="sc">;</span>
        <span class="k">print</span> <span class="s">{</span><span class="i">$LOG</span><span class="s">}</span> <span class="i">$log</span><span class="sc">;</span>
        <span class="k">close</span> <span class="i">$LOG</span><span class="sc">;</span>
        <span class="k">return</span> <span class="n">0</span><span class="sc">;</span>
    <span class="s">}</span>

    <span class="c"># $self-&gt;_Accounting();  ## if set up...</span>

    <span class="k">my</span> <span class="i">$zpl</span> = <span class="i">$self</span><span class="i">-&gt;make_zpl</span><span class="s">(</span> -<span class="w">verbose</span> <span class="cm">=&gt;</span> <span class="i">$verbose</span><span class="cm">,</span> -<span class="w">printer_DPI</span> <span class="cm">=&gt;</span> <span class="i">$printer_DPI</span> <span class="s">)</span><span class="sc">;</span>

    <span class="c">#  my $zpl = &quot;&quot;;</span>
    <span class="c">#  if ( $dpi == 300 ) {</span>
    <span class="c">#      print &quot;**** 21 ***&lt;BR&gt;&lt;PRE&gt;&quot; . Dumper($self) . '&lt;/PRE&gt;';</span>
    <span class="c">#      if ( (!($noscale)) &amp;&amp; $self-&gt;get_field_attribute(&quot;barcode&quot;,&quot;value&quot;) !~ &quot;datamatrix&quot;) {</span>
    <span class="c">#	  # scale up to 300dpi if not 2d barcode (which is programmed for 300dpi already)</span>
    <span class="c">#	  $log .=  &quot;Scaling up to $dpi dpi\n&quot;;</span>
    <span class="c">#    print &quot;**** 22 ***&lt;BR&gt;&lt;PRE&gt;&quot; . Dumper($self) . '&lt;/PRE&gt;';</span>
    <span class="c">#	  $zpl = $self-&gt;make_zpl(-dpi=&gt;$dpi,-verbose=&gt;$verbose);</span>
    <span class="c">#      }</span>
    <span class="c">#      else {</span>
    <span class="c">#    print &quot;**** 23 ***&lt;BR&gt;&lt;PRE&gt;&quot; . Dumper($self) . '&lt;/PRE&gt;';</span>
    <span class="c">#          $zpl = $self-&gt;make_zpl(-verbose=&gt;$verbose);</span>
    <span class="c">#      }</span>
    <span class="c">#  }</span>
    <span class="c">#  else {</span>
    <span class="c">#      $zpl = $self-&gt;make_zpl(-verbose=&gt;$verbose);</span>
    <span class="c">#  }</span>

    <span class="i">$log</span> .= <span class="q">&quot;$now: lprqueue -&gt; $LPRQUEUE\n&quot;</span><span class="sc">;</span>
    <span class="k">if</span> <span class="s">(</span><span class="i">$zpl</span><span class="s">)</span> <span class="s">{</span>
        <span class="k">my</span> <span class="i">$randfilename</span> = <span class="q">&quot;zpl.&quot;</span> . <span class="k">sprintf</span><span class="s">(</span> <span class="q">&quot;%08d&quot;</span><span class="cm">,</span> <span class="k">rand</span><span class="s">(</span><span class="n">1000000</span><span class="s">)</span> <span class="s">)</span> . <span class="q">&quot;.&quot;</span> . <span class="k">time</span><span class="sc">;</span>

        <span class="c">#      _Message(&quot;printing to /tmp/$randfilename..&quot;);</span>
        <span class="k">my</span> <span class="i">$filename</span> = <span class="i">$file</span> || <span class="q">&quot;/tmp/$randfilename&quot;</span><span class="sc">;</span>
        <span class="k">open</span> <span class="k">my</span> <span class="i">$RAND</span><span class="cm">,</span> <span class="q">&quot;&gt;$filename&quot;</span> || <span class="w">carp</span> <span class="q">&quot;Could not open $filename&quot;</span><span class="sc">;</span>
        <span class="k">print</span> <span class="s">{</span><span class="i">$RAND</span><span class="s">}</span> <span class="i">$zpl</span><span class="sc">;</span>
        <span class="k">close</span> <span class="i">$RAND</span><span class="sc">;</span>

        <span class="k">if</span> <span class="s">(</span><span class="i">$debug</span><span class="s">)</span> <span class="s">{</span>
            <span class="i">$log</span> .= <span class="q">&quot;** Debug mode ** (not printing)\n&quot;</span><span class="sc">;</span>
        <span class="s">}</span>
        <span class="k">else</span> <span class="s">{</span>
            <span class="c">## skip actual lpr command if in debug mode ##</span>
            <span class="k">open</span> <span class="k">my</span> <span class="i">$FILE</span><span class="cm">,</span> <span class="q">&quot;| lpr -P$LPRQUEUE&quot;</span> <span class="k">or</span> <span class="i">$log</span> .= <span class="q">&quot;$now: ERROR: Could not open a pipe to lpr -P$LPRQUEUE: $!\n&quot;</span><span class="sc">;</span>
            <span class="i">$log</span> .= <span class="q">&quot;$now: paused &quot;</span> . <span class="i">Pause</span><span class="s">(</span><span class="n">0.25</span><span class="s">)</span> . <span class="q">&quot; after opening pipe.\n&quot;</span><span class="sc">;</span>
            <span class="k">print</span> <span class="s">{</span><span class="i">$FILE</span><span class="s">}</span> <span class="i">$zpl</span><span class="sc">;</span>
            <span class="i">$log</span> .= <span class="q">&quot;$now: paused &quot;</span> . <span class="i">Pause</span><span class="s">(</span><span class="n">0.25</span><span class="s">)</span> . <span class="q">&quot; before closing pipe.\n&quot;</span><span class="sc">;</span>
            <span class="k">close</span> <span class="i">$FILE</span> <span class="k">or</span> <span class="i">$log</span> .= <span class="q">&quot;$now: ERROR: Could not close pipe to lpr: $! :: $?\n&quot;</span><span class="sc">;</span>
        <span class="s">}</span>

        <span class="i">$log</span> .= <span class="q">&quot;$now: zpl sent to printer\n$zpl&quot;</span><span class="sc">;</span>

        <span class="c"># Rest so that the printer can catch up.</span>
        <span class="k">my</span> <span class="i">$elapsed</span> = <span class="k">sprintf</span><span class="s">(</span> <span class="q">&quot;%.3f s&quot;</span><span class="cm">,</span> <span class="i">tv_interval</span><span class="s">(</span><span class="i">$t0</span><span class="s">)</span> <span class="s">)</span><span class="sc">;</span>
        <span class="i">$log</span> .= <span class="q">&quot;$now: lprprint done [$elapsed]\n\n&quot;</span><span class="sc">;</span>
        <span class="i">$log</span> .= <span class="q">&quot;printed $randfilename to $LPRQUEUE.\n&quot;</span><span class="sc">;</span>

        <span class="c">#sleep 1;</span>
    <span class="s">}</span>
    <span class="k">else</span> <span class="s">{</span>
        <span class="i">$log</span> .= <span class="q">&quot;$now: ERROR could not open lpr process\n&quot;</span><span class="sc">;</span>
        <span class="k">print</span> <span class="q">&quot;Could not print to printer.&quot;</span><span class="sc">;</span>

        <span class="k">open</span> <span class="k">my</span> <span class="i">$LOG</span><span class="cm">,</span> <span class="q">&quot;&gt;&gt;$LOGFILE&quot;</span> <span class="k">or</span> <span class="k">print</span> <span class="q">&quot;No logging&quot;</span><span class="sc">;</span>
        <span class="k">print</span> <span class="s">{</span><span class="i">$LOG</span><span class="s">}</span> <span class="i">$log</span><span class="sc">;</span>
        <span class="k">close</span> <span class="i">$LOG</span><span class="sc">;</span>

        <span class="k">return</span> <span class="n">0</span><span class="sc">;</span>
    <span class="s">}</span>

    <span class="k">open</span> <span class="k">my</span> <span class="i">$LOG</span><span class="cm">,</span> <span class="q">&quot;&gt;&gt;$LOGFILE&quot;</span> <span class="k">or</span> <span class="k">print</span> <span class="q">&quot;No logging&quot;</span><span class="sc">;</span>
    <span class="k">print</span> <span class="s">{</span><span class="i">$LOG</span><span class="s">}</span> <span class="i">$log</span><span class="sc">;</span>
    <span class="k">close</span> <span class="i">$LOG</span><span class="sc">;</span>

    <span class="k">if</span> <span class="s">(</span><span class="i">$debug</span><span class="s">)</span> <span class="s">{</span>
        <span class="i">$log</span> =~ <span class="q">s/\n/&lt;BR&gt;/</span> <span class="k">if</span> <span class="i">$0</span> =~ <span class="q">/(cgi-bin|html)/</span><span class="sc">;</span>
        <span class="k">print</span> <span class="i">$log</span><span class="sc">;</span>    <span class="c">## debug to screen ##</span>
    <span class="s">}</span>

    <span class="k">return</span> <span class="n">1</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">###################</span>
<span class="c">#</span>
<span class="c"># Generate png for label and save to file</span>
<span class="c">#</span>
<span class="c">#</span>
<span class="c"># Return: target filename on success</span>
<span class="c">################</span>
<a name="makepng-"></a><span class="k">sub </span><span class="m">makepng</span> <span class="s">{</span>
<span class="c">################</span>

    <span class="k">my</span> <span class="s">(</span> <span class="i">$self</span><span class="cm">,</span> <span class="i">$outflag</span><span class="cm">,</span> <span class="i">$file</span> <span class="s">)</span> = <span class="i">@_</span><span class="sc">;</span>

    <span class="c"># Label width in printed pixels</span>
    <span class="c"># The Z600 printer has a resolution of 203DPI. Adust the DPIs at the top of this</span>
    <span class="c"># file to increase/decrease screen label size.</span>
    <span class="k">my</span> <span class="s">(</span> <span class="i">$width</span><span class="cm">,</span> <span class="i">$height</span> <span class="s">)</span> = <span class="s">(</span> <span class="i">$self</span><span class="i">-&gt;_ZPLtoScreenScale</span><span class="s">(</span> <span class="i">$self</span>-&gt;{<span class="w">scale_DPI</span>} * <span class="i">$self</span><span class="i">-&gt;get_attribute</span><span class="s">(</span><span class="q">'width'</span><span class="s">)</span> <span class="s">)</span><span class="cm">,</span> <span class="i">$self</span><span class="i">-&gt;_ZPLtoScreenScale</span><span class="s">(</span> <span class="i">$self</span>-&gt;{<span class="w">scale_DPI</span>} * <span class="i">$self</span><span class="i">-&gt;get_attribute</span><span class="s">(</span><span class="q">'height'</span><span class="s">)</span> <span class="s">)</span> <span class="s">)</span><span class="sc">;</span>

    <span class="k">my</span> <span class="i">$im</span>   = <span class="i">new</span> <span class="i">GD::Image</span><span class="s">(</span> <span class="i">$width</span><span class="cm">,</span> <span class="i">$height</span> + <span class="n">15</span> <span class="s">)</span><span class="sc">;</span>    <span class="c">##</span>
    <span class="k">my</span> <span class="i">$bcim</span> = <span class="i">new</span> <span class="i">GD::Image</span><span class="s">(</span> <span class="i">$width</span><span class="cm">,</span> <span class="i">$height</span> <span class="s">)</span><span class="sc">;</span>         <span class="c">## barcode image</span>

    <span class="k">my</span> <span class="i">$dark</span>          = <span class="n">1.1</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$c_bkground</span>    = <span class="i">$im</span><span class="i">-&gt;colorAllocate</span><span class="s">(</span> <span class="k">int</span><span class="s">(</span> <span class="n">51</span> / <span class="i">$dark</span> <span class="s">)</span><span class="cm">,</span> <span class="k">int</span><span class="s">(</span> <span class="n">88</span> / <span class="i">$dark</span> <span class="s">)</span><span class="cm">,</span> <span class="k">int</span><span class="s">(</span> <span class="n">158</span> / <span class="i">$dark</span> <span class="s">)</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$c_bkground_bc</span> = <span class="i">$bcim</span><span class="i">-&gt;colorAllocate</span><span class="s">(</span> <span class="k">int</span><span class="s">(</span> <span class="n">51</span> / <span class="i">$dark</span> <span class="s">)</span><span class="cm">,</span> <span class="k">int</span><span class="s">(</span> <span class="n">88</span> / <span class="i">$dark</span> <span class="s">)</span><span class="cm">,</span> <span class="k">int</span><span class="s">(</span> <span class="n">158</span> / <span class="i">$dark</span> <span class="s">)</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$c_foreground</span>  = <span class="i">$im</span><span class="i">-&gt;colorAllocate</span><span class="s">(</span> <span class="n">255</span><span class="cm">,</span> <span class="n">225</span><span class="cm">,</span> <span class="n">82</span> <span class="s">)</span><span class="sc">;</span>
    <span class="i">$bcim</span><span class="i">-&gt;colorAllocate</span><span class="s">(</span> <span class="n">255</span><span class="cm">,</span> <span class="n">225</span><span class="cm">,</span> <span class="n">82</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$c_lbkground</span>  = <span class="i">$im</span><span class="i">-&gt;colorAllocate</span><span class="s">(</span> <span class="n">215</span><span class="cm">,</span>  <span class="n">224</span><span class="cm">,</span> <span class="n">240</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$c_barcode</span>    = <span class="i">$im</span><span class="i">-&gt;colorAllocate</span><span class="s">(</span> <span class="n">73</span><span class="cm">,</span>   <span class="n">124</span><span class="cm">,</span> <span class="n">226</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$c_barcode_bc</span> = <span class="i">$bcim</span><span class="i">-&gt;colorAllocate</span><span class="s">(</span> <span class="n">73</span><span class="cm">,</span> <span class="n">124</span><span class="cm">,</span> <span class="n">226</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$dgrey</span>        = <span class="i">$im</span><span class="i">-&gt;colorAllocate</span><span class="s">(</span> <span class="n">220</span><span class="cm">,</span>  <span class="n">220</span><span class="cm">,</span> <span class="n">220</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$white</span>        = <span class="i">$im</span><span class="i">-&gt;colorAllocate</span><span class="s">(</span> <span class="n">255</span><span class="cm">,</span>  <span class="n">255</span><span class="cm">,</span> <span class="n">255</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$black</span>        = <span class="i">$im</span><span class="i">-&gt;colorAllocate</span><span class="s">(</span> <span class="n">0</span><span class="cm">,</span>    <span class="n">0</span><span class="cm">,</span>   <span class="n">0</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$red</span>          = <span class="i">$im</span><span class="i">-&gt;colorAllocate</span><span class="s">(</span> <span class="n">150</span><span class="cm">,</span>  <span class="n">0</span><span class="cm">,</span>   <span class="n">0</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$green</span>        = <span class="i">$im</span><span class="i">-&gt;colorAllocate</span><span class="s">(</span> <span class="n">0</span><span class="cm">,</span>    <span class="n">150</span><span class="cm">,</span> <span class="n">0</span> <span class="s">)</span><span class="sc">;</span>

    <span class="c">#  my $fontpath = &quot;/usr/local/fonts/ttf&quot;;</span>
    <span class="k">my</span> <span class="i">$fontpath</span> = <span class="q">&quot;/home/sequence/Trash/ttf&quot;</span><span class="sc">;</span>    <span class="c">## &lt;CONSTRUCTION&gt; - establish standard fonts/ttf directory ##</span>

    <span class="i">$bcim</span><span class="i">-&gt;filledRectangle</span><span class="s">(</span> <span class="n">0</span><span class="cm">,</span> <span class="n">0</span><span class="cm">,</span>       <span class="i">$width</span><span class="cm">,</span> <span class="i">$height</span><span class="cm">,</span>      <span class="i">$c_bkground_bc</span> <span class="s">)</span><span class="sc">;</span>
    <span class="i">$im</span><span class="i">-&gt;filledRectangle</span><span class="s">(</span> <span class="n">0</span><span class="cm">,</span>   <span class="n">0</span><span class="cm">,</span>       <span class="i">$width</span><span class="cm">,</span> <span class="i">$height</span> - <span class="n">15</span><span class="cm">,</span> <span class="i">$c_bkground</span> <span class="s">)</span><span class="sc">;</span>
    <span class="i">$im</span><span class="i">-&gt;filledRectangle</span><span class="s">(</span> <span class="n">0</span><span class="cm">,</span>   <span class="i">$height</span><span class="cm">,</span> <span class="i">$width</span><span class="cm">,</span> <span class="i">$height</span> + <span class="n">15</span><span class="cm">,</span> <span class="i">$c_lbkground</span> <span class="s">)</span><span class="sc">;</span>

    <span class="k">my</span> <span class="i">$top</span>    = <span class="i">$self</span><span class="i">-&gt;get_attribute</span><span class="s">(</span><span class="q">'top'</span><span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$zero_x</span> = <span class="i">$self</span><span class="i">-&gt;get_attribute</span><span class="s">(</span><span class="q">'zero_x'</span><span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$zero_y</span> = <span class="i">$self</span><span class="i">-&gt;get_attribute</span><span class="s">(</span><span class="q">'zero_y'</span><span class="s">)</span><span class="sc">;</span>

    <span class="k">my</span> <span class="i">$field</span><span class="sc">;</span>
    <span class="k">my</span> <span class="s">(</span> <span class="i">$value</span><span class="cm">,</span> <span class="i">$size</span><span class="cm">,</span> <span class="i">$posx</span><span class="cm">,</span> <span class="i">$posy</span><span class="cm">,</span> <span class="i">$font</span><span class="cm">,</span> <span class="i">$style</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">foreach</span> <span class="i">$field</span> <span class="s">(</span> <span class="k">keys</span> <span class="i">%</span>{ <span class="i">$self</span>-&gt;{<span class="w">fields</span>} } <span class="s">)</span> <span class="s">{</span>
        <span class="k">if</span> <span class="s">(</span> <span class="i">$self</span><span class="i">-&gt;get_field_attribute</span><span class="s">(</span> <span class="i">$field</span><span class="cm">,</span> <span class="q">&quot;opts&quot;</span> <span class="s">)</span> =~ <span class="q">/short/</span> <span class="s">)</span> <span class="s">{</span>
            <span class="i">$value</span> = <span class="i">$field</span><span class="sc">;</span>
        <span class="s">}</span>
        <span class="k">else</span> <span class="s">{</span>
            <span class="i">$value</span> = <span class="i">$self</span><span class="i">-&gt;get_field_attribute</span><span class="s">(</span> <span class="i">$field</span><span class="cm">,</span> <span class="q">&quot;value&quot;</span> <span class="s">)</span><span class="sc">;</span>
        <span class="s">}</span>
        <span class="i">$size</span> = <span class="i">$self</span><span class="i">-&gt;get_field_attribute</span><span class="s">(</span> <span class="i">$field</span><span class="cm">,</span> <span class="q">&quot;size&quot;</span> <span class="s">)</span><span class="sc">;</span>
        <span class="k">my</span> <span class="i">$screensize</span> = <span class="k">int</span><span class="s">(</span> <span class="n">0.85</span> * <span class="i">$self</span><span class="i">-&gt;_ZPLtoScreenScale</span><span class="s">(</span><span class="i">$size</span><span class="s">)</span> <span class="s">)</span><span class="sc">;</span>

        <span class="i">$self</span>-&gt;{<span class="w">screensize</span>} = <span class="i">$screensize</span><span class="sc">;</span>

        <span class="i">$posx</span> = <span class="i">$self</span><span class="i">-&gt;get_field_attribute</span><span class="s">(</span> <span class="i">$field</span><span class="cm">,</span> <span class="q">&quot;posx&quot;</span> <span class="s">)</span><span class="sc">;</span>
        <span class="i">$posy</span> = <span class="i">$self</span><span class="i">-&gt;get_field_attribute</span><span class="s">(</span> <span class="i">$field</span><span class="cm">,</span> <span class="q">&quot;posy&quot;</span> <span class="s">)</span><span class="sc">;</span>
        <span class="s">(</span> <span class="i">$posx</span><span class="cm">,</span> <span class="i">$posy</span> <span class="s">)</span> = <span class="i">$self</span><span class="i">-&gt;_ZPLtoScreen</span><span class="s">(</span> <span class="i">$posx</span><span class="cm">,</span> <span class="i">$posy</span> + <span class="i">$top</span> <span class="s">)</span><span class="sc">;</span>

        <span class="i">$style</span> = <span class="i">$self</span><span class="i">-&gt;get_field_attribute</span><span class="s">(</span> <span class="i">$field</span><span class="cm">,</span> <span class="q">&quot;style&quot;</span> <span class="s">)</span><span class="sc">;</span>

        <span class="c"># Use the futuramc font.</span>
    <span class="j">SWITCH:</span> <span class="s">{</span>
            <span class="k">if</span> <span class="s">(</span> <span class="i">$size</span> &lt;= <span class="n">10</span> <span class="s">)</span> <span class="s">{</span>
                <span class="i">$font</span> = <span class="q">&quot;zurch.ttf&quot;</span><span class="sc">;</span>
                <span class="k">last</span> <span class="j">SWITCH</span><span class="sc">;</span>
            <span class="s">}</span>
            <span class="k">if</span> <span class="s">(</span> <span class="i">$size</span> &lt;= <span class="n">20</span> <span class="s">)</span> <span class="s">{</span>
                <span class="i">$font</span> = <span class="q">&quot;zurch.ttf&quot;</span><span class="sc">;</span>
                <span class="k">last</span> <span class="j">SWITCH</span><span class="sc">;</span>
            <span class="s">}</span>
            <span class="k">if</span> <span class="s">(</span> <span class="i">$size</span> &lt;= <span class="n">30</span> <span class="s">)</span> <span class="s">{</span>
                <span class="i">$font</span> = <span class="q">&quot;zurch.ttf&quot;</span><span class="sc">;</span>
                <span class="k">last</span> <span class="j">SWITCH</span><span class="sc">;</span>
            <span class="s">}</span>
            <span class="i">$font</span> = <span class="q">&quot;futuramc.ttf&quot;</span><span class="sc">;</span>
        <span class="s">}</span>

        <span class="c"># If the field is a barcode, print the barcode using the code39 symbology to the png.</span>
        <span class="c"># I couldn't find a real code128 font (only demos with characters missing)</span>
        <span class="i">$value</span> =~ <span class="q">s/_/ /g</span><span class="sc">;</span>
        <span class="i">$value</span> ||= <span class="q">'noText'</span><span class="sc">;</span>

        <span class="c">#    if ($field =~ /barcode/) {</span>
        <span class="c">#    if (my $barcode_type = $self-&gt;{fields}{$field}{'barcode'}) {</span>
        <span class="k">if</span> <span class="s">(</span> <span class="i">$style</span> &amp;&amp; <span class="s">(</span> <span class="i">$style</span> <span class="k">ne</span> <span class="q">'text'</span> <span class="s">)</span> <span class="s">)</span> <span class="s">{</span>
            <span class="k">my</span> <span class="i">$bc_height</span> = <span class="i">$self</span><span class="i">-&gt;_ZPLtoScreenScale</span><span class="s">(</span><span class="i">$size</span><span class="s">)</span><span class="sc">;</span>

            <span class="c"># Figure out what the barcode text will be. Generically, it's taken from the</span>
            <span class="c"># CLASS and ID fields of the label. If the barcode field may be ZERO padded.</span>
            <span class="k">my</span> <span class="i">$bctext</span> = <span class="i">$value</span><span class="sc">;</span>                 <span class="c">## $self-&gt;get_field_attribute(&quot;barcode&quot;,&quot;barcode&quot;) || 'notfound';</span>
                                                 <span class="c"># Print the barcode</span>
            <span class="k">my</span> <span class="i">$y</span>      = <span class="i">$posy</span> + <span class="i">$screensize</span><span class="sc">;</span>    <span class="c">## added screensize (?)</span>

            <span class="c">#	my @bc = $bcim-&gt;stringTTF(&quot;$fontpath/code39.ttf&quot;,$posx,$y+13,$bctext,13,0,$c_barcode_bc);</span>
            <span class="c">#</span>
            <span class="c">#  stringFT seems to work better (could not get stringTTF to output anything (?) #</span>
            <span class="k">my</span> <span class="i">@bc</span> = <span class="i">$im</span><span class="i">-&gt;stringFT</span><span class="s">(</span> <span class="i">$c_barcode_bc</span><span class="cm">,</span> <span class="q">&quot;$fontpath/code39.ttf&quot;</span><span class="cm">,</span> <span class="i">$screensize</span><span class="cm">,</span> <span class="n">0</span><span class="cm">,</span> <span class="i">$posx</span><span class="cm">,</span> <span class="i">$y</span><span class="cm">,</span> <span class="i">$value</span> <span class="s">)</span><span class="sc">;</span>    <span class="c">## should replace code39 with $style, but some may be unavailable (?)</span>

            <span class="c">#	my @bc = $bcim-&gt;stringTTF(&quot;/usr/local/fonts/ttf/$barcode_type.ttf&quot;,$posx,$y+13,$bctext,13,0,$c_barcode_bc);</span>

            <span class="k">my</span> <span class="i">$bc_screen_w</span> = <span class="i">$bc</span>[<span class="n">2</span>] - <span class="i">$bc</span>[<span class="n">6</span>]<span class="sc">;</span>
            <span class="k">my</span> <span class="i">$bc_screen_h</span> = <span class="i">$bc</span>[<span class="n">3</span>] - <span class="i">$bc</span>[<span class="n">7</span>]<span class="sc">;</span>
            <span class="i">$im</span><span class="i">-&gt;copyResized</span><span class="s">(</span> <span class="i">$bcim</span><span class="cm">,</span> <span class="i">$posx</span><span class="cm">,</span> <span class="i">$y</span><span class="cm">,</span> <span class="i">$posx</span><span class="cm">,</span> <span class="i">$y</span><span class="cm">,</span> <span class="i">$bc_screen_w</span><span class="cm">,</span> <span class="i">$bc_height</span><span class="cm">,</span> <span class="i">$bc_screen_w</span><span class="cm">,</span> <span class="i">$bc_screen_h</span> <span class="s">)</span><span class="sc">;</span>

            <span class="c">#	@bc = $bcim-&gt;stringTTF(&quot;$fontpath/arialbd.ttf&quot;,$posx,$posy+8,$bctext,8,0,$white);</span>
            <span class="c">#	@bc = $im-&gt;stringFT($white,&quot;$fontpath/arialbd.ttf&quot;,8,0,$posx+$bc_screen_w/2-($bc[2]-$bc[6])/2,$posy+6+$bc_height/2-($bc[3]-$bc[7])/2,$bctext);</span>
        <span class="s">}</span>
        <span class="k">else</span> <span class="s">{</span>
            <span class="k">my</span> <span class="i">$y</span> = <span class="i">$posy</span> + <span class="i">$screensize</span><span class="sc">;</span>

            <span class="c">#	$im-&gt;stringTTF(&quot;$fontpath/$font&quot;,$posx,$posy,$value,$screensize,20,$c_foreground);</span>
            <span class="c">#</span>
            <span class="c">#  stringFT seems to work better (could not get stringTTF to output anything (?) #</span>
            <span class="i">$im</span><span class="i">-&gt;stringFT</span><span class="s">(</span> <span class="i">$white</span><span class="cm">,</span> <span class="q">&quot;$fontpath/arialbd.ttf&quot;</span><span class="cm">,</span> <span class="i">$screensize</span><span class="cm">,</span> <span class="n">0</span><span class="cm">,</span> <span class="i">$posx</span><span class="cm">,</span> <span class="i">$y</span><span class="cm">,</span> <span class="i">$value</span> <span class="s">)</span><span class="sc">;</span>
        <span class="s">}</span>
    <span class="s">}</span>

    <span class="k">if</span> <span class="s">(</span> <span class="i">$self</span><span class="i">-&gt;_is_valid</span> <span class="s">)</span> <span class="s">{</span>

        <span class="c">#        ## show image with VALID label if identified ##</span>
        <span class="i">$im</span><span class="i">-&gt;string</span><span class="s">(</span> <span class="w">gdTinyFont</span><span class="cm">,</span> <span class="n">5</span><span class="cm">,</span> <span class="i">$height</span> + <span class="n">2</span><span class="cm">,</span> <span class="q">&quot;VALID&quot;</span><span class="cm">,</span> <span class="i">$green</span> <span class="s">)</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">else</span> <span class="s">{</span>

        <span class="c">#        ## show image with INVALID label if not recognized ##</span>
        <span class="i">$im</span><span class="i">-&gt;string</span><span class="s">(</span> <span class="w">gdTinyFont</span><span class="cm">,</span> <span class="n">5</span><span class="cm">,</span> <span class="i">$height</span> + <span class="n">2</span><span class="cm">,</span> <span class="q">&quot;NOT VALID&quot;</span><span class="cm">,</span> <span class="i">$red</span> <span class="s">)</span><span class="sc">;</span>
    <span class="s">}</span>

    <span class="k">my</span> <span class="i">$text</span> = <span class="i">$self</span><span class="i">-&gt;get_attribute</span><span class="s">(</span><span class="q">'comment'</span><span class="s">)</span><span class="sc">;</span>
    <span class="i">$im</span><span class="i">-&gt;string</span><span class="s">(</span> <span class="w">gdTinyFont</span><span class="cm">,</span> <span class="i">$width</span> - <span class="k">length</span><span class="s">(</span><span class="i">$text</span><span class="s">)</span> * <span class="n">5</span><span class="cm">,</span> <span class="i">$height</span> + <span class="n">2</span><span class="cm">,</span> <span class="i">$text</span><span class="cm">,</span> <span class="i">$black</span> <span class="s">)</span><span class="sc">;</span>

    <span class="k">if</span> <span class="s">(</span> <span class="i">$outflag</span> <span class="k">eq</span> <span class="q">&quot;html&quot;</span> <span class="s">)</span> <span class="s">{</span>
        <span class="k">print</span> <span class="q">&quot;Content-type: image/png\n\n&quot;</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="i">$file</span> ||= <span class="q">&quot;/tmp/test.barcode&quot;</span><span class="sc">;</span>    <span class="c">## &lt;CONSTRUCTION&gt;</span>
    <span class="k">open</span><span class="s">(</span> <span class="w">FILE</span><span class="cm">,</span> <span class="q">&quot;&gt;$file&quot;</span> <span class="s">)</span> <span class="k">or</span> <span class="k">return</span><span class="sc">;</span>
    <span class="k">binmode</span> <span class="w">FILE</span><span class="sc">;</span>
    <span class="k">print</span> <span class="i">FILE</span> <span class="i">$im</span><span class="i">-&gt;gif</span><span class="sc">;</span>
    <span class="k">close</span> <span class="w">FILE</span><span class="sc">;</span>

    <span class="k">return</span> <span class="i">$file</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">#</span>
<span class="c"># &lt;CONSTRUCTION&gt;</span>
<span class="c"># not sure if this is working ??</span>
<span class="c">#</span>
<span class="c">#################</span>
<a name="printpng-"></a><span class="k">sub </span><span class="m">printpng</span> <span class="s">{</span>
<span class="c">#################</span>
    <span class="k">my</span> <span class="s">(</span> <span class="i">$self</span><span class="cm">,</span> <span class="i">$flag</span> <span class="s">)</span> = <span class="i">@_</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$sample</span> = <span class="n">0</span><span class="sc">;</span>
    <span class="k">if</span> <span class="s">(</span> <span class="k">defined</span> <span class="i">$flag</span> &amp;&amp; <span class="i">$flag</span> =~ <span class="q">/sample/</span> <span class="s">)</span> <span class="s">{</span>
        <span class="i">$sample</span> = <span class="n">1</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">my</span> <span class="i">$url</span> = <span class="q">&quot;/cgi-bin/intranet/barcode/makepng?&quot;</span><span class="sc">;</span>
    <span class="i">$url</span> .= <span class="q">&quot;id=&quot;</span> . <span class="i">$self</span><span class="i">-&gt;get_attribute</span><span class="s">(</span><span class="q">'id'</span><span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$field</span><span class="sc">;</span>
    <span class="k">foreach</span> <span class="i">$field</span> <span class="s">(</span> <span class="k">keys</span> <span class="i">%</span>{ <span class="i">$self</span>-&gt;{<span class="w">fields</span>} } <span class="s">)</span> <span class="s">{</span>
        <span class="k">my</span> <span class="i">$value</span><span class="sc">;</span>
        <span class="k">if</span> <span class="s">(</span><span class="i">$sample</span><span class="s">)</span> <span class="s">{</span>
            <span class="i">$value</span> = <span class="i">$self</span><span class="i">-&gt;get_field_attribute</span><span class="s">(</span> <span class="i">$field</span><span class="cm">,</span> <span class="q">&quot;sample&quot;</span> <span class="s">)</span><span class="sc">;</span>
        <span class="s">}</span>
        <span class="k">else</span> <span class="s">{</span>
            <span class="i">$value</span> = <span class="i">$self</span><span class="i">-&gt;get_field_attribute</span><span class="s">(</span> <span class="i">$field</span><span class="cm">,</span> <span class="q">&quot;value&quot;</span> <span class="s">)</span><span class="sc">;</span>
        <span class="s">}</span>
        <span class="i">$url</span> .= <span class="q">&quot;&amp;field_$field=&quot;</span> . <span class="i">$value</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">print</span> <span class="q">qq{&lt;img src=&quot;$url&quot;&gt;}</span><span class="sc">;</span>
    <span class="k">return</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">#### Accessors ####</span>

<span class="c">######################</span>
<a name="get_attribute-"></a><span class="k">sub </span><span class="m">get_attribute</span> <span class="s">{</span>
<span class="c">######################</span>
    <span class="k">my</span> <span class="i">$self</span>      = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$attribute</span> = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">return</span> <span class="i">$self</span>-&gt;{<span class="i">$attribute</span>} <span class="k">if</span> <span class="i">$attribute</span> &amp;&amp; <span class="k">defined</span> <span class="i">$self</span>-&gt;{<span class="i">$attribute</span>}<span class="sc">;</span>
    <span class="k">return</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">######################</span>
<a name="set_attribute-"></a><span class="k">sub </span><span class="m">set_attribute</span> <span class="s">{</span>
<span class="c">######################</span>
    <span class="k">my</span> <span class="i">$self</span>      = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$attribute</span> = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$value</span>     = <span class="k">shift</span><span class="sc">;</span>
    <span class="i">$self</span>-&gt;{<span class="i">$attribute</span>} = <span class="i">$value</span><span class="sc">;</span>
    <span class="k">return</span> <span class="i">$value</span> <span class="k">if</span> <span class="i">$attribute</span> &amp;&amp; <span class="k">defined</span> <span class="i">$value</span><span class="sc">;</span>
    <span class="k">return</span> !<span class="i">carp</span><span class="s">(</span><span class="q">&quot;Attribute '$attribute' or Value ('$value') undefined&quot;</span><span class="s">)</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">##############################</span>
<a name="get_field_attribute-"></a><span class="k">sub </span><span class="m">get_field_attribute</span> <span class="s">{</span>
<span class="c">##############################</span>
    <span class="k">my</span> <span class="i">$self</span>      = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$field</span>     = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$attribute</span> = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">return</span> <span class="i">$self</span>-&gt;{<span class="w">fields</span>}{<span class="i">$field</span>}{<span class="i">$attribute</span>} <span class="k">if</span> <span class="i">$field</span> &amp;&amp; <span class="i">$attribute</span> &amp;&amp; <span class="k">defined</span> <span class="i">$self</span>-&gt;{<span class="w">fields</span>}{<span class="i">$field</span>}{<span class="i">$attribute</span>}<span class="sc">;</span>
    <span class="k">return</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">##############################</span>
<a name="set_field_attribute-"></a><span class="k">sub </span><span class="m">set_field_attribute</span> <span class="s">{</span>
<span class="c">##############################</span>
    <span class="k">my</span> <span class="i">$self</span>      = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$field</span>     = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$attribute</span> = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$value</span>     = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">return</span> <span class="s">(</span> <span class="i">$self</span>-&gt;{<span class="w">fields</span>}{<span class="i">$field</span>}{<span class="i">$attribute</span>} = <span class="i">$value</span> <span class="s">)</span> <span class="k">if</span> <span class="i">$field</span> &amp;&amp; <span class="i">$attribute</span> &amp;&amp; <span class="k">defined</span> <span class="i">$value</span><span class="sc">;</span>
    <span class="k">return</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">##########################################################</span>
<span class="c"># Define printer</span>
<span class="c">#</span>
<span class="c"># Return true if printer is identified (uses lpstat to identify)</span>
<span class="c">############################</span>
<a name="establish_printer-"></a><span class="k">sub </span><span class="m">establish_printer</span> <span class="s">{</span>
<span class="c">############################</span>
    <span class="k">my</span> <span class="i">$self</span>    = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$printer</span> = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$dpi</span>     = <span class="k">shift</span><span class="sc">;</span>

    <span class="k">unless</span> <span class="s">(</span><span class="i">$printer</span><span class="s">)</span> <span class="s">{</span> <span class="k">return</span> !<span class="i">carp</span><span class="s">(</span><span class="q">'no printer specified'</span><span class="s">)</span> <span class="s">}</span>
    <span class="i">$self</span>-&gt;{<span class="w">printer</span>} = <span class="i">$printer</span><span class="sc">;</span>
    <span class="i">$self</span>-&gt;{<span class="q">'printer_DPI'</span>} = <span class="i">$dpi</span> <span class="k">if</span> <span class="i">$dpi</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$validate</span> = <span class="q">`lpq -P $printer`</span><span class="sc">;</span>    <span class="c">## ping printer once</span>
    <span class="k">if</span> <span class="s">(</span> <span class="i">$validate</span> =~ <span class="q">/^$printer is ready/</span> <span class="s">)</span> <span class="s">{</span>
        <span class="c">## return true if packet received ##</span>
        <span class="k">return</span> <span class="n">1</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">elsif</span> <span class="s">(</span> <span class="i">$validate</span> =~ <span class="q">/\bnot ready\b/</span> <span class="s">)</span> <span class="s">{</span>
        <span class="c">## printer not ready - network problem or printer is off (?) ##</span>
        <span class="k">print</span> <span class="q">&quot;Printer $printer NOT READY - ensure printer is ON and report issue to Systems&quot;</span><span class="sc">;</span>
        <span class="k">return</span> <span class="n">0</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">else</span> <span class="s">{</span>
        <span class="k">print</span> <span class="q">&quot;Failed to find printer '$printer'.&quot;</span><span class="sc">;</span>
        <span class="c">## else packet not received or host unknown ##</span>
        <span class="k">return</span> <span class="n">0</span><span class="sc">;</span>
    <span class="s">}</span>
<span class="s">}</span>
<span class="c">######################</span>
<span class="c">#</span>
<span class="c"># Text dump of current label configuration settings.</span>
<span class="c">#</span>
<span class="c">#</span>
<span class="c"># Return: string</span>
<span class="c">######################</span>
<a name="dump_format-"></a><span class="k">sub </span><span class="m">dump_format</span> <span class="s">{</span>
<span class="c">######################</span>
    <span class="k">my</span> <span class="s">(</span><span class="i">$self</span><span class="s">)</span> = <span class="i">@_</span><span class="sc">;</span>

    <span class="k">my</span> <span class="i">$dump</span><span class="sc">;</span>
    <span class="i">$dump</span> .= <span class="k">sprintf</span><span class="s">(</span> <span class="q">&quot;%10s: %s\n&quot;</span><span class="cm">,</span>                    <span class="q">&quot;Class&quot;</span><span class="cm">,</span>      <span class="i">$self</span><span class="i">-&gt;get_attribute</span><span class="s">(</span><span class="q">'id'</span><span class="s">)</span> <span class="s">)</span><span class="sc">;</span>
    <span class="i">$dump</span> .= <span class="k">sprintf</span><span class="s">(</span> <span class="q">&quot;%10s: %s\n\n&quot;</span><span class="cm">,</span>                  <span class="q">&quot;Descriptor&quot;</span><span class="cm">,</span> <span class="i">$self</span><span class="i">-&gt;get_attribute</span><span class="s">(</span><span class="q">'comment'</span><span class="s">)</span> <span class="s">)</span><span class="sc">;</span>
    <span class="i">$dump</span> .= <span class="k">sprintf</span><span class="s">(</span> <span class="q">&quot;%10s %35s %3s,%3s %4s %-10s\n&quot;</span><span class="cm">,</span> <span class="q">&quot;fieldname&quot;</span><span class="cm">,</span>  <span class="q">&quot;regexp format&quot;</span><span class="cm">,</span> <span class="q">&quot;x&quot;</span><span class="cm">,</span> <span class="q">&quot;y&quot;</span><span class="cm">,</span> <span class="q">&quot;size&quot;</span><span class="cm">,</span> <span class="q">&quot;options&quot;</span> <span class="s">)</span><span class="sc">;</span>
    <span class="i">$dump</span> .= <span class="k">sprintf</span><span class="s">(</span> <span class="q">&quot;---------------------------------------------------------------------------------\n&quot;</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$field</span><span class="sc">;</span>
    <span class="k">foreach</span> <span class="i">$field</span> <span class="s">(</span> <span class="k">sort</span> <span class="k">keys</span> <span class="i">%</span>{ <span class="i">$self</span>-&gt;{<span class="w">fields</span>} } <span class="s">)</span> <span class="s">{</span>
        <span class="i">$dump</span> .= <span class="k">sprintf</span><span class="s">(</span>
            <span class="q">&quot;%10s %35s %3d,%3d %3d (%s) %s\n&quot;</span><span class="cm">,</span>
            <span class="i">$field</span><span class="cm">,</span>
            <span class="i">$self</span><span class="i">-&gt;get_field_attribute</span><span class="s">(</span> <span class="i">$field</span><span class="cm">,</span> <span class="q">&quot;format&quot;</span> <span class="s">)</span><span class="cm">,</span>
            <span class="i">$self</span><span class="i">-&gt;get_field_attribute</span><span class="s">(</span> <span class="i">$field</span><span class="cm">,</span> <span class="q">&quot;posx&quot;</span> <span class="s">)</span><span class="cm">,</span>
            <span class="i">$self</span><span class="i">-&gt;get_field_attribute</span><span class="s">(</span> <span class="i">$field</span><span class="cm">,</span> <span class="q">&quot;posy&quot;</span> <span class="s">)</span><span class="cm">,</span>
            <span class="i">$self</span><span class="i">-&gt;get_field_attribute</span><span class="s">(</span> <span class="i">$field</span><span class="cm">,</span> <span class="q">&quot;size&quot;</span> <span class="s">)</span><span class="cm">,</span>
            <span class="i">$self</span><span class="i">-&gt;get_field_attribute</span><span class="s">(</span> <span class="i">$field</span><span class="cm">,</span> <span class="q">&quot;style&quot;</span> <span class="s">)</span><span class="cm">,</span>
            <span class="i">$self</span><span class="i">-&gt;get_field_attribute</span><span class="s">(</span> <span class="i">$field</span><span class="cm">,</span> <span class="q">&quot;opts&quot;</span> <span class="s">)</span>
        <span class="s">)</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">return</span> <span class="i">$dump</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">######################################################</span>
<span class="c"># Return boolean confirming valid label identified</span>
<span class="c">#</span>
<span class="c">#</span>
<span class="c">################</span>
<a name="_is_valid-"></a><span class="k">sub </span><span class="m">_is_valid</span> <span class="s">{</span>
<span class="c">################</span>
    <span class="k">my</span> <span class="i">$self</span>  = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$value</span> = <span class="i">$self</span><span class="i">-&gt;get_attribute</span><span class="s">(</span><span class="q">'valid'</span><span class="s">)</span><span class="sc">;</span>

    <span class="k">return</span> <span class="i">$value</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">################################################################</span>
<span class="c">#</span>
<span class="c"># Creates a PNG image of the current label.</span>
<span class="c"># as a class variable LPRQUEUE</span>
<span class="c">#</span>
<span class="c"># Convert from ZPL dot unit to screen unit.</span>
<span class="c">#</span>
<span class="c">################################################################</span>
<a name="_ZPLtoScreenScale-"></a><span class="k">sub </span><span class="m">_ZPLtoScreenScale</span> <span class="s">{</span>
<span class="c">################################################################</span>

    <span class="k">my</span> <span class="i">$self</span> = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$x</span>    = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$dpi</span>  = <span class="i">$self</span>-&gt;{<span class="w">scale_DPI</span>}<span class="sc">;</span>

    <span class="k">my</span> <span class="i">$u</span> = <span class="k">int</span><span class="s">(</span> <span class="i">$x</span> * <span class="s">(</span> <span class="i">$DPIs</span> / <span class="i">$dpi</span> <span class="s">)</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">return</span> <span class="i">$u</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">################################################################</span>
<a name="_ZPLtoScreen-"></a><span class="k">sub </span><span class="m">_ZPLtoScreen</span> <span class="s">{</span>
<span class="c">################################################################</span>
    <span class="k">my</span> <span class="i">$self</span> = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="s">(</span> <span class="i">$x</span><span class="cm">,</span> <span class="i">$y</span> <span class="s">)</span> = <span class="i">@_</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$u</span> = <span class="k">int</span><span class="s">(</span> <span class="s">(</span> <span class="i">$x</span> + <span class="i">$self</span><span class="i">-&gt;get_attribute</span><span class="s">(</span><span class="q">'zero_x'</span><span class="s">)</span> <span class="s">)</span> * <span class="s">(</span> <span class="i">$DPIs</span> / <span class="i">$self</span>-&gt;{<span class="w">scale_DPI</span>} <span class="s">)</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$v</span> = <span class="k">int</span><span class="s">(</span> <span class="s">(</span> <span class="i">$y</span> + <span class="n">0.5</span> * <span class="i">$self</span><span class="i">-&gt;get_attribute</span><span class="s">(</span><span class="q">'zero_y'</span><span class="s">)</span> <span class="s">)</span> * <span class="s">(</span> <span class="i">$DPIs</span> / <span class="i">$self</span>-&gt;{<span class="w">scale_DPI</span>} <span class="s">)</span> <span class="s">)</span><span class="sc">;</span>

    <span class="k">return</span> <span class="s">(</span> <span class="i">$u</span><span class="cm">,</span> <span class="i">$v</span> <span class="s">)</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">###################</span>
<span class="c">#</span>
<span class="c"># method to keep track of barcodes printed</span>
<span class="c"># (eg tiny files maintaining a print count for each label type ?)</span>
<span class="c">#</span>
<span class="c">###################</span>
<a name="_Accounting-"></a><span class="k">sub </span><span class="m">_Accounting</span> <span class="s">{</span>
<span class="c">###################</span>
    <span class="c"># &lt;CONTSTRUCTION&gt; - optional - low priority</span>

    <span class="k">return</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">#</span>
<span class="c"># local message generator</span>
<span class="c">#</span>
<span class="c">################</span>
<a name="_Message-"></a><span class="k">sub </span><span class="m">_Message</span> <span class="s">{</span>
<span class="c">################</span>
    <span class="k">my</span> <span class="i">$message</span> = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">print</span> <span class="q">&quot;$message\n&quot;</span><span class="sc">;</span>
    <span class="k">return</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">#</span>
<span class="c"># Validate input fields for labels as required.</span>
<span class="c"># Options:</span>
<span class="c">#   1 - supply field and value arguments to validate a particular field</span>
<span class="c">#   2 - no fields (validates current fields to ensure mandatory fields are supplied for all defined label items)</span>
<span class="c">#</span>
<span class="c">#</span>
<span class="c">##################</span>
<a name="_validate-"></a><span class="k">sub </span><span class="m">_validate</span> <span class="s">{</span>
<span class="c">##################</span>
    <span class="k">my</span> <span class="i">$self</span>  = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">%args</span>  = <span class="i">@_</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$field</span> = <span class="i">$args</span>{-<span class="w">field</span>} <span class="k">if</span> <span class="k">defined</span> <span class="i">$args</span>{-<span class="w">field</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$value</span> = <span class="i">$args</span>{-<span class="w">value</span>} <span class="k">if</span> <span class="k">defined</span> <span class="i">$args</span>{-<span class="w">value</span>}<span class="sc">;</span>

    <span class="k">if</span> <span class="s">(</span> <span class="k">defined</span> <span class="i">$field</span> &amp;&amp; <span class="k">defined</span> <span class="i">$value</span> <span class="s">)</span> <span class="s">{</span>
        <span class="k">return</span> <span class="i">$self</span><span class="i">-&gt;_validate_field</span><span class="s">(</span> -<span class="w">field</span> <span class="cm">=&gt;</span> <span class="i">$field</span><span class="cm">,</span> -<span class="w">value</span> <span class="cm">=&gt;</span> <span class="i">$value</span> <span class="s">)</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">elsif</span> <span class="s">(</span> !<span class="s">(</span> <span class="k">defined</span> <span class="i">$field</span> <span class="s">)</span> &amp;&amp; !<span class="s">(</span> <span class="k">defined</span> <span class="i">$value</span> <span class="s">)</span> <span class="s">)</span> <span class="s">{</span>
        <span class="c">## no input arguments -&gt; validate entire label</span>
        <span class="k">foreach</span> <span class="k">my</span> <span class="i">$field</span> <span class="s">(</span> <span class="i">$self</span><span class="i">-&gt;get_fields</span><span class="s">(</span><span class="s">)</span> <span class="s">)</span> <span class="s">{</span>
            <span class="k">unless</span> <span class="s">(</span> <span class="i">$self</span><span class="i">-&gt;_validate_field</span><span class="s">(</span> -<span class="w">field</span> <span class="cm">=&gt;</span> <span class="i">$field</span> <span class="s">)</span> <span class="s">)</span> <span class="s">{</span>
                <span class="k">return</span> !<span class="i">carp</span><span class="s">(</span><span class="q">&quot;$field Field failed validation&quot;</span><span class="s">)</span><span class="sc">;</span>
            <span class="s">}</span>
        <span class="s">}</span>
        <span class="k">foreach</span> <span class="k">my</span> <span class="i">$attribute</span> <span class="s">(</span><span class="i">@mandatory_attributes</span><span class="s">)</span> <span class="s">{</span>
            <span class="k">unless</span> <span class="s">(</span> <span class="k">defined</span> <span class="i">$self</span>-&gt;{<span class="i">$attribute</span>} <span class="s">)</span> <span class="s">{</span>
                <span class="k">return</span> !<span class="i">carp</span><span class="s">(</span> <span class="q">&quot;$attribute attribute not set ($self-&gt;{type}) - failed validation&quot;</span> <span class="s">)</span><span class="sc">;</span>
            <span class="s">}</span>
        <span class="s">}</span>
        <span class="i">$self</span><span class="i">-&gt;set_attribute</span><span class="s">(</span> <span class="q">'valid'</span><span class="cm">,</span> <span class="n">1</span> <span class="s">)</span><span class="sc">;</span>
        <span class="k">return</span> <span class="n">1</span><span class="sc">;</span>    <span class="c">## passed both mandatory sets of checks with no returns ##</span>
    <span class="s">}</span>
    <span class="k">else</span> <span class="s">{</span>
        <span class="i">carp</span><span class="s">(</span><span class="q">&quot;Field validation requires field and value parameters&quot;</span><span class="s">)</span><span class="sc">;</span>
        <span class="k">return</span> <span class="n">0</span><span class="sc">;</span>
    <span class="s">}</span>
<span class="s">}</span>

<span class="c">##########################</span>
<a name="_validate_field-"></a><span class="k">sub </span><span class="m">_validate_field</span> <span class="s">{</span>
<span class="c">##########################</span>
    <span class="k">my</span> <span class="i">$self</span>  = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">%args</span>  = <span class="i">@_</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$field</span> = <span class="i">$args</span>{-<span class="w">field</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$value</span> = <span class="k">defined</span> <span class="i">$args</span>{-<span class="w">value</span>} ? <span class="i">$args</span>{-<span class="w">value</span>} <span class="co">:</span> <span class="i">$self</span>-&gt;{<span class="w">fields</span>}{<span class="i">$field</span>}{<span class="w">value</span>}<span class="sc">;</span>

    <span class="k">my</span> <span class="i">$format</span> = <span class="i">$self</span><span class="i">-&gt;get_field_attribute</span><span class="s">(</span> <span class="i">$field</span><span class="cm">,</span> <span class="q">&quot;format&quot;</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$opts</span>   = <span class="i">$self</span><span class="i">-&gt;get_field_attribute</span><span class="s">(</span> <span class="i">$field</span><span class="cm">,</span> <span class="q">&quot;opts&quot;</span> <span class="s">)</span><span class="sc">;</span>

    <span class="c"># Validation is done using the regular expression (format) of the field.</span>
    <span class="c"># Some fields can have other specific values which do not fit their regular</span>
    <span class="c"># expression. For example, a date is usually \d{4}-\d{2}-\d{2} (e.g. 2000-07-07)</span>
    <span class="c"># but can have the value 'today', 'tomorrow' or '+n days'</span>

    <span class="k">foreach</span> <span class="k">my</span> <span class="i">$attribute</span> <span class="s">(</span><span class="i">@mandatory_keys</span><span class="s">)</span> <span class="s">{</span>
        <span class="k">unless</span> <span class="s">(</span> <span class="k">defined</span> <span class="i">$self</span>-&gt;{<span class="w">fields</span>}{<span class="i">$field</span>}{<span class="i">$attribute</span>} || <span class="s">(</span> <span class="i">$attribute</span> <span class="k">eq</span> <span class="q">'value'</span> &amp;&amp; <span class="k">defined</span> <span class="i">$value</span> <span class="s">)</span> <span class="s">)</span> <span class="s">{</span>
            <span class="i">_Message</span><span class="s">(</span><span class="q">&quot;$attribute NOT defined for $field.&quot;</span><span class="s">)</span><span class="sc">;</span>
            <span class="i">carp</span><span class="s">(</span><span class="q">&quot;$field $attribute undefined&quot;</span><span class="s">)</span><span class="sc">;</span>
            <span class="k">return</span> <span class="n">0</span><span class="sc">;</span>
        <span class="s">}</span>
    <span class="s">}</span>
    <span class="c">## also check format if required ##</span>
    <span class="k">unless</span> <span class="s">(</span><span class="i">$format</span><span class="s">)</span> <span class="s">{</span> <span class="k">return</span> <span class="n">1</span> <span class="s">}</span>    <span class="c">##  no specified format ...</span>

    <span class="c"># Handle special cases first.</span>
    <span class="k">if</span> <span class="s">(</span> <span class="i">$field</span> <span class="k">eq</span> <span class="q">&quot;date&quot;</span> <span class="s">)</span> <span class="s">{</span>
        <span class="k">if</span> <span class="s">(</span> <span class="i">$value</span> <span class="k">eq</span> <span class="q">&quot;today&quot;</span> <span class="s">)</span> <span class="s">{</span>
            <span class="i">$value</span> = <span class="k">sprintf</span><span class="s">(</span> <span class="q">&quot;%04d-%02d-%02d&quot;</span><span class="cm">,</span> <span class="i">Today</span><span class="s">(</span><span class="s">)</span> <span class="s">)</span><span class="sc">;</span>
        <span class="s">}</span>
        <span class="k">if</span> <span class="s">(</span> <span class="i">$value</span> <span class="k">eq</span> <span class="q">&quot;tomorrow&quot;</span> <span class="s">)</span> <span class="s">{</span>
            <span class="i">$value</span> = <span class="k">sprintf</span><span class="s">(</span> <span class="q">&quot;%04d-%02d-%02d&quot;</span><span class="cm">,</span> <span class="i">Add_Delta_Days</span><span class="s">(</span> <span class="i">Today</span><span class="s">(</span><span class="s">)</span><span class="cm">,</span> <span class="n">1</span> <span class="s">)</span> <span class="s">)</span><span class="sc">;</span>
        <span class="s">}</span>
        <span class="k">if</span> <span class="s">(</span> <span class="i">$value</span> =~ <span class="q">/\+(\d+)\s*days/</span> <span class="s">)</span> <span class="s">{</span>
            <span class="k">my</span> <span class="i">$ndays</span> = <span class="i">$1</span><span class="sc">;</span>
            <span class="i">$value</span> = <span class="k">sprintf</span><span class="s">(</span> <span class="q">&quot;%04d-%02d-%02d&quot;</span><span class="cm">,</span> <span class="i">Add_Delta_Days</span><span class="s">(</span> <span class="i">Today</span><span class="s">(</span><span class="s">)</span><span class="cm">,</span> <span class="i">$ndays</span> <span class="s">)</span> <span class="s">)</span><span class="sc">;</span>
        <span class="s">}</span>
    <span class="s">}</span>
    <span class="k">if</span> <span class="s">(</span> <span class="i">$value</span> =~ <span class="q">/$format/</span> <span class="s">)</span> <span class="s">{</span>
        <span class="k">if</span> <span class="s">(</span> <span class="i">$opts</span> =~ <span class="q">m/caps/</span> <span class="s">)</span> <span class="s">{</span>
            <span class="i">$value</span> =~ <span class="q">tr/a-z/A-Z/</span><span class="sc">;</span>    <span class="c">### WHY ? Commented out (rguin Nov 28/2002)</span>
        <span class="s">}</span>

        <span class="k">if</span> <span class="s">(</span> <span class="i">$opts</span> =~ <span class="q">m/zeropad=(\d+)/</span> <span class="s">)</span> <span class="s">{</span>
            <span class="k">my</span> <span class="i">$zeropad</span> = <span class="i">$1</span><span class="sc">;</span>
            <span class="i">$value</span> =~ <span class="q">/([a-zA-Z]*)(\d+)/</span><span class="sc">;</span>
            <span class="i">$value</span> = <span class="k">sprintf</span><span class="s">(</span> <span class="q">&quot;${1}%0${zeropad}d&quot;</span><span class="cm">,</span> <span class="i">$2</span> <span class="s">)</span><span class="sc">;</span>
        <span class="s">}</span>
        <span class="i">$self</span><span class="i">-&gt;set_field_attribute</span><span class="s">(</span> <span class="i">$field</span><span class="cm">,</span> <span class="q">'value'</span><span class="cm">,</span> <span class="i">$value</span> <span class="s">)</span><span class="sc">;</span>
        <span class="k">return</span> <span class="n">1</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">else</span> <span class="s">{</span>
        <span class="k">print</span> <span class="q">&quot;'$value' does not adhere to format: $format.&quot;</span><span class="sc">;</span>
        <span class="k">return</span> <span class="n">0</span><span class="sc">;</span>
    <span class="s">}</span>
<span class="s">}</span>

<a name="Pause-"></a><span class="k">sub </span><span class="m">Pause</span> <span class="s">{</span>
    <span class="k">my</span> <span class="i">$time</span> = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$t0</span>   = <span class="s">[</span><span class="w">gettimeofday</span><span class="s">]</span><span class="sc">;</span>
    <span class="k">foreach</span> <span class="s">(</span> <span class="n">0</span> .. <span class="n">1e7</span> <span class="s">)</span> <span class="s">{</span>
        <span class="k">if</span> <span class="s">(</span> <span class="i">tv_interval</span><span class="s">(</span><span class="i">$t0</span><span class="s">)</span> &gt; <span class="i">$time</span> <span class="s">)</span> <span class="s">{</span>
            <span class="k">last</span><span class="sc">;</span>
        <span class="s">}</span>
    <span class="s">}</span>
    <span class="k">return</span> <span class="i">tv_interval</span><span class="s">(</span><span class="i">$t0</span><span class="s">)</span><span class="sc">;</span>
<span class="s">}</span>

<span class="k">return</span> <span class="n">1</span><span class="sc">;</span>
<a name="EOF-"></a></pre>
</body>
</html>
