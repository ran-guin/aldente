<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>Directory.pm</title>
<link rev="made" href="mailto:root@localhost" />
</head>

<style type="text/css">
<!--
/* default style sheet generated by perltidy */
body {background: #FFFFFF; color: #000000}
pre { color: #000000; 
      background: #F0F0F0;
      font-family: courier;
    } 

.c  { color: #228B22;} /* comment */
.cm { color: #000000;} /* comma */
.co { color: #000000;} /* colon */
.h  { color: #CD5555; font-weight:bold;} /* here-doc-target */
.hh { color: #CD5555; font-style:italic;} /* here-doc-text */
.i  { color: #00688B;} /* identifier */
.j  { color: #CD5555; font-weight:bold;} /* label */
.k  { color: #8B008B; font-weight:bold;} /* keyword */
.m  { color: #FF0000; font-weight:bold;} /* subroutine */
.n  { color: #B452CD;} /* numeric */
.p  { color: #000000;} /* paren */
.pd { color: #228B22; font-style:italic;} /* pod-text */
.pu { color: #000000;} /* punctuation */
.q  { color: #CD5555;} /* quote */
.s  { color: #000000;} /* structure */
.sc { color: #000000;} /* semicolon */
.v  { color: #B452CD;} /* v-string */
.w  { color: #000000;} /* bareword */
-->
</style>
<body style="background-color: white">
<a name="-top-"></a>
<h1>Directory.pm</h1>

<p><a name="__index__"></a></p>
<!-- INDEX BEGIN -->

<ul>

	<li><a href="#name__uplink_">NAME &lt;UPLINK&gt;</a></li>
	<li><a href="#synopsis__uplink_">SYNOPSIS &lt;UPLINK&gt;</a></li>
	<li><a href="#description__uplink_">DESCRIPTION &lt;UPLINK&gt;</a></li>
	<li><a href="#known_issues__uplink_">KNOWN ISSUES &lt;UPLINK&gt;</a></li>
	<li><a href="#future_improvements__uplink_">FUTURE IMPROVEMENTS &lt;UPLINK&gt;</a></li>
	<li><a href="#authors__uplink_">AUTHORS &lt;UPLINK&gt;</a></li>
	<li><a href="#created__uplink_">CREATED &lt;UPLINK&gt;</a></li>
	<li><a href="#revision__uplink_">REVISION &lt;UPLINK&gt;</a></li>
</ul>
<!-- INDEX END -->
<h2>Code Index:</h2>
<!-- BEGIN CODE INDEX --><a name="code-index"></a>
<ul>
<li><a href="#package-Directory-">package Directory</a>
<ul>
<li><a href="#new-">new</a></li>
<li><a href="#search-">search</a></li>
<li><a href="#generate_html_navigator-">generate_html_navigator</a></li>
<li><a href="#generate_html_info-">generate_html_info</a></li>
<li><a href="#search_directories-">search_directories</a></li>
<li><a href="#search_perl_files-">search_perl_files</a></li>
<li><a href="#generate_HTML-">generate_HTML</a></li>
<li><a href="#generate_perldoc-">generate_perldoc</a></li>
<li><a href="#_build_perldoc-">_build_perldoc</a></li>
<li><a href="#_build_code-">_build_code</a></li>
</ul>
</li>
<li><a href="#EOF-">EOF</a></li>
</ul>
<!-- END CODE INDEX -->

<hr />
<pre><span class="c">################################################################################</span>
<span class="c"># Directory.pm</span>
<span class="c">#</span>
<span class="c"># This module auto-documents modules</span>
<span class="c">#</span>
<span class="c">###############################################################################</span>
<a name="package-Directory-"></a><span class="k">package </span><span class="i">Directory</span><span class="sc">;</span>

<span class="c">##############################</span>
<span class="c"># perldoc_header             #</span>
<span class="c">##############################</span>

</pre><p></p>
<hr />
<h1><a name="name__uplink_">NAME &lt;UPLINK&gt;</a></h1>
<p>Directory.pm - This module auto-documents modules</p>
<p>
</p>
<hr />
<h1><a name="synopsis__uplink_">SYNOPSIS &lt;UPLINK&gt;</a></h1>
<pre>
        &lt;&lt;SYNOPSIS&gt;&gt;</pre>
<p>
</p>
<hr />
<h1><a name="description__uplink_">DESCRIPTION &lt;UPLINK&gt;</a></h1>
This module auto-documents modules <BR><pre>
<span class="c">##############################</span>
<span class="c"># superclasses               #</span>
<span class="c">##############################</span>

<span class="i">@ISA</span> = <span class="q">qw(DB_Object)</span><span class="sc">;</span>

<span class="c">##############################</span>
<span class="c"># system_variables           #</span>
<span class="c">##############################</span>
<span class="c">##############################</span>
<span class="c"># standard_modules_ref       #</span>
<span class="c">##############################</span>
<span class="k">use</span> <span class="w">CGI</span> <span class="q">qw(:standard)</span><span class="sc">;</span>
<span class="k">use</span> <span class="w">Data::Dumper</span><span class="sc">;</span>
<span class="k">use</span> <span class="w">strict</span><span class="sc">;</span>

<span class="c">##############################</span>
<span class="c"># custom_modules_ref         #</span>
<span class="c">##############################</span>
<span class="k">use</span> <span class="w">SDB::DB_Object</span><span class="sc">;</span>
<span class="k">use</span> <span class="w">RGTools::RGIO</span><span class="sc">;</span>
<span class="k">use</span> <span class="w">RGTools::Views</span><span class="sc">;</span>

<span class="c">##############################</span>
<span class="c"># global_vars                #</span>
<span class="c">##############################</span>
<span class="c">##############################</span>
<span class="c"># modular_vars               #</span>
<span class="c">##############################</span>
<span class="c">##############################</span>
<span class="c"># constants                  #</span>
<span class="c">##############################</span>
<span class="c">##############################</span>
<span class="c"># main_header                #</span>
<span class="c">##############################</span>
<span class="c">##############################</span>
<span class="c"># constructor                #</span>
<span class="c">##############################</span>

<span class="c">#</span>
<span class="c"># Initialize object...</span>
<span class="c">#</span>
<span class="c">########</span>
<a name="new-"></a><span class="k">sub </span><span class="m">new</span> <span class="s">{</span>
<span class="c">########</span>
    <span class="c">#</span>
    <span class="c"># Constructor</span>
    <span class="c">#</span>
    <span class="k">my</span> <span class="i">$this</span> = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">%args</span> = <span class="i">@_</span><span class="sc">;</span>

    <span class="k">my</span> <span class="s">(</span><span class="i">$class</span><span class="s">)</span> = <span class="k">ref</span><span class="s">(</span><span class="i">$this</span><span class="s">)</span> || <span class="i">$this</span><span class="sc">;</span>
    <span class="k">my</span> <span class="s">(</span><span class="i">$self</span><span class="s">)</span> = <span class="s">{</span><span class="s">}</span><span class="sc">;</span>

    <span class="k">bless</span> <span class="i">$self</span><span class="cm">,</span> <span class="i">$class</span><span class="sc">;</span>

    <span class="i">$self</span>-&gt;{<span class="w">directory</span>} = <span class="i">$args</span>{-<span class="w">search</span>} || <span class="i">$args</span>{-<span class="w">directory</span>}<span class="sc">;</span>    <span class="c">## directory of interest</span>

    <span class="k">if</span> <span class="s">(</span> <span class="i">$args</span>{-<span class="w">search</span>} <span class="s">)</span> <span class="s">{</span>
        <span class="i">$self</span><span class="i">-&gt;search</span><span class="s">(</span> -<span class="w">set</span> <span class="cm">=&gt;</span> <span class="n">1</span> <span class="s">)</span><span class="sc">;</span>
    <span class="s">}</span>                                                            <span class="c">## search for details</span>

    <span class="k">return</span> <span class="i">$self</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">##############################</span>
<span class="c"># public_methods             #</span>
<span class="c">##############################</span>

<span class="c">###########</span>
<a name="search-"></a><span class="k">sub </span><span class="m">search</span> <span class="s">{</span>
<span class="c">###########</span>
    <span class="c">#</span>
    <span class="c"># Get list of files / directories etc.</span>
    <span class="c">#</span>
    <span class="k">my</span> <span class="i">$self</span> = <span class="k">shift</span><span class="sc">;</span>

    <span class="k">my</span> <span class="i">%args</span> = <span class="i">@_</span><span class="sc">;</span>

    <span class="k">my</span> <span class="i">$type</span> = <span class="i">$args</span>{-<span class="w">type</span>} || <span class="q">'f'</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$dir</span>  = <span class="i">$args</span>{-<span class="w">dir</span>}  || <span class="i">$self</span>-&gt;{<span class="w">directory</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$ext</span>  = <span class="i">$args</span>{-<span class="w">ext</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$set</span> = <span class="i">$args</span>{-<span class="w">set</span>}<span class="sc">;</span>             <span class="c">## (re)set object attributes</span>
    <span class="k">my</span> <span class="i">$depth</span> = <span class="i">$args</span>{-<span class="w">depth</span>} || <span class="n">1</span><span class="sc">;</span>    <span class="c">## depth to search</span>

    <span class="k">my</span> <span class="i">$name</span><span class="sc">;</span>
    <span class="k">if</span> <span class="s">(</span><span class="i">$ext</span><span class="s">)</span> <span class="s">{</span> <span class="i">$name</span> = <span class="q">&quot;-name *$ext&quot;</span> <span class="s">}</span>

    <span class="k">print</span> <span class="q">&quot;search ($dir/*$ext $type ($depth:$set)\n&quot;</span><span class="sc">;</span>

    <span class="k">my</span> <span class="i">@files</span>       = <span class="k">split</span> <span class="q">&quot;\n&quot;</span><span class="cm">,</span> <span class="q">`find $dir/ $name -type f -maxdepth $depth -printf '%f\n'`</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">@directories</span> = <span class="k">split</span> <span class="q">&quot;\n&quot;</span><span class="cm">,</span> <span class="q">`find $dir/ -type d -maxdepth $depth -printf '%f\n'`</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">@links</span>       = <span class="k">split</span> <span class="q">&quot;\n&quot;</span><span class="cm">,</span> <span class="q">`find $dir/ -type l -maxdepth $depth -printf '%f\n'`</span><span class="sc">;</span>

    <span class="k">my</span> <span class="i">@found</span> = <span class="k">split</span> <span class="q">&quot;\n&quot;</span><span class="cm">,</span> <span class="q">`find $dir/ $name -type $type -maxdepth $depth -printf '%f\n'`</span><span class="sc">;</span>

    <span class="k">if</span> <span class="s">(</span><span class="i">$set</span><span class="s">)</span> <span class="s">{</span>
        <span class="i">$self</span>-&gt;{<span class="w">files</span>}       = \<span class="i">@files</span><span class="sc">;</span>
        <span class="i">$self</span>-&gt;{<span class="w">directories</span>} = \<span class="i">@directories</span><span class="sc">;</span>
        <span class="i">$self</span>-&gt;{<span class="w">links</span>}       = \<span class="i">@links</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">return</span> <span class="i">@found</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">########################</span>
<a name="generate_html_navigator-"></a><span class="k">sub </span><span class="m">generate_html_navigator</span> <span class="s">{</span>
<span class="c">########################</span>
    <span class="k">my</span> <span class="i">$self</span> = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">%args</span> = <span class="i">@_</span><span class="sc">;</span>

    <span class="k">my</span> <span class="i">$files</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$ext</span><span class="sc">;</span>

    <span class="k">my</span> <span class="i">$filename</span>       = <span class="i">$args</span>{-<span class="w">filename</span>} || <span class="q">'home'</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$html_directory</span> = <span class="i">$args</span>{-<span class="w">html_dir</span>} || <span class="q">''</span><span class="sc">;</span>                      <span class="c">## output directory (for html file)</span>
    <span class="k">my</span> <span class="i">$html_URL</span>       = <span class="i">$args</span>{-<span class="w">html_URL</span>} || <span class="q">''</span><span class="sc">;</span>                      <span class="c">## return URL directory (for links)</span>
    <span class="k">my</span> <span class="i">$css_dir</span>        = <span class="i">$args</span>{-<span class="w">css_dir</span>}  || <span class="q">''</span><span class="sc">;</span>                      <span class="c">##</span>
    <span class="k">my</span> <span class="i">$dir</span>            = <span class="i">$args</span>{-<span class="w">dir</span>}      || <span class="i">$self</span>-&gt;{<span class="w">directory</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$extensions</span>     = <span class="i">$args</span>{-<span class="w">ext</span>}      || <span class="q">',pl,pm,js,help,html'</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$uplink</span>    = <span class="i">$args</span>{-<span class="w">uplink</span>}<span class="sc">;</span>                                   <span class="c">## provide link to previous level...</span>
    <span class="k">my</span> <span class="i">$recursive</span> = <span class="i">$args</span>{-<span class="w">recursive</span>}<span class="sc">;</span>

    <span class="k">my</span> <span class="i">$local_filename</span> = <span class="i">$filename</span><span class="sc">;</span>
    <span class="k">if</span> <span class="s">(</span> <span class="i">$dir</span> <span class="k">eq</span> <span class="i">$self</span>-&gt;{<span class="w">directory</span>} <span class="s">)</span> <span class="s">{</span>
        <span class="i">$local_filename</span> = <span class="i">$dir</span><span class="sc">;</span>
    <span class="s">}</span>                                                                 <span class="c">## use directory name if first time through...</span>

    <span class="k">my</span> <span class="i">@all_extensions</span> = <span class="k">split</span> <span class="q">','</span><span class="cm">,</span> <span class="i">$extensions</span><span class="sc">;</span>

    <span class="k">my</span> <span class="i">$name</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">@parse_extensions</span> = <span class="s">(</span> <span class="q">'pl'</span><span class="cm">,</span> <span class="q">'pm'</span> <span class="s">)</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">%Files</span><span class="sc">;</span>
    <span class="k">foreach</span> <span class="k">my</span> <span class="i">$this_ext</span> <span class="s">(</span><span class="i">@all_extensions</span><span class="s">)</span> <span class="s">{</span>
        <span class="k">if</span> <span class="s">(</span><span class="i">$this_ext</span><span class="s">)</span> <span class="s">{</span> <span class="i">$name</span> = <span class="q">&quot;-iregex '.*\.$this_ext'&quot;</span> <span class="s">}</span>
        <span class="k">else</span> <span class="s">{</span>
            <span class="i">$name</span>     = <span class="q">&quot;-iregex '[a-zA-Z0-9_\/]*'&quot;</span><span class="sc">;</span>
            <span class="i">$this_ext</span> = <span class="q">'(no extension)'</span><span class="sc">;</span>
        <span class="s">}</span>
        <span class="i">$Files</span>{<span class="i">$this_ext</span>} = <span class="q">`find $dir/ $name -type f -maxdepth 1 -printf '%f,'`</span><span class="sc">;</span>

        <span class="k">print</span> <span class="q">&quot;\n***  $dir ($this_ext) ***\n&quot;</span><span class="sc">;</span>
        <span class="k">print</span> <span class="q">qq{find $dir/ $name -type f -maxdepth 1 -printf '%f,'}</span><span class="sc">;</span>
        <span class="k">print</span> <span class="q">&quot;\n&quot;</span><span class="sc">;</span>
        <span class="k">print</span> <span class="i">$Files</span>{<span class="i">$this_ext</span>}<span class="sc">;</span>
        <span class="k">print</span> <span class="q">&quot;\n****\n&quot;</span><span class="sc">;</span>
    <span class="s">}</span>

    <span class="k">my</span> <span class="i">@directories</span> = <span class="k">split</span> <span class="q">&quot;,&quot;</span><span class="cm">,</span> <span class="q">`find $dir/ -type d -maxdepth 1 -printf '%f,'`</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">@links</span>       = <span class="k">split</span> <span class="q">&quot;,&quot;</span><span class="cm">,</span> <span class="q">`find $dir/ -type l -maxdepth 1 -printf '%f,'`</span><span class="sc">;</span>

    <span class="k">my</span> <span class="i">$html_filename</span> = <span class="q">&quot;$dir&quot;</span><span class="sc">;</span>
    <span class="i">$html_filename</span> =~ <span class="q">s/$self-&gt;{directory}//</span><span class="sc">;</span>    <span class="c">## cut off base directory</span>
    <span class="i">$html_filename</span> =~ <span class="q">s/\//\./g</span><span class="sc">;</span>
    <span class="i">$html_filename</span> =~ <span class="q">s/^[\.\s]+//g</span><span class="sc">;</span>
    <span class="k">if</span>   <span class="s">(</span><span class="i">$html_filename</span><span class="s">)</span> <span class="s">{</span> <span class="i">$html_filename</span> = <span class="q">&quot;home.$html_filename&quot;</span><span class="sc">;</span> <span class="s">}</span>
    <span class="k">else</span>                  <span class="s">{</span> <span class="i">$html_filename</span> = <span class="q">'home'</span> <span class="s">}</span>

    <span class="k">open</span><span class="s">(</span> <span class="w">FILES</span><span class="cm">,</span> <span class="q">&quot;&gt;$html_directory/$html_filename.dir.html&quot;</span> <span class="s">)</span> <span class="k">or</span> <span class="k">die</span> <span class="q">&quot;cannot open $html_directory/$html_filename.help&quot;</span><span class="sc">;</span>

    <span class="k">if</span> <span class="s">(</span><span class="i">$uplink</span><span class="s">)</span> <span class="s">{</span>
        <span class="k">print</span> <span class="i">FILES</span> <span class="q">&quot;parent directories:   ...(home = $self-&gt;{directory})&lt;P&gt;&quot;</span><span class="sc">;</span>
        <span class="k">my</span> <span class="i">$target</span> = <span class="i">$uplink</span><span class="sc">;</span>
        <span class="k">if</span> <span class="s">(</span> <span class="i">$target</span> =~ <span class="q">/$html_URL\/(.*)\.dir\.html/</span> <span class="s">)</span> <span class="s">{</span> <span class="i">$target</span> = <span class="i">$1</span> <span class="s">}</span>
        <span class="k">my</span> <span class="i">$link</span> = <span class="q">&quot;&lt;A Href=$html_URL/$target.dir.html&gt;&lt;B&gt;$target&lt;/B&gt;&lt;/A&gt;&quot;</span><span class="sc">;</span>
        <span class="k">print</span> <span class="i">FILES</span> <span class="q">&quot;$link&lt;BR&gt;\n&quot;</span><span class="sc">;</span>
        <span class="k">while</span> <span class="s">(</span> <span class="i">$target</span> =~ <span class="q">s/^(.+)\.(.+?)$/$1/</span> <span class="s">)</span> <span class="s">{</span>
            <span class="k">my</span> <span class="i">$link</span> = <span class="q">&quot;&lt;A Href=$html_URL/$target.dir.html&gt;&lt;B&gt;$target&lt;/B&gt;&lt;/A&gt;&quot;</span><span class="sc">;</span>
            <span class="k">print</span> <span class="i">FILES</span> <span class="q">&quot;$link&lt;BR&gt;\n&quot;</span><span class="sc">;</span>
        <span class="s">}</span>
        <span class="k">print</span> <span class="i">FILES</span> <span class="q">&quot;&lt;HR&gt;&quot;</span><span class="sc">;</span>
    <span class="s">}</span>

    <span class="k">my</span> <span class="i">$readme</span><span class="sc">;</span>
    <span class="k">if</span> <span class="s">(</span> <span class="k">-e</span> <span class="q">&quot;$dir/README&quot;</span> <span class="s">)</span> <span class="s">{</span>
        <span class="i">$readme</span> = <span class="q">`cat $dir/README`</span><span class="sc">;</span>
        <span class="i">$readme</span> =~ <span class="q">s /\n/&lt;BR&gt;/g</span><span class="sc">;</span>
        <span class="k">print</span> <span class="i">FILES</span> <span class="q">&quot;&lt;B&gt;README&lt;/B&gt;&lt;P&gt;$readme&lt;P&gt;&quot;</span><span class="sc">;</span>
    <span class="s">}</span>

    <span class="k">print</span> <span class="i">FILES</span> <span class="q">&quot;&lt;H2&gt;$local_filename Directories:&lt;/H2&gt;\n&quot;</span><span class="sc">;</span>
    <span class="k">print</span> <span class="q">&quot;\n$dir : Directories\n******************\n&quot;</span><span class="sc">;</span>
    <span class="k">print</span> <span class="i">FILES</span> <span class="q">&quot;(** indicates that a README file is included in the directory)&lt;P&gt;\n&quot;</span><span class="sc">;</span>
    <span class="k">print</span> <span class="i">FILES</span> <span class="q">&quot;&lt;UL&gt;&quot;</span><span class="sc">;</span>
    <span class="k">foreach</span> <span class="k">my</span> <span class="i">$directory</span> <span class="s">(</span><span class="i">@directories</span><span class="s">)</span> <span class="s">{</span>
        <span class="k">unless</span> <span class="s">(</span><span class="i">$directory</span><span class="s">)</span> <span class="s">{</span><span class="k">next</span><span class="s">}</span>
        <span class="k">my</span> <span class="i">$link</span> = <span class="q">&quot;&lt;A Href=$html_URL/$html_filename.$directory.dir.html&gt;&lt;B&gt;&quot;</span><span class="sc">;</span>
        <span class="i">$link</span> .= <span class="i">$directory</span><span class="sc">;</span>
        <span class="i">$link</span> .= <span class="q">&quot;&lt;/B&gt;&lt;/A&gt;&quot;</span><span class="sc">;</span>
        <span class="k">print</span> <span class="i">FILES</span> <span class="q">&quot;&lt;LI&gt;$link&quot;</span><span class="sc">;</span>

        <span class="k">if</span> <span class="s">(</span> <span class="k">-e</span> <span class="q">&quot;$self-&gt;{directory}/$directory/README&quot;</span> <span class="s">)</span> <span class="s">{</span>
            <span class="i">$readme</span> = <span class="q">'**'</span><span class="sc">;</span>
        <span class="s">}</span>
        <span class="k">else</span> <span class="s">{</span> <span class="i">$readme</span> = <span class="q">''</span><span class="sc">;</span> <span class="s">}</span>
        <span class="k">print</span> <span class="i">FILES</span> <span class="i">$readme</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">print</span> <span class="i">FILES</span> <span class="q">&quot;\n&lt;/UL&gt;&lt;/span&gt;\n&quot;</span><span class="sc">;</span>

    <span class="k">print</span> <span class="i">FILES</span> <span class="q">&quot;&lt;H2&gt;$local_filename Files:&lt;/H2&gt;\n&lt;UL&gt;\n&quot;</span><span class="sc">;</span>

    <span class="k">my</span> <span class="i">@files</span><span class="sc">;</span>
    <span class="k">foreach</span> <span class="k">my</span> <span class="i">$ext</span> <span class="s">(</span> <span class="k">keys</span> <span class="i">%Files</span> <span class="s">)</span> <span class="s">{</span>
        <span class="k">unless</span> <span class="s">(</span> <span class="i">$ext</span> &amp;&amp; <span class="i">$Files</span>{<span class="i">$ext</span>} <span class="s">)</span> <span class="s">{</span><span class="k">next</span><span class="s">}</span>
        <span class="k">print</span> <span class="i">FILES</span> <span class="q">&quot;&lt;h3&gt;'$ext' Files:&lt;/h3&gt;&quot;</span><span class="sc">;</span>
        <span class="k">foreach</span> <span class="k">my</span> <span class="i">$file</span> <span class="s">(</span> <span class="k">split</span> <span class="q">&quot;,&quot;</span><span class="cm">,</span> <span class="i">$Files</span>{<span class="i">$ext</span>} <span class="s">)</span> <span class="s">{</span>
            <span class="k">if</span> <span class="s">(</span> <span class="k">grep</span> <span class="q">/^$ext$/</span><span class="cm">,</span> <span class="i">@parse_extensions</span> <span class="s">)</span> <span class="s">{</span>
                <span class="k">my</span> <span class="i">$link</span> = <span class="q">&quot;&lt;A Href=$html_URL/$file.file.html&gt;&lt;B&gt;$file&lt;/B&gt;&lt;/A&gt;&quot;</span><span class="sc">;</span>
                <span class="k">print</span> <span class="i">FILES</span> <span class="q">&quot;\n&lt;LI&gt;$link&quot;</span><span class="sc">;</span>
                <span class="k">push</span><span class="s">(</span> <span class="i">@files</span><span class="cm">,</span> <span class="i">$file</span> <span class="s">)</span><span class="sc">;</span>
            <span class="s">}</span>
            <span class="k">else</span> <span class="s">{</span>
                <span class="k">print</span> <span class="i">FILES</span> <span class="q">&quot;\n&lt;LI&gt;$file&quot;</span><span class="sc">;</span>
            <span class="s">}</span>
        <span class="s">}</span>
    <span class="s">}</span>
    <span class="k">print</span> <span class="i">FILES</span> <span class="q">&quot;\n&lt;/UL&gt;&lt;/span&gt;\n&quot;</span><span class="sc">;</span>
    <span class="k">close</span><span class="s">(</span><span class="w">FILES</span><span class="s">)</span><span class="sc">;</span>

    <span class="k">my</span> <span class="i">$localuplink</span> = <span class="q">&quot;$html_URL/$html_filename.dir.html&quot;</span><span class="sc">;</span>

    <span class="c">### Now build the directory file recursively.. ###</span>
    <span class="k">foreach</span> <span class="k">my</span> <span class="i">$directory</span> <span class="s">(</span><span class="i">@directories</span><span class="s">)</span> <span class="s">{</span>
        <span class="k">unless</span> <span class="s">(</span><span class="i">$directory</span><span class="s">)</span> <span class="s">{</span><span class="k">next</span><span class="s">}</span>
        <span class="k">unless</span> <span class="s">(</span> <span class="i">$directory</span> =~ <span class="q">/^CVS$/</span> <span class="s">)</span> <span class="s">{</span>
            <span class="i">$self</span><span class="i">-&gt;generate_html_navigator</span><span class="s">(</span>
                -<span class="w">filename</span> <span class="cm">=&gt;</span> <span class="i">$directory</span><span class="cm">,</span>
                -<span class="w">html_dir</span> <span class="cm">=&gt;</span> <span class="i">$html_directory</span><span class="cm">,</span>
                -<span class="w">html_URL</span> <span class="cm">=&gt;</span> <span class="i">$html_URL</span><span class="cm">,</span>
                -<span class="w">dir</span>      <span class="cm">=&gt;</span> <span class="q">&quot;$dir/$directory&quot;</span><span class="cm">,</span>
                -<span class="w">uplink</span>   <span class="cm">=&gt;</span> <span class="i">$localuplink</span><span class="cm">,</span>
                -<span class="w">ext</span>      <span class="cm">=&gt;</span> <span class="i">$ext</span>
            <span class="s">)</span><span class="sc">;</span>
        <span class="s">}</span>
    <span class="s">}</span>

    <span class="k">foreach</span> <span class="k">my</span> <span class="i">$file</span> <span class="s">(</span><span class="i">@files</span><span class="s">)</span> <span class="s">{</span>
        <span class="i">$self</span><span class="i">-&gt;generate_html_info</span><span class="s">(</span>
            -<span class="w">filename</span> <span class="cm">=&gt;</span> <span class="i">$file</span><span class="cm">,</span>
            -<span class="w">dir</span>      <span class="cm">=&gt;</span> <span class="i">$dir</span><span class="cm">,</span>
            -<span class="w">html_dir</span> <span class="cm">=&gt;</span> <span class="i">$html_directory</span><span class="cm">,</span>
            -<span class="w">uplink</span>   <span class="cm">=&gt;</span> <span class="i">$localuplink</span>
        <span class="s">)</span><span class="sc">;</span>
    <span class="s">}</span>

    <span class="k">return</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">#####################</span>
<a name="generate_html_info-"></a><span class="k">sub </span><span class="m">generate_html_info</span> <span class="s">{</span>
<span class="c">#####################</span>
    <span class="k">my</span> <span class="i">$self</span> = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">%args</span> = <span class="i">@_</span><span class="sc">;</span>

    <span class="k">my</span> <span class="i">$files</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$ext</span><span class="sc">;</span>

    <span class="k">my</span> <span class="i">$filename</span>       = <span class="i">$args</span>{-<span class="w">filename</span>} || <span class="q">'directory_navigator'</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$dir</span>            = <span class="i">$args</span>{-<span class="w">dir</span>}      || <span class="i">$self</span>-&gt;{<span class="w">directory</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$html_directory</span> = <span class="i">$args</span>{-<span class="w">html_dir</span>} || <span class="q">''</span><span class="sc">;</span>                      <span class="c">## output directory (for html file)</span>
    <span class="k">my</span> <span class="i">$uplink</span> = <span class="i">$args</span>{-<span class="w">uplink</span>}<span class="sc">;</span>                                      <span class="c">## provide link to previous level...</span>

    <span class="k">my</span> <span class="i">@routines</span><span class="sc">;</span>
    <span class="k">if</span> <span class="s">(</span> <span class="k">-e</span> <span class="q">&quot;$dir/$filename&quot;</span> <span class="s">)</span> <span class="s">{</span>
        <span class="i">@routines</span> = <span class="q">`grep '^sub [a-zA-Z]' $dir/$filename`</span><span class="sc">;</span>
    <span class="s">}</span>

    <span class="k">my</span> <span class="i">$File_object</span> = <span class="w">Code</span><span class="w">-&gt;new</span><span class="s">(</span><span class="q">&quot;$dir/$filename&quot;</span><span class="s">)</span><span class="sc">;</span>
    <span class="i">$File_object</span><span class="i">-&gt;generate_code</span><span class="s">(</span><span class="s">)</span><span class="sc">;</span>

    <span class="k">my</span> <span class="i">$description</span> = <span class="i">$File_object</span><span class="i">-&gt;description</span><span class="sc">;</span>
    <span class="i">$description</span> =~ <span class="q">s /\n/&lt;BR&gt;/g</span><span class="sc">;</span>

    <span class="k">my</span> <span class="i">@functions</span>  = <span class="k">keys</span> <span class="i">%</span>{ <span class="i">$File_object</span>-&gt;{<span class="w">public_functions</span>} }<span class="sc">;</span>
    <span class="k">my</span> <span class="i">@methods</span>    = <span class="i">@</span>{ <span class="i">$File_object</span><span class="i">-&gt;get_methods</span><span class="s">(</span> -<span class="w">verbose</span> <span class="cm">=&gt;</span> <span class="n">1</span><span class="cm">,</span> -<span class="w">format</span> <span class="cm">=&gt;</span> <span class="q">'html'</span> <span class="s">)</span> }<span class="sc">;</span>
    <span class="k">my</span> <span class="i">@attributes</span> = <span class="i">@</span>{ <span class="i">$File_object</span><span class="i">-&gt;get_attributes</span><span class="s">(</span> -<span class="w">verbose</span> <span class="cm">=&gt;</span> <span class="n">1</span><span class="cm">,</span> -<span class="w">format</span> <span class="cm">=&gt;</span> <span class="q">'html'</span> <span class="s">)</span> }<span class="sc">;</span>

    <span class="k">open</span><span class="s">(</span> <span class="w">FILES</span><span class="cm">,</span> <span class="q">&quot;&gt;$html_directory/$filename.file.html&quot;</span> <span class="s">)</span> <span class="k">or</span> <span class="k">die</span> <span class="q">&quot;cannot open $html_directory/$filename.file.html&quot;</span><span class="sc">;</span>

    <span class="k">if</span> <span class="s">(</span><span class="i">$uplink</span><span class="s">)</span> <span class="s">{</span> <span class="k">print</span> <span class="i">FILES</span> <span class="q">&quot;&lt;A Href=$uplink&gt;&lt;B&gt;../&lt;/B&gt;&lt;/A&gt;&lt;P&gt;&quot;</span> <span class="s">}</span>

    <span class="k">print</span> <span class="i">FILES</span> <span class="q">&quot;&lt;H2&gt;$filename&lt;/H2&gt;\n&quot;</span><span class="sc">;</span>
    <span class="k">print</span> <span class="i">FILES</span> <span class="q">&quot;$description&lt;P&gt;&quot;</span><span class="sc">;</span>

    <span class="k">if</span> <span class="s">(</span><span class="i">@attributes</span><span class="s">)</span> <span class="s">{</span>
        <span class="k">print</span> <span class="i">FILES</span> <span class="q">&quot;&lt;h3&gt;Attributes&lt;/h3&gt;&lt;UL&gt;&quot;</span><span class="sc">;</span>
        <span class="k">foreach</span> <span class="k">my</span> <span class="i">$attribute</span> <span class="s">(</span><span class="i">@attributes</span><span class="s">)</span> <span class="s">{</span>
            <span class="k">print</span> <span class="i">FILES</span> <span class="q">&quot;&lt;LI&gt;$attribute:&quot;</span><span class="sc">;</span>
        <span class="s">}</span>
        <span class="k">print</span> <span class="i">FILES</span> <span class="q">&quot;&lt;/UL&gt;&quot;</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">if</span> <span class="s">(</span><span class="i">@functions</span><span class="s">)</span> <span class="s">{</span>
        <span class="k">print</span> <span class="i">FILES</span> <span class="q">&quot;&lt;h3&gt;Functions&lt;/h3&gt;&lt;UL&gt;&quot;</span><span class="sc">;</span>
        <span class="k">foreach</span> <span class="k">my</span> <span class="i">$function</span> <span class="s">(</span><span class="i">@functions</span><span class="s">)</span> <span class="s">{</span>
            <span class="k">print</span> <span class="i">FILES</span> <span class="q">&quot;&lt;LI&gt;$function:&quot;</span><span class="sc">;</span>
        <span class="s">}</span>
        <span class="k">print</span> <span class="i">FILES</span> <span class="q">&quot;&lt;/UL&gt;&quot;</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">if</span> <span class="s">(</span><span class="i">@methods</span><span class="s">)</span> <span class="s">{</span>
        <span class="k">print</span> <span class="i">FILES</span> <span class="q">&quot;&lt;h3&gt;Methods&lt;/h3&gt;&lt;UL&gt;&quot;</span><span class="sc">;</span>
        <span class="k">foreach</span> <span class="k">my</span> <span class="i">$method</span> <span class="s">(</span><span class="i">@methods</span><span class="s">)</span> <span class="s">{</span>
            <span class="k">print</span> <span class="i">FILES</span> <span class="q">&quot;&lt;LI&gt;$method:&quot;</span><span class="sc">;</span>
        <span class="s">}</span>
        <span class="k">print</span> <span class="i">FILES</span> <span class="q">&quot;&lt;/UL&gt;&quot;</span><span class="sc">;</span>
    <span class="s">}</span>

    <span class="k">return</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">#######################</span>
<a name="search_directories-"></a><span class="k">sub </span><span class="m">search_directories</span> <span class="s">{</span>
<span class="c">#######################</span>
    <span class="k">my</span> <span class="i">$self</span> = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">%args</span> = <span class="i">@_</span><span class="sc">;</span>

    <span class="k">my</span> <span class="i">$dir</span>   = <span class="i">$args</span>{-<span class="w">directory</span>} || <span class="i">$self</span>-&gt;{<span class="w">directories</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$ext</span>   = <span class="i">$args</span>{-<span class="w">ext</span>}       || <span class="q">''</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$depth</span> = <span class="i">$args</span>{-<span class="w">depth</span>}     || <span class="n">1</span><span class="sc">;</span>                      <span class="c">## depth to search</span>

    <span class="k">my</span> <span class="i">@exclude_dirs</span> = <span class="s">(</span><span class="q">'CVS'</span><span class="s">)</span><span class="sc">;</span>

    <span class="k">print</span> <span class="q">&quot;Search directories:\n&quot;</span><span class="sc">;</span>
    <span class="k">print</span> <span class="q">&quot;$dir : &quot;</span><span class="sc">;</span>
    <span class="k">print</span> <span class="k">join</span> <span class="q">&quot;\n&quot;</span><span class="cm">,</span> <span class="i">@</span>{<span class="i">$dir</span>}<span class="sc">;</span>
    <span class="k">print</span> <span class="q">&quot;$dir : &quot;</span><span class="sc">;</span>
    <span class="k">print</span> <span class="k">join</span> <span class="q">&quot;\n&quot;</span><span class="cm">,</span> <span class="i">@</span>{ <span class="i">$self</span>-&gt;{<span class="w">directories</span>} }<span class="sc">;</span>
    <span class="k">print</span> <span class="q">&quot;\nDONE\n&quot;</span><span class="sc">;</span>

    <span class="k">foreach</span> <span class="k">my</span> <span class="i">$directory</span> <span class="s">(</span> <span class="i">@</span>{<span class="i">$dir</span>} <span class="s">)</span> <span class="s">{</span>
        <span class="k">print</span> <span class="q">&quot;$directory..\n&quot;</span><span class="sc">;</span>
        <span class="k">my</span> <span class="i">$dir_name</span><span class="sc">;</span>
        <span class="k">if</span> <span class="s">(</span> <span class="i">$directory</span> =~ <span class="q">/^$self-&gt;{directory}\/+(.*)/</span> <span class="s">)</span> <span class="s">{</span>
            <span class="i">$dir_name</span> = <span class="i">$1</span><span class="sc">;</span>
        <span class="s">}</span>
        <span class="k">else</span> <span class="s">{</span>
            <span class="k">print</span> <span class="q">&quot;$directory in unrecognized format ?\n&quot;</span><span class="sc">;</span>
            <span class="k">next</span><span class="sc">;</span>
        <span class="s">}</span>
        <span class="k">if</span> <span class="s">(</span> <span class="i">$dir_name</span> =~ <span class="q">/\/CVS$/</span> <span class="s">)</span> <span class="s">{</span>
            <span class="k">next</span><span class="sc">;</span>
        <span class="s">}</span>    <span class="c">## skip this directory if only CVS directory</span>
        <span class="k">if</span> <span class="s">(</span> <span class="i">$dir_name</span> =~ <span class="q">/^auto/</span> <span class="s">)</span> <span class="s">{</span>
            <span class="k">next</span><span class="sc">;</span>
        <span class="s">}</span>    <span class="c">## skip this directory if only auto directory</span>
        <span class="k">if</span> <span class="s">(</span> <span class="k">grep</span> <span class="q">/^$dir_name$/</span><span class="cm">,</span> <span class="i">@exclude_dirs</span> <span class="s">)</span> <span class="s">{</span>
            <span class="k">next</span><span class="sc">;</span>
        <span class="s">}</span>    <span class="c">## skip this directory if in exclusion list</span>

        <span class="k">if</span> <span class="s">(</span> <span class="k">-e</span> <span class="q">&quot;$directory/README&quot;</span> <span class="s">)</span> <span class="s">{</span>
            <span class="i">$self</span>-&gt;{<span class="w">dir_info</span>}-&gt;{<span class="i">$dir_name</span>}-&gt;{<span class="w">description</span>} = <span class="q">`cat $dir/README`</span><span class="sc">;</span>
        <span class="s">}</span>
        <span class="k">else</span> <span class="s">{</span>
            <span class="k">print</span> <span class="q">&quot;Please update description (add README file) for $directory directory\n&quot;</span><span class="sc">;</span>
            <span class="i">$self</span>-&gt;{<span class="w">dir_info</span>}-&gt;{<span class="i">$dir_name</span>}-&gt;{<span class="w">description</span>} = <span class="q">'incomplete documentation'</span><span class="sc">;</span>
        <span class="s">}</span>

        <span class="k">my</span> <span class="i">$name</span> = <span class="q">&quot;*$ext&quot;</span><span class="sc">;</span>

        <span class="k">my</span> <span class="i">@files</span> = <span class="k">split</span> <span class="q">&quot;\n&quot;</span><span class="cm">,</span> <span class="q">`ls $directory/$name`</span><span class="sc">;</span>
        <span class="i">$self</span>-&gt;{<span class="w">dir_info</span>}-&gt;{<span class="i">$dir_name</span>}-&gt;{<span class="w">files</span>} = \<span class="i">@files</span><span class="sc">;</span>
        <span class="i">$self</span><span class="i">-&gt;search_perl_files</span><span class="s">(</span>
            -<span class="w">files</span>     <span class="cm">=&gt;</span> \<span class="i">@files</span><span class="cm">,</span>
            -<span class="w">ext</span>       <span class="cm">=&gt;</span> <span class="i">$ext</span><span class="cm">,</span>
            -<span class="w">directory</span> <span class="cm">=&gt;</span> <span class="i">$dir_name</span>
        <span class="s">)</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">return</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">###################</span>
<a name="search_perl_files-"></a><span class="k">sub </span><span class="m">search_perl_files</span> <span class="s">{</span>
<span class="c">###################</span>
    <span class="k">my</span> <span class="i">$self</span> = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">%args</span> = <span class="i">@_</span><span class="sc">;</span>

    <span class="k">my</span> <span class="i">$dir_name</span>  = <span class="i">$args</span>{-<span class="w">directory</span>} || <span class="i">$self</span>-&gt;{<span class="w">directory</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$file_list</span> = <span class="i">$args</span>{-<span class="w">files</span>}     || <span class="i">$self</span>-&gt;{<span class="w">files</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$ext</span>       = <span class="i">$args</span>{-<span class="w">ext</span>}       || <span class="q">''</span><span class="sc">;</span>

    <span class="k">foreach</span> <span class="k">my</span> <span class="i">$file</span> <span class="s">(</span> <span class="i">@</span>{<span class="i">$file_list</span>} <span class="s">)</span> <span class="s">{</span>
        <span class="k">if</span> <span class="s">(</span> <span class="i">$file</span> =~ <span class="q">/$self-&gt;{directory}\/(.*\/)(.+$ext)$/</span> <span class="s">)</span> <span class="s">{</span>
            <span class="k">my</span> <span class="i">$dir</span>      = <span class="i">$1</span><span class="sc">;</span>
            <span class="k">my</span> <span class="i">$filename</span> = <span class="i">$2</span><span class="sc">;</span>

            <span class="k">my</span> <span class="i">$output</span> = <span class="q">`grep -B 100 'use strict' $file`</span><span class="sc">;</span>
            <span class="k">if</span> <span class="s">(</span> <span class="i">$output</span> =~ <span class="q">/$filename[\n\s\#]+([a-zA-Z].*?)\n/</span> <span class="s">)</span> <span class="s">{</span>
                <span class="i">$self</span>-&gt;{<span class="w">file_info</span>}-&gt;{<span class="i">$filename</span>}-&gt;{<span class="w">description</span>} = <span class="i">$1</span><span class="sc">;</span>    <span class="c">### get first string of text after file name</span>
            <span class="s">}</span>
            <span class="i">$self</span>-&gt;{<span class="w">file_info</span>}-&gt;{<span class="i">$filename</span>}-&gt;{<span class="w">directory</span>} = <span class="i">$dir</span><span class="sc">;</span>

            <span class="k">print</span> <span class="q">&quot;$filename :\n $self-&gt;{file_info}-&gt;{$filename}-&gt;{description}\n&quot;</span><span class="sc">;</span>
            <span class="k">my</span> <span class="i">@routines</span> = <span class="q">`grep '^sub ' $file`</span><span class="sc">;</span>
            <span class="k">foreach</span> <span class="k">my</span> <span class="i">$routine</span> <span class="s">(</span><span class="i">@routines</span><span class="s">)</span> <span class="s">{</span>
                <span class="k">my</span> <span class="i">$name</span><span class="sc">;</span>
                <span class="k">if</span> <span class="s">(</span> <span class="i">$routine</span> =~ <span class="q">/sub (.*)\s*\{/</span> <span class="s">)</span> <span class="s">{</span> <span class="i">$name</span> = <span class="i">$1</span> <span class="s">}</span>
                <span class="k">push</span><span class="s">(</span> <span class="i">@</span>{ <span class="i">$self</span>-&gt;{<span class="w">file_info</span>}-&gt;{<span class="i">$filename</span>}-&gt;{<span class="w">routines</span>} }<span class="cm">,</span> <span class="i">$name</span> <span class="s">)</span><span class="sc">;</span>

                <span class="c">#		print &quot;+ $name\n&quot;;</span>
            <span class="s">}</span>
        <span class="s">}</span>
    <span class="s">}</span>
    <span class="k">return</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">################</span>
<a name="generate_HTML-"></a><span class="k">sub </span><span class="m">generate_HTML</span> <span class="s">{</span>
<span class="c">################</span>
    <span class="k">my</span> <span class="i">$self</span> = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">%args</span> = <span class="i">@_</span><span class="sc">;</span>

    <span class="k">my</span> <span class="i">$files</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$ext</span><span class="sc">;</span>

    <span class="k">my</span> <span class="i">$html_directory</span> = <span class="i">$args</span>{-<span class="w">html_dir</span>} || <span class="q">''</span><span class="sc">;</span>    <span class="c">## output directory (for perldocs)</span>
    <span class="k">my</span> <span class="i">$html_URL</span>       = <span class="i">$args</span>{-<span class="w">html_URL</span>} || <span class="q">''</span><span class="sc">;</span>    <span class="c">## output directory (for perldocs)</span>
    <span class="k">my</span> <span class="i">$css_dir</span>        = <span class="i">$args</span>{-<span class="w">css_dir</span>}  || <span class="q">''</span><span class="sc">;</span>

    <span class="k">unless</span> <span class="s">(</span><span class="i">$files</span><span class="s">)</span> <span class="s">{</span>
        <span class="k">print</span> <span class="q">&quot;Are you sure you want to regenerate ALL html files? (y/n)&quot;</span><span class="sc">;</span>
        <span class="k">my</span> <span class="i">$ans</span> = <span class="i">Prompt_Input</span><span class="s">(</span> -<span class="w">type</span> <span class="cm">=&gt;</span> <span class="q">'char'</span> <span class="s">)</span><span class="sc">;</span>
        <span class="k">unless</span> <span class="s">(</span> <span class="i">$ans</span> =~ <span class="q">/y|Y/</span> <span class="s">)</span> <span class="s">{</span> <span class="k">exit</span><span class="sc">;</span> <span class="s">}</span>
    <span class="s">}</span>

    <span class="k">my</span> <span class="i">$directory</span> = <span class="i">$self</span>-&gt;{<span class="w">directory</span>}<span class="sc">;</span>

    <span class="k">foreach</span> <span class="k">my</span> <span class="i">$module</span> <span class="s">(</span> <span class="k">keys</span> <span class="i">%</span>{ <span class="i">$self</span>-&gt;{<span class="w">dir_info</span>} } <span class="s">)</span> <span class="s">{</span>
        <span class="k">open</span><span class="s">(</span> <span class="w">FILES</span><span class="cm">,</span> <span class="q">&quot;&gt;$html_directory/$module&quot;</span> . <span class="q">&quot;_modules.help&quot;</span> <span class="s">)</span> <span class="k">or</span> <span class="k">die</span> <span class="q">&quot;cannot open $html_directory/$module&quot;</span> . <span class="q">&quot;_modules.help&quot;</span><span class="sc">;</span>

        <span class="k">print</span> <span class="i">FILES</span> <span class="q">&quot;&lt;H2&gt;$module Modules&lt;/H2&gt;\n&lt;P&gt;\n&quot;</span><span class="sc">;</span>
        <span class="k">my</span> <span class="i">$readme</span> = <span class="q">`cat $directory/$module/README`</span><span class="sc">;</span>
        <span class="i">$readme</span> =~ <span class="q">s /\n/&lt;BR&gt;/g</span><span class="sc">;</span>
        <span class="k">unless</span> <span class="s">(</span> <span class="i">$readme</span> =~ <span class="q">/no such/i</span> <span class="s">)</span> <span class="s">{</span>
            <span class="k">print</span> <span class="i">FILES</span> <span class="i">$readme</span><span class="sc">;</span>
        <span class="s">}</span>
        <span class="k">print</span> <span class="i">FILES</span> <span class="q">&quot;\n&lt;span class=small&gt;&lt;UL&gt;\n&quot;</span><span class="sc">;</span>

        <span class="k">foreach</span> <span class="k">my</span> <span class="i">$file</span> <span class="s">(</span> <span class="i">@</span>{ <span class="i">$self</span>-&gt;{<span class="w">dir_info</span>}-&gt;{<span class="i">$module</span>}-&gt;{<span class="w">files</span>} } <span class="s">)</span> <span class="s">{</span>
            <span class="k">if</span> <span class="s">(</span> <span class="i">$file</span> =~ <span class="q">/.*\/(.*?)$/</span> <span class="s">)</span> <span class="s">{</span> <span class="i">$file</span> = <span class="i">$1</span> <span class="s">}</span>
            <span class="k">my</span> <span class="i">$link</span>        = <span class="q">&quot;&lt;A Href=$html_URL&gt;$file&lt;/A&gt;&quot;</span><span class="sc">;</span>
            <span class="k">my</span> <span class="i">$description</span> = <span class="i">$self</span>-&gt;{<span class="w">file_info</span>}-&gt;{<span class="i">$file</span>}-&gt;{<span class="w">description</span>}<span class="sc">;</span>
            <span class="i">$description</span> =~ <span class="q">s/\n/&lt;BR&gt;/g</span><span class="sc">;</span>
            <span class="k">print</span> <span class="i">FILES</span> <span class="q">&quot;\n&lt;LI&gt;$link : $description&quot;</span><span class="sc">;</span>
        <span class="s">}</span>
        <span class="k">print</span> <span class="i">FILES</span> <span class="q">&quot;\n&lt;/UL&gt;&lt;/span&gt;\n&quot;</span><span class="sc">;</span>
        <span class="k">close</span><span class="s">(</span><span class="w">FILES</span><span class="s">)</span><span class="sc">;</span>
        <span class="k">print</span> <span class="q">&quot;Wrote to $module&quot;</span> . <span class="q">&quot;_modules.help (link urldir of $0)\n&quot;</span><span class="sc">;</span>
    <span class="s">}</span>

    <span class="k">return</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">##################</span>
<a name="generate_perldoc-"></a><span class="k">sub </span><span class="m">generate_perldoc</span> <span class="s">{</span>
<span class="c">##################</span>
    <span class="c">#</span>
    <span class="c"># unfinished...</span>
    <span class="c">#</span>
    <span class="k">my</span> <span class="i">$self</span> = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">%args</span> = <span class="i">@_</span><span class="sc">;</span>

    <span class="k">my</span> <span class="i">$files</span> = <span class="i">$args</span>{-<span class="w">files</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$ext</span><span class="sc">;</span>

    <span class="k">my</span> <span class="i">$help</span>            = <span class="i">$args</span>{-<span class="w">help</span>}<span class="sc">;</span>               <span class="c">## generate help files</span>
    <span class="k">my</span> <span class="i">$perldoc</span>         = <span class="i">$args</span>{-<span class="w">perldoc</span>} || <span class="q">''</span><span class="sc">;</span>      <span class="c">## css directory</span>
    <span class="k">my</span> <span class="i">$css_dir</span>         = <span class="i">$args</span>{-<span class="w">css_dir</span>} || <span class="q">''</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$html_directory</span>  = <span class="i">$args</span>{-<span class="w">html_dir</span>} || <span class="q">''</span><span class="sc">;</span>     <span class="c">## output directory (for perldocs)</span>
    <span class="k">my</span> <span class="i">$image_directory</span> = <span class="i">$args</span>{-<span class="w">image_dir</span>} || <span class="q">''</span><span class="sc">;</span>    <span class="c">## output directory (for perldocs)</span>

    <span class="i">$self</span>-&gt;{<span class="w">css_dir</span>}   = <span class="i">$css_dir</span><span class="sc">;</span>
    <span class="i">$self</span>-&gt;{<span class="w">image_dir</span>} = <span class="i">$image_directory</span><span class="sc">;</span>
    <span class="i">$self</span>-&gt;{<span class="w">html_dir</span>}  = <span class="i">$html_directory</span><span class="sc">;</span>

    <span class="k">if</span> <span class="s">(</span> <span class="i">$perldoc</span> &amp;&amp; !<span class="i">$files</span> <span class="s">)</span> <span class="s">{</span>
        <span class="k">print</span> <span class="q">&quot;Are you sure you want to insert Perldoc to and re-organize ALL source files? (y/n)&quot;</span><span class="sc">;</span>
        <span class="k">my</span> <span class="i">$ans</span> = <span class="i">Prompt_Input</span><span class="s">(</span> -<span class="w">type</span> <span class="cm">=&gt;</span> <span class="q">'char'</span> <span class="s">)</span><span class="sc">;</span>
        <span class="k">unless</span> <span class="s">(</span> <span class="i">$ans</span> =~ <span class="q">/y|Y/</span> <span class="s">)</span> <span class="s">{</span> <span class="k">exit</span><span class="sc">;</span> <span class="s">}</span>
    <span class="s">}</span>

    <span class="k">my</span> <span class="i">%List</span><span class="sc">;</span>                                         <span class="c">## use only specified list if given...</span>
    <span class="k">if</span> <span class="s">(</span><span class="i">$files</span><span class="s">)</span> <span class="s">{</span>
        <span class="k">foreach</span> <span class="k">my</span> <span class="i">$file</span> <span class="s">(</span> <span class="k">split</span> <span class="q">/,/</span><span class="cm">,</span> <span class="i">$files</span> <span class="s">)</span> <span class="s">{</span>
            <span class="i">$List</span>{<span class="i">$file</span>} = <span class="n">1</span><span class="sc">;</span>
        <span class="s">}</span>
    <span class="s">}</span>

    <span class="k">foreach</span> <span class="k">my</span> <span class="i">$dir</span> <span class="s">(</span> <span class="k">keys</span> <span class="i">%</span>{ <span class="i">$self</span>-&gt;{<span class="w">dir_info</span>} } <span class="s">)</span> <span class="s">{</span>
        <span class="k">foreach</span> <span class="k">my</span> <span class="i">$file</span> <span class="s">(</span> <span class="i">@</span>{ <span class="i">$self</span>-&gt;{<span class="w">dir_info</span>}-&gt;{<span class="w">files</span>} } <span class="s">)</span> <span class="s">{</span>
            <span class="k">unless</span> <span class="s">(</span> <span class="i">$file</span> =~ <span class="q">/.pm$/</span> <span class="s">)</span> <span class="s">{</span>
                <span class="k">next</span><span class="sc">;</span>
            <span class="s">}</span>                                         <span class="c">## only build code for pl &amp; pm files ##</span>
            <span class="k">if</span> <span class="s">(</span> <span class="i">$perldoc</span> &amp;&amp; <span class="s">(</span> !<span class="i">$files</span> || <span class="k">exists</span> <span class="i">$List</span>{<span class="i">$file</span>} <span class="s">)</span> <span class="s">)</span> <span class="s">{</span>
                <span class="i">_build_code</span><span class="s">(</span> <span class="q">&quot;$dir/$file&quot;</span><span class="cm">,</span> <span class="i">$self</span>-&gt;{<span class="w">directories</span>} <span class="s">)</span><span class="sc">;</span>
                <span class="i">$self</span><span class="i">-&gt;_build_perldoc</span><span class="s">(</span> <span class="i">$dir</span><span class="cm">,</span> <span class="i">$file</span> <span class="s">)</span><span class="sc">;</span>
            <span class="s">}</span>
        <span class="s">}</span>
    <span class="s">}</span>
    <span class="k">return</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">##############################</span>
<span class="c"># public_functions           #</span>
<span class="c">##############################</span>
<span class="c">##############################</span>
<span class="c"># private_methods            #</span>
<span class="c">##############################</span>

<span class="c">#####################</span>
<a name="_build_perldoc-"></a><span class="k">sub </span><span class="m">_build_perldoc</span> <span class="s">{</span>
<span class="c">#####################</span>
    <span class="c">#</span>
    <span class="c"># Runs the pod2html program to convert perldoc into HTML help files</span>
    <span class="c">#</span>
    <span class="k">my</span> <span class="i">$self</span> = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$dir</span>  = <span class="k">shift</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$file</span> = <span class="k">shift</span><span class="sc">;</span>

    <span class="k">my</span> <span class="i">$html_dir</span>  = <span class="i">$self</span>-&gt;{<span class="w">html_dir</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$image_dir</span> = <span class="i">$self</span>-&gt;{<span class="w">image_dir</span>}<span class="sc">;</span>
    <span class="k">my</span> <span class="i">$css_dir</span>   = <span class="i">$self</span>-&gt;{<span class="w">css_dir</span>}<span class="sc">;</span>

    <span class="k">my</span> <span class="i">$infile</span>  = <span class="q">&quot;$dir/$file&quot;</span><span class="sc">;</span>
    <span class="k">my</span> <span class="i">$outfile</span> = <span class="q">&quot;$html_dir/$file.html&quot;</span><span class="sc">;</span>

    <span class="k">my</span> <span class="i">$command</span> = <span class="q">&quot;/usr/bin/pod2html --infile=$infile --outfile=$outfile -css=$css_dir&quot;</span><span class="sc">;</span>

    <span class="k">print</span> <span class="i">try_system_command</span><span class="s">(</span><span class="i">$command</span><span class="s">)</span><span class="sc">;</span>

    <span class="c"># Add uplinks to the perldoc HTML generated...</span>
    <span class="k">if</span> <span class="s">(</span> <span class="k">-f</span> <span class="i">$outfile</span> <span class="s">)</span> <span class="s">{</span>
        <span class="k">my</span> <span class="i">$img_dir</span> = <span class="i">$image_dir</span><span class="sc">;</span>
        <span class="i">$img_dir</span> =~ <span class="q">s/\//\\\//g</span><span class="sc">;</span>
        <span class="k">my</span> <span class="i">$localuplink</span> = <span class="q">&quot;&amp;nbsp;&lt;a href='#top'&gt;&lt;img src=\\/$img_dir\\/uplink.png&gt;&lt;\\/a&gt;&quot;</span><span class="sc">;</span>
        <span class="i">$command</span> = <span class="q">&quot;/usr/bin/perl -i -pe 's/(&lt;[L|l][I|i]&gt;.*)\\s*&amp;lt;UPLINK&amp;gt;(.*&lt;\\/[L|l][I|i]&gt;)/\$1\$2/g' $outfile&quot;</span><span class="sc">;</span>
        <span class="k">print</span> <span class="i">try_system_command</span><span class="s">(</span><span class="i">$command</span><span class="s">)</span><span class="sc">;</span>
        <span class="i">$command</span> = <span class="q">&quot;/usr/bin/perl -i -pe 's/(&lt;[H|h]\\d{1}&gt;.*)&amp;lt;UPLINK&amp;gt;(.*&lt;\\/[H|h]\\d{1}&gt;)/\$1$localuplink\$2/g' $outfile&quot;</span><span class="sc">;</span>
        <span class="k">print</span> <span class="i">try_system_command</span><span class="s">(</span><span class="i">$command</span><span class="s">)</span><span class="sc">;</span>
        <span class="k">print</span> <span class="q">&quot;$dir/$file: Perldoc HTML generated ($outfile).\n&quot;</span><span class="sc">;</span>
    <span class="s">}</span>
    <span class="k">else</span> <span class="s">{</span>
        <span class="k">print</span> <span class="q">&quot;***$dir/$file: Perldoc HTML not generated.\n&quot;</span><span class="sc">;</span>
    <span class="s">}</span>
<span class="s">}</span>

<span class="c">##############################</span>
<span class="c"># private_functions          #</span>
<span class="c">##############################</span>

<span class="c">#</span>
<span class="c"># Code to build Perldoc documentation and associated html files...</span>
<span class="c">#</span>
<span class="c">#####################</span>
<a name="_build_code-"></a><span class="k">sub </span><span class="m">_build_code</span> <span class="s">{</span>
<span class="c">#####################</span>
    <span class="c">#</span>
    <span class="c"># Re-organize the code and insert perldoc into code</span>
    <span class="c">#</span>
    <span class="k">my</span> <span class="i">$file</span> = <span class="k">shift</span><span class="sc">;</span>    <span class="c"># Source file to insert Perldoc and re-organize [String]</span>
    <span class="k">my</span> <span class="i">$dirs</span> = <span class="k">shift</span><span class="sc">;</span>

    <span class="k">my</span> <span class="i">$code</span> = <span class="w">Code</span><span class="w">-&gt;new</span><span class="s">(</span><span class="i">$file</span><span class="s">)</span><span class="sc">;</span>
    <span class="i">$code</span><span class="i">-&gt;define_custom_modules</span><span class="s">(</span> -<span class="w">dirs</span> <span class="cm">=&gt;</span> <span class="i">$dirs</span> <span class="s">)</span><span class="sc">;</span>
    <span class="i">$code</span><span class="i">-&gt;generate_code</span><span class="s">(</span> -<span class="w">perldoc</span> <span class="cm">=&gt;</span> <span class="n">1</span> <span class="s">)</span><span class="sc">;</span>
    <span class="i">$code</span><span class="i">-&gt;save_code</span><span class="s">(</span> -<span class="w">overwrite</span> <span class="cm">=&gt;</span> <span class="n">1</span> <span class="s">)</span><span class="sc">;</span>

    <span class="k">print</span> <span class="q">&quot;$file: Perldoc inserted and code re-organized.\n&quot;</span><span class="sc">;</span>
<span class="s">}</span>

<span class="c">##############################</span>
<span class="c"># main_footer                #</span>
<span class="c">##############################</span>
<span class="c">##############################</span>
<span class="c"># perldoc_footer             #</span>
<span class="c">##############################</span>

</pre><p></p>
<hr />
<h1><a name="known_issues__uplink_">KNOWN ISSUES &lt;UPLINK&gt;</a></h1>
<p>&lt;&lt;KNOWN ISSUES&gt;&gt;</p>
<p>
</p>
<hr />
<h1><a name="future_improvements__uplink_">FUTURE IMPROVEMENTS &lt;UPLINK&gt;</a></h1>
<p>&lt;&lt;FUTURE IMPROVEMENTS&gt;&gt;</p>
<p>
</p>
<hr />
<h1><a name="authors__uplink_">AUTHORS &lt;UPLINK&gt;</a></h1>
<p>&lt;&lt;AUTHORS&gt;&gt;</p>
<p>
</p>
<hr />
<h1><a name="created__uplink_">CREATED &lt;UPLINK&gt;</a></h1>
<p>2003-11-27</p>
<p>
</p>
<hr />
<h1><a name="revision__uplink_">REVISION &lt;UPLINK&gt;</a></h1>
<p>$Id: Directory.pm,v 1.6 2004/08/27 18:26:51 rguin Exp $ (Release: $Name:  $)</p>

<pre>
<span class="k">return</span> <span class="n">1</span><span class="sc">;</span>
<a name="EOF-"></a></pre></body>

</html>
