package Chromatogram_Applet;

import java.io.*;public class TaggedRecord {		private String tagName;	private int tagNum, eNum, arrayLength, dataRecord, cryptic;	private short dataType, eLength;	private char[] tagArray;		public TaggedRecord() {}	public TaggedRecord(DataInput IN) throws IOException {		read(IN);}	public void read(DataInput filterIN) throws IOException {		int i;		char[] tagArray = new char[4];		for (i=0;i<4;i++) {			tagArray[i] += (char) (filterIN.readUnsignedByte());		}		tagName = new String(tagArray); // tag name, 4 bytes		tagNum = filterIN.readInt(); // tag number, 4 bytes		dataType = filterIN.readShort(); //element type, 2 bytes		eLength = filterIN.readShort(); //element size, 2 bytes		eNum = filterIN.readInt(); // number of elements, 4 bytes		arrayLength = filterIN.readInt(); // item size in bytes, 4 bytes		dataRecord = filterIN.readInt(); // offset of item's location, 4 bytes		cryptic = filterIN.readInt(); // reserved. 4 bytes			}	public String getTagName() {		return tagName;	}	public int getTagNum() {		return tagNum;	}	public short getDataType() {		return dataType;	}	public int getElementLength() {		return eLength;	}	public int getElementNumber() {		return eNum;	}	public int getArrayLength() {		return arrayLength;	}	public int getDataRecord() {		return dataRecord;	} }
