<html><head>
      <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
   <title>14.&nbsp;Web Services</title><link rel="stylesheet" href="html.css" type="text/css"><meta name="generator" content="DocBook XSL Stylesheets V1.68.1"><link rel="start" href="index.html" title="LIMS Help Pages"><link rel="up" href="ch19.html" title="Chapter&nbsp;19.&nbsp;Development"><link rel="prev" href="ch19s13.html" title="13.&nbsp;Internal System Testing"><link rel="next" href="ch20.html" title="Chapter&nbsp;20.&nbsp;Sequence Analysis"></head><body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF"><div class="navheader"><table width="100%" summary="Navigation header"><tr><th colspan="3" align="center">14.&nbsp;Web Services</th></tr><tr><td width="20%" align="left"><a accesskey="p" href="ch19s13.html">Prev</a>&nbsp;</td><th width="60%" align="center">Chapter&nbsp;19.&nbsp;Development</th><td width="20%" align="right">&nbsp;<a accesskey="n" href="ch20.html">Next</a></td></tr></table><hr></div><div class="section" lang="en"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="d0e15942"></a>14.&nbsp;Web Services</h2></div></div></div><div class="section" lang="en"><div class="titlepage"><div><div><h3 class="title"><a name="d0e15945"></a>14.1.&nbsp;LIMS Web Service</h3></div></div></div><p>Web services allows programmers to set up communications between systems independent of how the systems are implemented.&nbsp; It does not matter if one system is written in Java and one system is written in Ruby or Python. After some research, the LIMS implementation of web services will be in XML-RPC&nbsp; XML-RPC was chosen because:&nbsp;</p><div class="itemizedlist"><ul type="disc"><li><p>it is simpler to implement, not as complex as SOAP</p></li><li><p>uses XML as an message envelope</p></li><li><p>presents a distributed function (or method) call interface</p></li><li><p>it is a very simple protocol, defining only a few data types and commands</p></li></ul></div><div class="section" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="d0e15963"></a>14.1.1.&nbsp;Authentication</h4></div></div></div><div class="itemizedlist"><ul type="disc"><li><p>Use LDAP authentication and LIMS authentication to determine if a user can access the web service and what level of permission that the user has to LIMS methods and functions</p></li></ul></div></div><div class="section" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="d0e15970"></a>14.1.2.&nbsp;Data retrieval from the LIMS</h4></div></div></div><div class="itemizedlist"><ul type="disc"><li><p>Expose LIMS methods through the web service for data retrieval</p><div class="itemizedlist"><ul type="circle"><li><p>an example is allowing a user to access data from a sequencing run</p></li></ul></div></li></ul></div></div><div class="section" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="d0e15981"></a>14.1.3.&nbsp;Web Service Usage</h4></div></div></div><p><span class="emphasis"><em>Using the API as a web service:</em></span> <code class="code"> Authentication: LDAP Username: LDAP username Password: LDAP password (ie same password for JIRA) PERL Example: use XMLRPC::Lite; my $web_service_client = XMLRPC::Lite -&gt;proxy("http://lims02.bcgsc.ca/SDB_beta/cgi-bin/Web_Service.pl"); ## Creating a login object my $valid_login = $web_service_client-&gt;call('lims_web_service.login',{'username' =&gt;'testlims', 'password' =&gt;'testlims'})-&gt; result; ## Calling an API method: my $return_data = $web_service_client-&gt;call('lims_web_service.&lt;API_method_name&gt;',&lt;login_object&gt;, &lt;api arguments as HASHREF&gt;); my $solexa_data = $web_service_client-&gt;call('lims_web_service.get_run_data',$valid_login, { 'library' =&gt; 'mylib', }) -&gt; result; print Dumper $data; Python Example: #!/usr/local/bin/python from xmlrpclib import ServerProxy limsy = ServerProxy("http://lims02.bcgsc.ca/SDB_beta/cgi-bin/Web_Service.pl") login = limsy.lims_web_service.login( {'username':'testlims','password':'testlims'} ) data = limsy.lims_web_service.get_run_data(login,{'library':'mylib' }) print data NOTE: The api arguments passed into the web service are equivalent to those passed directly to the API </code></p></div></div></div><div class="navfooter"><hr><table width="100%" summary="Navigation footer"><tr><td width="40%" align="left"><a accesskey="p" href="ch19s13.html">Prev</a>&nbsp;</td><td width="20%" align="center"><a accesskey="u" href="ch19.html">Up</a></td><td width="40%" align="right">&nbsp;<a accesskey="n" href="ch20.html">Next</a></td></tr><tr><td width="40%" align="left" valign="top">13.&nbsp;Internal System Testing&nbsp;</td><td width="20%" align="center"><a accesskey="h" href="index.html">Home</a></td><td width="40%" align="right" valign="top">&nbsp;Chapter&nbsp;20.&nbsp;Sequence Analysis</td></tr></table></div></body></html>